{"version":3,"sources":["hooks/qa/useAnswerQuestion.ts","components/qa/AnswerQuestion.tsx","pages/qa/InitialAnswer.tsx","components/general/Page.tsx","components/general/HeaderBreadcrumbs.tsx","utils/editor.ts","components/general/Markdown.tsx","hooks/qa/useQuestionInfo.ts","components/general/editor/MarkdownEditor.tsx"],"names":["useAnswerQuestion","useCallback","id","content","a","axios","post","PATH_API_QA","answerQuestion","handleAxiosException","LabelStyle","styled","Typography","theme","typography","subtitle2","color","palette","text","secondary","marginBottom","spacing","AnswerQuestionForm","questionID","title","description","enqueueSnackbar","useSnackbar","useState","answer","setAnswer","navigate","useNavigate","AnswerQuestionSchema","Yup","shape","formik","useFormik","enableReinitialize","initialValues","images","validationSchema","onSubmit","values","setSubmitting","resetForm","setErrors","message","variant","PATH_DASHBOARD","questions","errors","touched","handleSubmit","isSubmitting","value","noValidate","autoComplete","Grid","container","item","xs","md","Card","sx","p","Stack","gutterBottom","Markdown","MarkdownEditor","height","onChange","FormHelperText","error","px","LoadingButton","type","fullWidth","size","loading","PostQuestion","useParams","useQuestionInfo","Page","Container","maxWidth","HeaderBreadcrumbs","heading","links","name","href","props","children","other","action","moreLink","mb","display","alignItems","flexGrow","flexShrink","mt","isString","target","map","noWrap","hljs","configure","languages","window","katex","MarkdownWrapperStyle","isLight","mode","body1","paddingLeft","lineHeight","fontSize","margin","position","fontFamily","padding","borderRadius","borderRadiusMd","backgroundColor","background","neutral","breakpoints","up","width","left","top","disabled","overflowX","whiteSpace","common","white","grey","warning","components","h1","h2","h3","h4","h5","h6","hr","Divider","my","includes","Link","rel","rehypePlugins","rehypeRaw","rehypeHighlight","rehypeKatex","remarkPlugins","remarkMath","remarkGfm","initialState","question","setQuestion","useEffect","get","questionInfo","then","response","data","appearance","useAppearance","auth","useAuth","setVditor","vditor","Vditor","placeholder","toolbar","counter","enable","cache","preview","lineNumber","style","getThemeMode","math","inlineDigit","current","icon","upload","url","headers","accessToken","getAccessToken","undefined","Authorization","fieldName","filename","format","files","response_","JSON","parse","failed","success","forEach","push","stringify","msg","code","errFiles","succMap","tab","input","getValue"],"mappings":"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","file":"static/js/38.e4fd5b8b.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { useCallback } from \"react\";\nimport { PATH_API_QA } from \"../../routes/paths\";\nimport { handleAxiosException } from \"../../utils/exception\";\n\nconst useAnswerQuestion = (): ((\n  id: string,\n  content: string\n) => Promise<string | null>) =>\n  useCallback(async (id, content) => {\n    try {\n      await axios.post(PATH_API_QA.answerQuestion(id), {\n        content,\n      });\n      return null;\n    } catch (exception) {\n      return handleAxiosException(exception);\n    }\n  }, []);\nexport default useAnswerQuestion;\n","import { LoadingButton } from \"@mui/lab\";\nimport { Card, FormHelperText, Grid, Stack, Typography } from \"@mui/material\";\n// material\nimport { styled } from \"@mui/material/styles\";\nimport { Form, FormikProvider, useFormik } from \"formik\";\nimport { useSnackbar } from \"notistack\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport Markdown from \"../../components/general/Markdown\";\nimport useAnswerQuestion from \"../../hooks/qa/useAnswerQuestion\";\nimport { PATH_DASHBOARD } from \"../../routes/paths\";\nimport MarkdownEditor from \"../general/editor/MarkdownEditor\";\n\nconst LabelStyle = styled(Typography)(({ theme }) => ({\n  ...theme.typography.subtitle2,\n  color: theme.palette.text.secondary,\n  marginBottom: theme.spacing(1),\n}));\n\ntype AnswerQuestionProps = {\n  questionID: string;\n  title: string;\n  description: string;\n};\n\nexport default function AnswerQuestionForm({\n  questionID,\n  title,\n  description,\n}: AnswerQuestionProps): JSX.Element {\n  const { enqueueSnackbar } = useSnackbar();\n  const [answer, setAnswer] = useState(\"\");\n  const answerQuestion = useAnswerQuestion();\n  const navigate = useNavigate();\n\n  const AnswerQuestionSchema = Yup.object().shape({\n    content: Yup.string(),\n  });\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      content: \"\",\n      images: [],\n    },\n    validationSchema: AnswerQuestionSchema,\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      setSubmitting(true);\n      const message = await answerQuestion(questionID, answer);\n      setSubmitting(false);\n      if (message === null) {\n        setAnswer(\"\");\n        resetForm();\n        enqueueSnackbar(\"回答成功\", {\n          variant: \"success\",\n        });\n        navigate(PATH_DASHBOARD.questions);\n      } else {\n        enqueueSnackbar(message, {\n          variant: \"error\",\n        });\n      }\n    },\n  });\n\n  const { errors, touched, handleSubmit, isSubmitting } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={8}>\n            <Card sx={{ p: 3 }}>\n              <Stack spacing={3}>\n                <Typography variant=\"h3\" gutterBottom>\n                  {title}\n                </Typography>\n\n                <div>\n                  <LabelStyle>问题描述</LabelStyle>\n                  <Markdown>{description}</Markdown>\n                </div>\n\n                <div>\n                  <LabelStyle>我的回答</LabelStyle>\n                  <MarkdownEditor\n                    height={500}\n                    value={answer}\n                    onChange={setAnswer}\n                  />\n                  {touched.content && errors.content && (\n                    <FormHelperText error sx={{ px: 2 }}>\n                      {touched.content && errors.content}\n                    </FormHelperText>\n                  )}\n                </div>\n\n                <LoadingButton\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  size=\"large\"\n                  loading={isSubmitting}\n                >\n                  {\"提交答案\"}\n                </LoadingButton>\n              </Stack>\n            </Card>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n}\n","import { useParams } from \"react-router-dom\";\n// material\nimport { Container } from \"@mui/material\";\nimport Page from \"../../components/general/Page\";\nimport HeaderBreadcrumbs from \"../../components/general/HeaderBreadcrumbs\";\nimport { PATH_DASHBOARD } from \"../../routes/paths\";\nimport AnswerQuestion from \"../../components/qa/AnswerQuestion\";\nimport useQuestionInfo from \"../../hooks/qa/useQuestionInfo\";\n\nexport default function PostQuestion(): JSX.Element {\n  const { id = \"\" } = useParams();\n  const { title, description } = useQuestionInfo(id);\n\n  return (\n    <Page title=\"回答问题\">\n      <Container maxWidth={\"lg\"}>\n        <HeaderBreadcrumbs\n          heading={\"回答问题\"}\n          links={[\n            { name: \"订单列表\", href: PATH_DASHBOARD.questions },\n            { name: id },\n          ]}\n        />\n\n        <AnswerQuestion\n          questionID={id}\n          title={title}\n          description={description}\n        />\n      </Container>\n    </Page>\n  );\n}\n","import { Helmet } from \"react-helmet-async\";\nimport { ReactNode } from \"react\";\nimport { Box, BoxProps } from \"@mui/material\";\n\ninterface PageProps extends BoxProps {\n  title?: string;\n  children: ReactNode;\n}\n\nexport default function Page(props: PageProps): JSX.Element {\n  const { title, children, ...other } = props;\n  return (\n    <Box {...other}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </Box>\n  );\n}\n","import { ReactNode } from \"react\";\nimport { isString } from \"lodash\";\n// material\nimport { Box, Typography, Link } from \"@mui/material\";\n//\nimport MBreadcrumbs from \"../@material-extend/MBreadcrumbs\";\nimport { MBreadcrumbsProps } from \"../@material-extend/MBreadcrumbs\";\n\ninterface HeaderBreadcrumbsProps extends MBreadcrumbsProps {\n  action?: ReactNode;\n  heading: string;\n  moreLink?: string | string[];\n}\n\nexport default function HeaderBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink = \"\" || [],\n  sx,\n  ...other\n}: HeaderBreadcrumbsProps): JSX.Element {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map(href => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              sx={{ display: \"table\" }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import hljs from \"highlight.js\";\nimport katex from \"katex\";\nimport \"highlight.js/styles/atom-one-dark.css\";\n// import \"react-quill/dist/quill.snow.css\";\nimport \"katex/dist/katex.css\";\n\nhljs.configure({\n  languages: [\"javascript\", \"jsx\", \"sh\", \"bash\", \"html\", \"scss\", \"css\", \"json\"],\n});\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nwindow.hljs = hljs;\n\nwindow.katex = katex;\n","import { Divider, Link, Typography } from \"@mui/material\";\n// material\nimport { styled } from \"@mui/material/styles\";\nimport ReactMarkdown, { Options } from \"react-markdown\";\nimport rehypeHighlight from \"rehype-highlight\";\nimport rehypeKatex from \"rehype-katex\";\n// markdown plugins\nimport rehypeRaw from \"rehype-raw\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport \"../../utils/editor\";\n\n// ----------------------------------------------------------------------\n\nconst MarkdownWrapperStyle = styled(\"div\")(({ theme }) => {\n  const isLight = theme.palette.mode === \"light\";\n\n  return {\n    // List\n    \"& ul, & ol\": {\n      ...theme.typography.body1,\n      paddingLeft: theme.spacing(5),\n      \"& li\": {\n        lineHeight: 2,\n      },\n    },\n\n    // Blockquote\n    \"& blockquote\": {\n      lineHeight: 1.5,\n      fontSize: \"1.5em\",\n      margin: \"40px auto\",\n      position: \"relative\",\n      fontFamily: \"Georgia, serif\",\n      padding: theme.spacing(3, 3, 3, 8),\n      borderRadius: theme.shape.borderRadiusMd,\n      backgroundColor: theme.palette.background.neutral,\n      color: `${theme.palette.text.secondary} !important`,\n      [theme.breakpoints.up(\"md\")]: {\n        width: \"80%\",\n      },\n      \"& p, & span\": {\n        marginBottom: \"0 !important\",\n        fontSize: \"inherit !important\",\n        fontFamily: \"Georgia, serif !important\",\n        color: `${theme.palette.text.secondary} !important`,\n      },\n      \"&:before\": {\n        left: 16,\n        top: -8,\n        display: \"block\",\n        fontSize: \"3em\",\n        content: '\"\\\\201C\"',\n        position: \"absolute\",\n        color: theme.palette.text.disabled,\n      },\n    },\n\n    // Code Block\n    \"& pre, & pre > code\": {\n      fontSize: 16,\n      fontFamily: \"Consolas, 'Courier New', monospace\",\n      overflowX: \"auto\",\n      whiteSpace: \"pre\",\n      padding: theme.spacing(2),\n      color: theme.palette.common.white,\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: theme.palette.grey[isLight ? 900 : 500_16],\n    },\n    \"& code\": {\n      fontSize: 14,\n      fontFamily: \"Consolas, 'Courier New', monospace\",\n      borderRadius: 4,\n      whiteSpace: \"pre\",\n      padding: theme.spacing(0.2, 0.5),\n      color: theme.palette.warning[isLight ? \"darker\" : \"lighter\"],\n      backgroundColor: theme.palette.warning[isLight ? \"lighter\" : \"darker\"],\n      \"&.hljs\": { padding: 0, backgroundColor: \"transparent\" },\n    },\n  };\n});\n\nconst components = {\n  h1: ({ ...props }) => <Typography variant=\"h1\" {...props} />,\n  h2: ({ ...props }) => <Typography variant=\"h2\" {...props} />,\n  h3: ({ ...props }) => <Typography variant=\"h3\" {...props} />,\n  h4: ({ ...props }) => <Typography variant=\"h4\" {...props} />,\n  h5: ({ ...props }) => <Typography variant=\"h5\" {...props} />,\n  h6: ({ ...props }) => <Typography variant=\"h6\" {...props} />,\n  hr: ({ ...props }) => <Divider sx={{ my: 3 }} {...props} />,\n  a: ({ ...props }) => {\n    const { href } = props;\n    return !href.includes(\"http\") ? (\n      <Link {...props} />\n    ) : (\n      <Link target=\"_blank\" rel=\"nofollow noreferrer noopener\" {...props} />\n    );\n  },\n};\n\n// ----------------------------------------------------------------------\n\nexport default function Markdown({ ...other }: Options): JSX.Element {\n  return (\n    <MarkdownWrapperStyle>\n      <ReactMarkdown\n        rehypePlugins={[rehypeRaw, rehypeHighlight, rehypeKatex]}\n        remarkPlugins={[remarkMath, remarkGfm]}\n        components={components}\n        {...other}\n      />\n    </MarkdownWrapperStyle>\n  );\n}\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { PATH_API_QA } from \"../../routes/paths\";\nimport { ApiResponse } from \"../../types/ApiResponse\";\nimport { QuestionInfo } from \"../../types/user/Chat\";\n\nconst initialState: QuestionInfo = {\n  answer: \"加载中...\",\n  title: \"加载中...\",\n  description: \"加载中...\",\n};\n\nconst useQuestionInfo = (id: string): QuestionInfo => {\n  const [question, setQuestion] = useState(initialState);\n\n  useEffect(() => {\n    axios.get(PATH_API_QA.questionInfo(id)).then(response => {\n      const data = response.data as ApiResponse<QuestionInfo>;\n      setQuestion(data.data);\n    });\n  }, [id]);\n\n  return question;\n};\nexport default useQuestionInfo;\n","import { useEffect, useState } from \"react\";\nimport Vditor from \"vditor\";\nimport \"vditor/dist/index.css\";\nimport useAppearance from \"../../../hooks/useAppearance\";\nimport { Resource } from \"../../../hooks/useFileUpload\";\nimport useAuth from \"../../../hooks/user/useAuth\";\nimport { ApiResponse } from \"../../../types/ApiResponse\";\n\nexport type MarkdownEditorProps = {\n  height: number;\n  value: string;\n  onChange: (value: string) => void;\n};\n\nconst MarkdownEditor = ({\n  height,\n  value,\n  onChange,\n}: MarkdownEditorProps): JSX.Element => {\n  const appearance = useAppearance();\n  const auth = useAuth();\n  const [, setVditor] = useState<Vditor | null>(null);\n\n  useEffect(() => {\n    const vditor = new Vditor(\"markdown-editor\", {\n      height,\n      placeholder: \"TODO 这里填什么啊？\",\n      toolbar: [\n        \"headings\",\n        \"bold\",\n        \"italic\",\n        \"strike\",\n        \"|\",\n        \"line\",\n        \"quote\",\n        \"link\",\n        \"inline-code\",\n        \"code\",\n        \"table\",\n        \"emoji\",\n        \"upload\",\n        \"|\",\n        \"list\",\n        \"ordered-list\",\n        \"check\",\n        \"outdent\",\n        \"indent\",\n        \"|\",\n        \"edit-mode\",\n        \"undo\",\n        \"redo\",\n        \"export\",\n        \"fullscreen\",\n        \"|\",\n        \"info\",\n        \"help\",\n      ],\n      counter: { enable: true },\n      cache: { enable: false },\n      mode: \"ir\",\n      preview: {\n        hljs: {\n          lineNumber: true,\n          style: appearance.getThemeMode() === \"light\" ? \"github\" : \"dracula\",\n        },\n        math: { inlineDigit: true },\n        theme: { current: appearance.getThemeMode() },\n      },\n      theme: appearance.getThemeMode() === \"light\" ? \"classic\" : \"dark\",\n      icon: \"material\",\n      upload: {\n        url: \"/api/upload\",\n        headers: (() => {\n          const accessToken = auth.getAccessToken();\n          return accessToken === null\n            ? undefined\n            : { Authorization: accessToken };\n        })(),\n        fieldName: \"files\",\n        filename: filename => filename,\n        format(files, response_) {\n          const response = JSON.parse(response_) as ApiResponse<Resource[]>;\n          const failed: string[] = [];\n          const success: Record<string, string> = {};\n          response.data.forEach(({ filename, url }) => {\n            if (url === undefined) {\n              failed.push(filename);\n            } else {\n              success[filename] = url;\n            }\n          });\n          return JSON.stringify({\n            msg: \"\",\n            code: 0,\n            data: {\n              errFiles: failed,\n              succMap: success,\n            },\n          });\n        },\n      },\n      tab: \"  \",\n      input() {\n        onChange(vditor.getValue()); // TODO 在空内容的时候切主题貌似还是有问题\n      },\n      value,\n    });\n    setVditor(vditor);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [appearance, auth, height, onChange]);\n  return <div id=\"markdown-editor\" />;\n};\nexport default MarkdownEditor;\n"],"sourceRoot":""}