{"version":3,"sources":["ListViewHeaderRow.tsx","ListViewEventRow.tsx","ListView.tsx","options.ts","main.ts","AllDaySplitter.ts","TimeColsAxisCell.tsx","TimeBodyAxis.tsx","TimeColsView.tsx","TimeColsSlatsCoords.ts","TimeColsSlatsBody.tsx","TimeColsSlats.tsx","TimeColsSeg.ts","TimeColMoreLink.tsx","seg-web.ts","event-placement.ts","TimeColEvent.tsx","TimeColMisc.tsx","TimeCol.tsx","TimeColsContent.tsx","TimeCols.tsx","DayTimeColsSlicer.ts","DayTimeCols.tsx","time-slat-meta.ts","DayTimeColsView.tsx","dnd/PointerDragging.ts","dnd/ElementMirror.ts","ScrollGeomCache.ts","ElementScrollGeomCache.ts","WindowScrollGeomCache.ts","dnd/AutoScroller.ts","dnd/FeaturefulElementDragging.ts","OffsetTracker.ts","interactions/HitDragging.ts","utils.ts","interactions/DateClicking.ts","interactions/DateSelecting.ts","interactions/EventDragging.ts","interactions/EventResizing.ts","interactions/UnselectAuto.ts","interactions-external/ExternalElementDragging.ts","interactions-external/ExternalDraggable.ts","interactions-external/InferredElementDragging.ts","interactions-external/ThirdPartyDraggable.ts","../node_modules/@iconify/icons-ic/round-view-day.js","../node_modules/@iconify/icons-ic/round-view-week.js","../node_modules/@iconify/icons-ic/round-view-agenda.js","../node_modules/@iconify/icons-ic/round-view-module.js","license.tsx","scroll-left-norm.tsx","ScrollListener.ts","StickyScrolling.ts","ClippedScroller.tsx","ScrollSyncer.ts","ScrollGrid.tsx","timeline-date-profile.ts","TimelineHeaderThInner.tsx","TimelineHeaderTh.tsx","TimelineHeaderRows.tsx","TimelineCoords.ts","TimelineHeader.tsx","TimelineSlatCell.tsx","TimelineSlatsBody.tsx","TimelineSlats.tsx","TimelineLaneBg.tsx","TimelineLaneSlicer.ts","TimelineEvent.tsx","TimelineLaneMoreLink.tsx","TimelineLane.tsx","TimelineGrid.tsx","TimelineView.tsx","../../src/vdom.ts","../../src/main.tsx","../node_modules/@mui/material/ToggleButton/toggleButtonClasses.js","../node_modules/@mui/material/ToggleButton/ToggleButton.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@fullcalendar/common/vdom.js","api/EventSourceApi.ts","util/dom-manip.ts","util/dom-event.ts","util/misc.ts","datelib/marker.ts","structs/event-instance.ts","util/object.ts","structs/recurring-event.ts","datelib/duration.ts","datelib/formatting-utils.ts","util/array.ts","util/memoize.ts","datelib/formatting-native.ts","datelib/zoned-marker.ts","datelib/DateFormatter.ts","datelib/formatting-cmd.ts","datelib/formatting-func.ts","datelib/formatting.ts","structs/event-store.ts","util/html.ts","component/event-ui.ts","structs/constraint.ts","structs/event-parse.ts","util/date.ts","datelib/date-range.ts","component/event-rendering.ts","structs/date-span.ts","calendar-utils.ts","structs/event-mutation.ts","ViewApi.ts","structs/event-source-parse.ts","reducers/current-date.ts","CalendarApi.tsx","api/EventApi.ts","datelib/calendar-system.ts","datelib/parsing.ts","datelib/env.ts","global-locales.ts","datelib/locale.ts","structs/business-hours.ts","util/table-styling.tsx","util/geom.ts","component/event-splitting.ts","component/date-rendering.tsx","common/nav-link.ts","util/scrollbar-side.ts","util/scrollbar-width.ts","util/dom-geom.ts","common/Emitter.ts","common/PositionCache.ts","common/scroll-controller.ts","theme/Theme.ts","ScrollResponder.ts","ViewContext.ts","vdom-util.tsx","component/DateComponent.ts","plugin-system.ts","theme/StandardTheme.ts","structs/view-def.ts","common/render-hook.tsx","common/ViewRoot.tsx","structs/view-config.tsx","structs/view-spec.ts","DateProfileGenerator.ts","reducers/eventSources.ts","reducers/eventStore.ts","reducers/date-selection.ts","reducers/selected-event.ts","reducers/event-drag.ts","reducers/event-resize.ts","toolbar-parse.ts","event-sources/array-event-source.ts","event-sources/func-event-source.ts","util/promise.ts","util/requestJson.ts","option-change-handlers.ts","global-plugins.ts","event-sources/json-feed-event-source.ts","event-sources/json-feed-event-source-refiners.ts","structs/recurring-event-simple.ts","structs/recurring-event-simple-refiners.ts","dates-set.ts","event-crud.ts","util/DelayedRunner.ts","util/TaskRunner.ts","reducers/title-formatting.ts","reducers/CalendarDataManager.ts","reducers/options.ts","reducers/view-type.ts","reducers/date-profile.ts","component/CalendarDataProvider.ts","seg-hierarchy.ts","interactions/interaction.ts","interactions/ElementDragging.ts","global-config.ts","structs/drag-meta.ts","ToolbarSection.tsx","Toolbar.tsx","ViewContainer.tsx","interactions/EventClicking.ts","interactions/EventHovering.ts","CalendarContent.tsx","CalendarRoot.tsx","common/table-cell-util.tsx","common/TableDateCell.tsx","common/TableDowCell.tsx","NowTimer.ts","common/DayHeader.tsx","common/table-utils.ts","common/DaySeriesModel.ts","common/DayTableModel.ts","common/slicing-utils.ts","validation.ts","scrollgrid/Scroller.tsx","util/RefMap.ts","scrollgrid/util.tsx","scrollgrid/SimpleScrollGrid.tsx","common/EventRoot.tsx","common/StandardEvent.tsx","common/NowIndicatorRoot.tsx","common/DayCellContent.tsx","common/DayCellRoot.tsx","common/bg-fill.tsx","common/WeekNumberRoot.tsx","common/Popover.tsx","common/MorePopover.tsx","common/MoreLinkRoot.tsx","../node_modules/@iconify/icons-eva/arrow-ios-back-fill.js","TableView.tsx","TableSeg.ts","TableCellTop.tsx","event-rendering.ts","TableBlockEvent.tsx","TableListItemEvent.tsx","TableCellMoreLink.tsx","TableCell.tsx","TableRow.tsx","Table.tsx","DayTableSlicer.tsx","DayTable.tsx","DayTableView.tsx","TableDateProfileGenerator.ts"],"names":["state","textId","render","this","context","theme","dateEnv","options","viewApi","props","cellId","dayDate","todayRange","dayMeta","text","listDayFormat","format","sideText","listDaySideFormat","hookProps","date","toDate","view","navLinkAttrs","sideNavLinkAttrs","classNames","concat","dayHeaderClassNames","content","dayHeaderContent","defaultContent","renderInnerContent","didMount","dayHeaderDidMount","willUnmount","dayHeaderWillUnmount","rootElRef","customClassNames","innerElRef","innerContent","ref","className","join","scope","colSpan","id","getClass","DEFAULT_TIME_FORMAT","hour","minute","meridiem","seg","timeHeaderId","eventHeaderId","dateHeaderId","timeFormat","eventTimeFormat","timeText","disableDragging","disableResizing","interactiveAttrs","eventRange","def","title","renderEventInnerContent","isPast","isFuture","isToday","isSelected","isDragging","isResizing","isDateSelecting","event","url","displayEventTime","eventDef","eventInstance","instance","doAllDay","allDay","range","isStart","start","end","isEnd","allDayText","allDayClassNames","allDayContent","renderAllDayInner","allDayDidMount","allDayWillUnmount","headers","buildTimeContent","style","borderColor","backgroundColor","computeDateVars","eventStoreToSegs","_eventStoreToSegs","dateHeaderIdRoot","setRootEl","rootEl","registerInteractiveComponent","el","unregisterInteractiveComponent","extraClassNames","stickyHeaderDates","dateProfile","dayDates","dayRanges","eventSegs","eventStore","eventUiBases","viewSpec","elRef","liquid","isHeightAuto","overflowX","overflowY","length","renderSegList","renderEmptyMessage","noEventsText","noEventsClassNames","noEventsContent","renderNoEventsInner","noEventsDidMount","noEventsWillUnmount","allSegs","segsByDay","segs","i","dayIndex","push","groupSegsByDay","unit","nowDate","innerNodes","daySegs","dayStr","ListViewHeaderRow","key","eventOrder","ListViewEventRow","instanceId","timeHint","eventHint","eventRangesToSegs","activeRange","nextDayThreshold","fg","eventRanges","eventRangeToSegs","segRange","component","valueOf","add","dayStart","renderRange","viewEnd","type","duration","month","getKeyInfo","timed","getKeysForDateSpan","dateSpan","getKeysForEventDef","DEFAULT_SLAT_LABEL_FORMAT","omitZeroMinute","TimeColsAxisCell","isLabeled","Consumer","isoTimeStr","labelFormat","slotLabelFormat","Array","isArray","level","time","slotLabelClassNames","slotLabelContent","slotLabelDidMount","slotLabelWillUnmount","slatMetas","map","slatMeta","DEFAULT_WEEK_NUM_FORMAT","week","allDaySplitter","AllDaySplitter","headerElRef","scrollerElRef","slatCoords","handleScrollTopRequest","scrollTop","scrollerEl","current","renderHeadAxis","rowKey","frameHeight","weekNumbers","defaultFormat","height","renderTableRowAxis","rowHeight","handleSlatCoords","setState","renderSimpleLayout","headerRowContent","timeContent","sections","isSticky","chunk","tableClassName","rowContent","outerContent","role","expandRows","Boolean","forPrint","collapsibleWidth","cols","width","renderHScrollLayout","colCnt","dayMinWidth","ScrollGrid","pluginHooks","scrollGridImpl","Error","stickyFooterScrollbar","syncRowHeights","chunks","arg","rowSyncHeights","contentArg","isNowIndicator","nowIndicator","clientHeight","tableColGroupNode","TimeBodyAxis","nowIndicatorTop","safeComputeTop","isAxis","top","colGroups","span","minWidth","getAllDayMaxEventProps","dayMaxEvents","dayMaxEventRows","undefined","positions","slotDuration","currentRange","startOfDayDate","timeMs","slotMinTime","slotMaxTime","computeTimeTop","computeDateTop","when","slatIndex","slatRemainder","len","els","slatCoverage","milliseconds","Math","max","min","floor","tops","getHeight","slatElRefs","createRef","axis","slotLaneClassNames","slotLaneContent","slotLaneDidMount","slotLaneWillUnmount","tableMinWidth","clientWidth","minHeight","TimeColsSlatsBody","componentDidMount","updateSizing","componentDidUpdate","componentWillUnmount","onCoords","elMap","offsetHeight","TimeColsSlatsCoords","currentMap","splitSegsByCol","segsByCol","col","splitInteractionByCol","ui","byRow","affectedInstances","isEvent","allDayDate","moreCnt","hiddenSegs","alignmentElRef","renderMoreLinkInner","extraDateSpan","popoverContent","renderPlainFgSegs","handleClick","isExpanded","popoverId","bottom","onClick","shortText","buildPositioning","segInputs","strictOrder","maxStackCnt","hierarchy","hiddenEntries","addSegs","hiddenGroups","web","entriesByLevel","buildNode","cacheable","lateral","siblingRange","subjectLevel","subjectLateral","levelCoords","subjectEntry","afterSubject","thickness","levelCnt","entries","entry","searchIndex","lateralStart","lateralEnd","findNextLevelSegs","nextLevelRes","buildNodes","nextLevelNodes","buildWeb","segRects","topLevelNodes","rects","processNode","node","levelCoord","stackDepth","rect","stackForward","processNodes","nodes","webToRects","totalThickness","stretchNode","startCoord","prevThickness","endCoord","allThickness","thicknessFraction","newChildren","childNode","res","newThickness","stretchWeb","pairs","sort","cmpDescPressures","extractNode","a","b","keyFunc","workFunc","cache","args","isShort","defaultTimeFormat","extraHookProps","sortEventSegs","isSelectMirror","selectMirror","mirrorSegs","eventDrag","eventResize","dateSelectionSegs","interactionAffectedInstances","sortedFgSegs","fgEventSegs","dataAttrs","extraDataAttrs","renderFillSegs","businessHourSegs","bgEventSegs","renderFgSegs","renderNowIndicator","nowIndicatorSegs","TimeColMisc","segIsInvisible","renderPositionedFgSegs","eventMaxStack","eventShortHeight","eventOrderStrict","eventMinHeight","eventSelection","isMirror","computeFgSegPlacements","computeSegVCoords","segPlacements","renderHiddenGroups","segPlacement","isVisible","vStyle","computeSegVStyle","hStyle","computeSegHStyle","left","right","isInset","visibility","TimeColEvent","hiddenGroup","segEntries","positionCss","segEntry","index","TimeColMoreLink","fillType","children","vcoords","segHCoords","isRtl","shouldOverlap","slotEventOverlap","nearCoord","farCoord","zIndex","hiddenInstances","segVCoords","splitFgEventSegs","splitBgEventSegs","splitBusinessHourSegs","splitNowIndicatorSegs","splitDateSelectionSegs","splitEventDrag","splitEventResize","cellElRefs","cells","fgEventSegsByRow","bgEventSegsByRow","businessHourSegsByRow","nowIndicatorSegsByRow","dateSelectionSegsByRow","eventDragByRow","eventResizeByRow","cell","TimeCol","updateCoords","onColCoords","processSlotOptions","handleRootEl","isHitComboAllowed","handleScrollRequest","request","onScrollTopRequest","ceil","handleColCoords","colCoords","onSlatCoords","TimeColsSlats","TimeColsContent","scrollResponder","createScrollResponder","prevProps","update","detach","queryHit","positionLeft","positionTop","snapDuration","snapsPerSlot","colIndex","leftToIndex","topToIndex","slatTop","slatHeight","partial","snapIndex","dayEl","lefts","rights","layer","snapDurationOverride","sliceRange","buildDayRanges","slicer","DayTimeColsSlicer","timeColsRef","dayTableModel","TimeCols","sliceProps","sliceNowDate","ranges","headerDates","STOCK_SUB_DURATIONS","hours","minutes","seconds","buildSlatMetas","explicitLabelInterval","Date","slatTime","slatIterator","labelInterval","slotsPerLabel","computeLabelInterval","metas","toISOString","buildTimeColsModel","dateProfileGenerator","splitProps","slotLabelInterval","hasAttachedAxis","hasDetachedAxis","headerContent","dayHeaders","dates","datesRepDistinctDays","renderIntro","allDaySlot","colGroupNode","renderRowIntro","showWeekNumbers","headerAlignElRef","timeGridContent","DayTimeCols","TimeColsView","daySeries","touchMouseIgnoreWait","ignoreMouseDepth","listenerCnt","isWindowTouchMoveCancelled","containerEl","subjectEl","selector","handleSelector","shouldIgnoreMove","shouldWatchScroll","isTouchDragging","wasTouchScroll","handleMouseDown","ev","shouldIgnoreMouse","button","ctrlKey","isPrimaryMouseButton","tryStart","pev","createEventFromMouse","emitter","trigger","initScrollWatch","document","addEventListener","handleMouseMove","handleMouseUp","recordCoords","removeEventListener","cleanup","handleTouchStart","createEventFromTouch","targetEl","target","handleTouchMove","handleTouchEnd","window","handleTouchScroll","setTimeout","handleScroll","pageX","pageXOffset","prevScrollX","prevPageX","pageY","pageYOffset","prevScrollY","prevPageY","origEvent","isTouch","deltaX","origPageX","deltaY","origPageY","passive","onWindowTouchMove","destroy","querySubjectEl","downEl","destroyScrollWatch","cancelTouchScroll","isFirst","touches","preventDefault","sourceEl","mirrorEl","sourceElRect","parentNode","body","revertDuration","getBoundingClientRect","origScreenX","origScreenY","updateElPosition","handleMove","setIsVisible","bool","display","stop","needsRevertAnimation","callback","done","doRevertAnimation","finalSourceElRect","transition","getMirrorEl","cloneNode","classList","position","boxSizing","margin","appendChild","scrollController","doesListening","getScrollTop","scrollLeft","getScrollLeft","handleScrollChange","origScrollTop","origScrollLeft","scrollWidth","getScrollWidth","scrollHeight","getScrollHeight","getClientWidth","getClientHeight","clientRect","computeClientRect","getEventTarget","setScrollTop","getMaxScrollTop","setScrollLeft","getMaxScrollLeft","ScrollGeomCache","getTime","performance","now","isEnabled","scrollQuery","edgeThreshold","maxVelocity","pointerScreenX","pointerScreenY","isAnimating","scrollCaches","everMovedUp","everMovedDown","everMovedLeft","everMovedRight","animate","edge","computeBestEdge","handleSide","msSinceRequest","requestAnimation","scrollStartEl","buildCaches","yDelta","xDelta","requestAnimationFrame","scrollCache","invDistance","distance","velocity","sign","name","bestSide","leftDist","rightDist","topDist","bottomDist","canScrollUp","canScrollDown","canScrollLeft","canScrollRight","queryScrollEls","WindowScrollGeomCache","ElementScrollGeomCache","query","prototype","slice","call","querySelectorAll","delay","minDistance","touchScrollAllowed","mirrorNeedsRevert","isInteracting","isDelayEnded","isDistanceSurpassed","delayTimeoutId","onPointerDown","pointer","mirror","startDelay","handleDistanceSurpassed","onPointerMove","autoScroller","onPointerUp","tryStopDrag","clearTimeout","PointerDragging","on","ElementMirror","AutoScroller","handleDelayEnd","tryStartDrag","stopDrag","bind","setIgnoreMove","setMirrorIsVisible","setMirrorNeedsRevert","setAutoScrollEnabled","origRect","scrollEl","computeLeft","computeTop","isWithinClipping","point","isIgnoredClipping","tagName","dragging","droppableStore","useSubjectCenter","requireInitial","initialHit","movingHit","finalHit","handlePointerDown","prepareHits","processFirstCoord","handleDragStart","handleDragMove","handlePointerUp","releaseHits","handleDragEnd","subjectRect","origPoint","adjustedPoint","HTMLElement","queryHitForOffset","slicedSubjectRect","coordAdjust","forceHandle","hit","isHitsEqual","offsetTrackers","interactionSettings","OffsetTracker","offsetLeft","offsetTop","bestHit","offsetTracker","originLeft","originTop","componentId","hit0","hit1","buildDatePointApiWithContext","datePointTransforms","transform","dateStr","formatIso","omitTime","settings","isValidDateDownEl","hitDragging","jsEvent","calendarApi","FeaturefulElementDragging","HitDragging","dragSelection","canSelect","selectable","selectLongPressDelay","longPressDelay","getComponentTouchDelay","unselect","handleHitUpdate","isFinal","isInvalid","dateSelectionTransformers","dateSpan0","dateSpan1","ms","transformer","joinHitsIntoSelection","dispatch","selection","selectMinDistance","dragScroll","subjectSeg","relevantEvents","receivingContext","validMutation","mutatedRelevantEvents","origTarget","initialContext","eventInstanceId","getCurrentData","eventDragMinDistance","eventLongPressDelay","fixedMirrorParent","dragRevertDuration","isValid","isValidSegDownEl","contains","mutation","interaction","affectedEvents","mutatedEvents","receivingOptions","editable","droppable","massagers","date0","date1","standardProps","hasEnd","allDayMaintainDuration","delta","largeUnit","datesDelta","massager","computeEventMutation","eventDragMutationMassagers","displayDrag","querySelector","initialView","eventApi","clearDrag","updatedEventApi","defs","defId","instances","eventChangeArg","oldEvent","relatedEvents","revert","transformed","eventDropTransformers","eventRemoveArg","draggedEl","addedEventDef","addedEventInstance","addedEventApi","eventAddArg","EventDragging","SELECTOR","useEventCenter","nextContext","prevContext","initialCalendar","draggingSegEl","draggingSeg","segEl","querySegEl","isFromStart","instanceRange","startDelta","endDelta","computeMutation","isRecentPointerDateSelect","matchesCancel","matchesEvent","onSelect","selectInfo","onDocumentPointerDown","unselectCancel","onDocumentPointerUp","documentPointer","calendarState","dateSelection","unselectAuto","off","suppliedDragMeta","droppableEvent","dragMeta","buildDragMeta","create","canDropElOnCalendar","defProps","leftoverProps","externalDefTransforms","refined","extra","sourceId","forceEventDuration","startTime","computeEventForDateSpan","finalView","str","prefix","dataAttrPrefix","prefixedName","getAttribute","getEmbeddedElData","obj","JSON","parse","getDragMetaFromEl","dropAccept","itemSelector","appendTo","ExternalElementDragging","eventData","mirrorSelector","currentMirrorEl","handlePointerMove","containerOrSettings","Element","InferredElementDragging","exports","__esModule","default","RELEASE_DATE","PRESET_LICENSE_KEYS","CSS","background","borderStyle","borderWidth","padding","fontSize","borderTopRightRadius","_rtlScrollSystem","schedulerLicenseKey","currentUrl","location","href","test","indexOf","parts","match","purchaseDate","parseInt","releaseDate","mockSchedulerReleaseDate","processLicenseKey","WHEEL_EVENT_NAMES","split","isScrolling","isTouching","isRecentlyWheeled","isRecentlyScrolled","wheelWaiter","_handleWheelWaited","scrollWaiter","_handleScrollWaited","startScroll","handleWheel","endScroll","eventName","clear","getScrollFromLeftEdge","getComputedStyle","direction","getRtlScrollSystem","setScrollFromLeftEdge","system","createElement","overflow","innerHTML","detectRtlScrollSystem","_isStickySupported","IS_MS_EDGE","navigator","userAgent","usingRelative","updateSize","elGeoms","queryElGeoms","viewportWidth","viewportHeight","elDestinations","forEach","naturalBound","parentBound","parentWidth","parentHeight","assignRelativePositions","computeElDestinations","textAlign","elWidth","assignStickyPositions","val","computeStickySupported","getStickySupported","listener","canvasOrigin","edges","borderLeft","scrollbarLeft","borderTop","getScrollCanvasOrigin","elRect","computedStyles","parseFloat","elHeight","viewportTop","viewportLeft","viewportRight","elGeom","destLeft","destTop","xScrollbarWidth","yScrollbarWidth","handleScroller","scroller","scrollerRef","handleSizing","getYScrollbarWidth","getXScrollbarWidth","isScrollbarOnLeft","overcomeLeft","overcomeRight","overcomeBottom","maxHeight","liquidIsAbsolute","addResizeHandler","removeResizeHandler","needsXScrolling","needsYScrolling","isVertical","scrollEls","isPaused","scrollListeners","bindScroller","scrollListener","isWheel","masterEl","assignMaster","otherEl","forceScrollLeft","forceScrollTop","compileColGroupStats","compileColGroupStat","isColGroupStatsEqual","renderMicroColGroups","clippedScrollerRefs","scrollerElRefs","_handleScrollerEl","chunkElRefs","_handleChunkEl","getStickyScrolling","initStickyScrolling","destroyStickyScrolling","getScrollSyncersBySection","initScrollSyncer","destroyScrollSyncer","getScrollSyncersByColumn","stickyScrollings","scrollSyncersBySection","scrollSyncersByColumn","rowUnstableMap","Map","rowInnerMaxHeightMap","anyRowHeightsChanged","recentSizingCnt","shrinkWidths","forceYScrollbars","forceXScrollbars","scrollerClientWidths","scrollerClientHeights","sectionRowMaxHeights","isForcedResize","sectionRowMaxHeightsChanged","allowSizing","otherState","size","computeSectionRowMaxHeights","computeShrinkWidths","computeScrollerDims","updateStickyScrolling","handleRowHeightChange","rowEl","isStable","delete","innerMaxHeight","getRowInnerMaxHeight","has","get","set","colGroupStats","colGroup","microColGroupNodes","stat","getDims","currentConfig","sectionConfigs","configCnt","configI","headSectionNodes","bodySectionNodes","footSectionNodes","renderSection","isBuggy","roleAttrs","colGroupStat","totalColWidth","renderMacroColGroup","sectionConfig","sectionIndex","isHeader","chunkConfig","renderChunk","microColGroupNode","chunkIndex","rowHeights","sectionCnt","chunksPerSection","isVScrollSide","isLastSection","allowXScrolling","allowYScrolling","chunkVGrow","totalColMinWidth","reportRowHeightChange","updateScrollSyncers","prevState","destroyScrollSyncers","lastSizingDate","SCROLLGRID_RESIZE_INTERVAL","cnt","hasShrinkCol","chunkEls","collect","newHeightMap","sectionI","assignableHeights","rowHeightsByChunk","chunkI","chunkEl","rowCnt","isEqualRowCnt","row","rowHeightsAcrossChunks","h","chunkHeightSums","sumNumbers","maxTotalSum","rowInChunkCnt","rowInChunkTotalHeight","rowInChunkHeightOthers","rowInChunkHeightFirst","rowInChunkHeights","scrollbarWidth","sideScrollI","lastSectionI","currentScrollers","scrollerEls","harnessEl","y","x","argsByKey","getAll","stickyScrolling","scrollElsBySection","scrollElsByColumn","scrollElMap","startIndex","endIndex","getChunkConfigByIndex","scrollSyncer","numbers","sum","innerHeights","getElHeight","colGroupConfig","sumColProp","propName","total","addStateEquality","COL_GROUP_STAT_EQUALITY","stat0","stat1","ScrollSyncer","MAX_TIMELINE_SLOTS","years","months","days","buildTimelineDateProfile","allOptions","tDateProfile","countDurationsBetween","console","warn","validateLabelAndSlot","ensureLabelInterval","input","trySlotDuration","ensureSlotDuration","rawFormats","format1","format2","weekNumbersVisible","format0","year","currentRangeAs","weekday","day","omitCommas","params","second","millisecond","computeHeaderFormats","headerFormats","rawFormat","isTimeScale","slotUnit","emphasizeWeeks","businessHours","rawSnapDuration","timeWindowMs","normalizedStart","normalizeDate","normalizedEnd","normalizedRange","slotDates","isValidDate","snapDiff","snapDiffToIndex","snapIndexToDiff","snapCnt","slotCnt","isWeekStarts","prevWeekNumber","slotDate","weekNumber","computeWeekNumber","isWeekStart","buildIsWeekStarts","cellRows","formats","slotAsDays","guessedSlotUnit","rowUnitsFromFormats","getLargestUnit","rowCells","leadingCell","isLastRow","isSuperRow","newCell","rowUnit","colspan","buildCellObject","weekStart","buildCellRows","normalDate","startOf","isHiddenDay","tryLabelInterval","diffWholeYears","diffWholeMonths","refineHookProps","dateMarker","normalizeClassNames","buildCellNavLinkAttrs","dateMeta","rowLevel","omitTimeZoneOffset","rowInnerHeight","cellDate","rowInnerHeights","isLast","slatRootEl","slatEls","outerCoordCache","innerCoordCache","isDateInRange","dateToCoord","slotCoverage","computeDateSnapCoverage","slotIndex","originClientRect","getWidth","rangeToCoords","durationToCoord","coord","coordFromLeft","snapDiffInt","snapCoverage","coordToCss","hcoord","coordsToCss","hcoords","timerUnit","onMaxCushionWidth","computeMaxCushionWidth","isEm","isDay","onScrollLeftRequest","coords","offsetWidth","positionToHit","leftPosition","slatWidth","localSnapIndex","highlightSeg","eventResizeSegs","timelineCoords","renderSegs","computeSegHCoords","origRange","normalRange","dayRange","normalizeRange","slicedRange","defaultDisplayEventTime","placement","resourceId","isForcedInvisible","harnessElRefs","moreElRefs","eventInstanceHeights","moreLinkHeights","slicedProps","fgSegs","eventMinWidth","fgPlacements","fgHeight","topsByInstanceId","placements","buildAbsoluteTopHash","buildMirrorPlacements","onHeightChange","round","moreEl","isoStr","slatsRef","handeEl","handleCoords","slatHit","scrollGridRef","slotCushionMaxWidth","handleScrollLeftRequest","handleMaxCushionWidth","eventOverlap","slotMinWidth","slatCols","buildSlatCols","computeFallbackSlotMinWidth","getToggleButtonUtilityClass","slot","generateUtilityClass","toggleButtonClasses","generateUtilityClasses","_excluded","ToggleButtonRoot","styled","ButtonBase","overridesResolver","styles","ownerState","root","capitalize","selectedColor","color","palette","primary","main","_extends","typography","borderRadius","shape","border","divider","action","active","fullWidth","disabled","disabledBackground","textDecoration","alpha","hoverOpacity","selected","selectedOpacity","pxToRem","ToggleButton","React","inProps","useThemeProps","disableFocusRipple","onChange","value","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","focusRipple","defaultPrevented","getCardUtilityClass","CardRoot","Paper","Card","raised","elevation","FullCalendarVDom","Component","Fragment","createContext","createPortal","flushToDom","unmountComponentAtNode","internalEventSource","remove","refetch","sourceIds","isRefetch","publicId","meta","removeElement","removeChild","elementClosest","closest","documentElement","elementMatches","parentElement","nodeType","matches","matchesSelector","msMatchesSelector","findElements","container","containers","allMatches","j","findDirectChildren","parent","parents","childNodes","PIXEL_PROP_RE","applyStyle","applyStyleProp","getEventTargetViaRoot","composedPath","getElRoot","getRootNode","guid","getUniqueDomId","listenBySelector","eventType","handler","attachedHandler","matchedChild","buildDelegationHandler","transitionEventNames","whenTransitionDone","realCallback","createAriaClickAttrs","createAriaKeyboardAttrs","tabIndex","onKeyDown","guidNumber","String","disableCursor","enableCursor","preventSelection","allowSelection","preventContextMenu","allowContextMenu","compareByFieldSpec","obj0","obj1","fieldSpec","func","localeCompare","flexibleCompare","field","order","padStart","s","substr","formatWithOrdinals","formatter","fallbackText","reduce","replace","compareNumbers","isInt","n","computeSmallestCellWidth","cellEl","allWidthEl","contentWidthEl","DAY_IDS","addWeeks","m","dateToUtcArray","arrayToUtcDate","addDays","addMs","diffWeeks","m0","m1","diffDays","diffWholeDays","timeAsMs","startOfDay","getUTCFullYear","getUTCMonth","getUTCDate","weekOfGivenYear","marker","dow","doy","firstWeekStart","firstWeekOffset","fwd","getUTCDay","dateToLocalArray","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","arrayToLocalDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","UTC","isNaN","createEventInstance","forcedStartTzo","forcedEndTzo","Object","mergeProps","propObjs","complexPropsMap","dest","complexObjs","unshift","filterHash","hash","filtered","mapHash","newHash","arrayToHash","hashValuesToArray","isPropsEqual","getUnequalProps","keys","compareObjs","oldProps","newProps","equalityFuncs","isObjValsEqual","val0","val1","comparator","collectFromHash","step","expandRecurring","framingRange","recurringDef","defaultAllDayEventDuration","defaultTimedEventDuration","expandRecurringRanges","recurringTypes","markers","typeId","expand","typeData","subtract","INTERNAL_UNITS","PARSE_RE","createDuration","exec","parseString","parseObject","weeks","specifiedWeeks","asCleanDays","dur","addDurations","d0","d1","multiplyDuration","d","asRoughDays","asRoughMs","asRoughMinutes","asRoughSeconds","wholeDivideDurations","numerator","denominator","localRes","greatestDurationDenominator","buildIsoString","timeZoneOffset","stripZeroTime","formatTimeZoneOffset","formatDayString","formatIsoTimeString","doIso","abs","mins","isArraysEqual","a0","a1","equalityFunc","memoize","workerFunc","resEquality","teardownFunc","currentArgs","currentRes","newArgs","apply","memoizeObjArg","currentArg","newArg","memoizeArraylike","currentArgSets","currentResults","newArgSets","currentLen","newLen","splice","memoizeHashlike","currentArgHash","currentResHash","newArgHash","newResHash","EXTENDED_SETTINGS_AND_SEVERITIES","separator","STANDARD_DATE_PROP_SEVERITIES","timeZoneName","era","MERIDIEM_RE","COMMA_RE","MULTI_SPACE_RE","LTR_RE","UTC_RE","formatSettings","standardDateProps","extendedSettings","severity","buildFormattingFunc","formatRange","betterDefaultSeparator","diffSeverity","ca","getMarkerYear","getMarkerMonth","getMarkerDay","computeMarkerDiffSeverity","calendarSystem","biggestUnitForPartial","full0","full1","partialFormattingFunc","biggestUnit","partialOptions","computePartialFormattingOptions","partial0","partial1","insertion","i0","found0","before0","after0","i1","found1","before1","after1","before","after","findCommonInsertion","defaultSeparator","standardDatePropCnt","num","weekText","weekTextLong","locale","simpleNumberFormat","reverse","formatWeekNumber","sanitizeSettings","timeZone","zeroFormat","normalFormat","Intl","DateTimeFormat","codes","zeroProps","tzoStr","replaced","injectTzoStr","trim","toLocaleLowerCase","postProcess","buildNativeFormattingFunc","expandZonedMarker","dateInfo","markerToArray","array","createVerboseFormattingArg","startInfo","localeCodes","cmdStr","cmdFormatter","createFormatter","NativeFormatter","CmdFormatter","FuncFormatter","BASE_OPTION_REFINERS","navLinkDayClick","identity","navLinkWeekClick","bootstrapFontAwesome","buttonIcons","customButtons","scrollTime","scrollTimeReset","dayPopoverFormat","headerToolbar","footerToolbar","defaultRangeSeparator","titleRangeSeparator","dayHeaderFormat","dayCellClassNames","dayCellContent","dayCellDidMount","dayCellWillUnmount","aspectRatio","Number","weekends","weekNumberCalculation","weekNumberClassNames","weekNumberContent","weekNumberDidMount","weekNumberWillUnmount","viewClassNames","viewDidMount","viewWillUnmount","nowIndicatorClassNames","nowIndicatorContent","nowIndicatorDidMount","nowIndicatorWillUnmount","showNonCurrentDates","lazyFetching","startParam","endParam","timeZoneParam","locales","themeSystem","token","specs","tokens","charAt","substring","handleWindowResize","windowResizeDelay","contentHeight","weekNumberFormat","eventResizableFromStart","displayEventEnd","progressiveEventRendering","initialDate","eventDataTransform","viewHeight","defaultAllDay","eventSourceFailure","eventSourceSuccess","eventDisplay","eventStartEditable","eventDurationEditable","eventConstraint","eventAllow","eventBackgroundColor","eventBorderColor","eventTextColor","eventColor","eventClassNames","eventContent","eventDidMount","eventWillUnmount","selectConstraint","selectOverlap","selectAllow","navLinks","rerenderDelay","moreLinkText","moreLinkHint","plugins","firstDay","dayCount","dateAlignment","dateIncrement","hiddenDays","monthMode","fixedWeekCount","validRange","visibleRange","titleFormat","eventInteractive","viewHint","navLinkHint","closeHint","moreLinkClick","moreLinkClassNames","moreLinkContent","moreLinkDidMount","moreLinkWillUnmount","BASE_OPTION_DEFAULTS","center","CALENDAR_LISTENER_REFINERS","datesSet","eventsSet","eventAdd","eventChange","eventRemove","windowResize","eventClick","eventMouseEnter","eventMouseLeave","select","loading","_unmount","_beforeprint","_afterprint","_noEventDrop","_noEventResize","_resize","_scrollRequest","CALENDAR_OPTION_REFINERS","buttonText","buttonHints","views","initialEvents","events","eventSources","COMPLEX_OPTION_COMPARATORS","isBoolComplexEqual","VIEW_OPTION_REFINERS","buttonTextKey","dateProfileGeneratorClass","usesMinMaxTime","mergeRawOptions","optionSets","refineProps","refiners","raw","parseEvents","rawEvents","eventSource","allowOpenRange","eventRefiners","buildEventRefiners","tuple","parseEvent","eventTupleToStore","getRelevantEvents","newStore","filterEventStoreDefs","lookDef","def0","def1","groupId","createEmptyEventStore","mergeEventStores","store0","store1","filterFunc","parseClassNames","EVENT_UI_REFINERS","startEditable","durationEditable","constraint","overlap","allow","textColor","EMPTY_EVENT_UI","constraints","allows","createEventUi","normalizeConstraint","combineEventUis","uis","combineTwoEventUis","item0","item1","EVENT_NON_DATE_REFINERS","interactive","EVENT_DATE_REFINERS","EVENT_REFINERS","extendedProps","refineEventDef","computeIsDefaultAllDay","recurringRes","parsed","allDayGuess","parseRecurring","parseEventDef","singleRes","startMeta","endMeta","startMarker","endMarker","startInput","createMarkerMeta","isTimeUnspecified","forcedTzo","parseSingle","eventDefMemberAdders","memberAdder","freeze","computeAlignedDayRange","timedRange","dayCnt","computeVisibleDayRange","startDay","endDay","endTimeMS","isMultiDayRange","diffDates","m0day","m1day","diffDayAndTime","invertRanges","constraintRange","dateRange","invertedRanges","compareRanges","range0","range1","intersectRanges","newRange","rangesIntersect","rangeContainsRange","outerRange","innerRange","rangeContainsMarker","sliceEventStore","inverseBgByGroupId","inverseBgByDefId","defByGroupId","bgRanges","fgRanges","eventUis","compileEventUis","invertedRange","bg","hasBgRendering","setElSeg","fcSeg","getElSeg","eventDefs","compileEventUi","eventOrderSpecs","objs","buildSegCompareObj","fieldSpecs","cmp","compareByFieldSpecs","c","_seg","computeSegDraggable","transformers","isDraggableTransformers","computeSegStartResizable","computeSegEndResizable","buildSegTimeText","defaultDisplayEventEnd","startOverride","endOverride","wholeEventStart","wholeEventEnd","segStart","segEnd","isStartDay","isEndDay","getSegMeta","buildEventRangeKey","getSegAnchorAttrs","hasHandlers","STANDARD_PROPS","parseDateSpan","defaultDuration","parseOpenDateSpan","isDateSpansEqual","span0","span1","isSpanPropsEqual","buildRangeApiWithTimeZone","buildRangeApi","startStr","endStr","fabricateEventRange","triggerDateSelect","__assign_1","buildDateSpanApiWithContext","dateSpanTransforms","getDefaultEventEnd","applyMutationToEventStore","eventConfigBase","eventConfigs","applyMutationToEventDef","applyMutationToEventInstance","eventConfig","copy","eventDefMutationAppliers","applier","forceAllDay","clearEnd","viewTitle","getOption","EVENT_SOURCE_REFINERS","success","failure","parseEventSource","rawObj","buildEventSourceRefiners","metaRes","eventSourceDefs","parseMeta","sourceDefId","buildEventSourceMeta","_raw","isFetching","latestFetchId","fetchRange","eventSourceRefiners","getNow","nowInput","createNowMarker","createMarker","currentDataManager","batchRendering","setOption","optionName","rawOptionValue","currentCalendarOptionsInput","getAvailableLocaleCodes","availableRawLocales","handlerName","currentCalendarOptionsRefiners","changeView","viewType","dateOrRange","zoomTo","spec","viewSpecs","getUnitViewSpec","toolbarConfig","viewTypes","header","viewsWithButtons","footer","singleUnit","prev","next","prevYear","addYears","currentDate","nextYear","today","calendarOptions","gotoDate","zonedDateInput","incrementDate","deltaInput","formatDate","dateOrObj","endDate","selectionInput","triggerDateUnselect","addEvent","eventInput","sourceInput","_def","_instance","triggerEventAdd","EventSourceApi","sourceApi","getEventSourceById","newEventApi","eventApiToStore","getEventById","getEvents","currentData","buildEventApis","removeAllEvents","getEventSources","sourceHash","sourceApis","internalId","addEventSource","sources","removeAllEventSources","refetchEvents","scrollToTime","timeInput","_context","setProp","mutate","setExtendedProp","setStart","granularity","maintainDuration","setEnd","endInput","setDates","moveStart","moveEnd","moveDates","setAllDay","formatInput","EventApi","asStore","toPlainObject","collapseColor","collapseExtendedProps","toJSON","excludeInstance","eventApis","excludeInstanceId","calendarSystemClassMap","theClass","arrayToMarker","arr","GregorianCalendarSystem","ISO_RE","isNamedTimeZone","namedTimeZoneImpl","canComputeOffset","createCalendarSystem","weekDow","weekDoy","weekNumberFunc","timestampToMarker","getYear","addMonths","greatestWholeUnit","diffWholeWeeks","diffHours","diffMinutes","diffSeconds","diff","asRoughMonths","startOfYear","startOfMonth","startOfWeek","startOfHour","startOfMinute","startOfSecond","w","nextW","weekOfYear","dateOptions","offsetForMarker","isEndExclusive","extraOptions","timestampToArray","getTimezoneOffset","offsetForArray","globalLocales","MINIMAL_RAW_EN_LOCALE","code","list","RAW_EN_LOCALE","eventCnt","organizeRawLocales","explicitRawLocales","defaultCode","allRawLocales","rawLocaleMap","en","rawLocale","buildLocale","inputSingular","available","codeArg","simpleId","queryRawLocale","parseLocale","queryLocale","merged","NumberFormat","canVGrowWithinCell","DEF_DEFAULTS","endTime","daysOfWeek","parseBusinessHours","rawDefs","filter","rawDef","refineInputs","pointInsideRect","intersectRects","rect1","rect2","translateRect","constrainPoint","getRectCenter","diffPoints","point1","point2","getCanVGrowWithinCell","possible","computeCanVGrowWithinCell","EMPTY_EVENT_STORE","getKeysForEventDefs","_getKeysForEventDefs","splitDateSelection","_splitDateSpan","splitEventStore","_splitEventStore","splitIndividualUi","_splitIndividualUi","_splitInteraction","eventUiBuilders","keyInfos","defKeys","dateSelections","individualUi","eventStores","eventDrags","eventResizes","info","buildEventUiForKey","keyInfo","buildEventUi","dateSpans","splitStores","splitHashes","splitStates","mutatedKeysByDefId","populate","allUi","eventUiForKey","baseParts","stuff","getDateMeta","isDisabled","isOther","getDayClassNames","getSlotClassNames","DAY_FORMAT","WEEK_FORMAT","buildNavLinkAttrs","isTabbable","zonedDate","handleInteraction","customAction","_scrollbarWidths","_isRtlScrollbarOnLeft","getIsRtlScrollbarOnLeft","outerEl","firstChild","computeIsRtlScrollbarOnLeft","getScrollbarWidths","computeScrollbarWidthsForEl","computeScrollbarWidths","computeEdges","getPadding","computedStyle","borderLeftWidth","borderRight","borderRightWidth","borderTopWidth","borderBottom","borderBottomWidth","badScrollbarWidths","scrollbarLeftRight","scrollbarBottom","scrollbarRight","paddingLeft","paddingRight","paddingTop","paddingBottom","computeInnerRect","goWithinPadding","doFromWindowViewport","outerRect","computeRect","getClippingParents","handlers","thisContext","setThisContext","setOptions","addToHash","removeFromHash","attachedHandlers","optionHandler","originEl","isHorizontal","buildElHorizontals","buildElVerticals","originClientLeft","originClientTop","bottoms","topPosition","leftIndex","topIndex","canScrollVertically","canScrollHorizontally","ScrollController","scroll","iconOverrideOption","setIconOverride","iconOverrideHash","iconClassesCopy","buttonName","iconClasses","applyIconOverridePrefix","iconOverridePrefix","getIconClass","rtlIconClasses","baseIconClass","getCustomButtonIconClass","customButtonProps","iconOverrideCustomButtonOption","execFunc","queuedRequest","drain","fireInitialScroll","isDatesNew","ViewContextType","buildViewContext","viewOptions","shouldComponentUpdate","nextProps","nextState","debug","log","propEquality","stateEquality","addPropsEquality","contextType","setRef","uid","createPlugin","deps","reducers","isLoadingFuncs","contextInit","viewPropsTransformers","isPropsValid","viewContainerAppends","componentInteractions","calendarInteractions","themeClasses","namedTimeZonedImpl","elementDraggingImpl","optionChangeHandlers","contentTypeHandlers","listenerRefiners","optionRefiners","propSetHandlers","buildBuildPluginHooks","currentHooks","currentOverrideDefs","currentGlobalDefs","overrideDefs","globalDefs","pluginDefs","isAdded","hooks","addDefs","hooks1","hooks0","buildPluginHooks","ensureViewDef","defaultConfigs","overrideConfigs","viewDef","defaultConfig","overrideConfig","queryProp","theComponent","superType","superDef","defaults","rawOptions","overrides","buildViewDef","tableCellShaded","buttonGroup","buttonActive","close","ContentHook","backupElRef","CustomContentRenderContext","renderId","updateCustomContent","customContentInfo","getInnerContent","getContentMeta","contentKey","contentVal","buildLifecycleFuncs","normalizeContent","searchKey","buildClassNameNormalizer","currentGenerator","currentHookProps","currentClassNames","generator","parseViewConfigs","inputs","parseViewConfig","viewProps","viewElRef","buildViewSpecs","defaultInputs","optionOverrides","dynamicOptionOverrides","localeDefaults","viewDefs","compileViewDefs","durationInput","durationUnit","singleUnitOverrides","json","stringify","durationInputMap","createDurationCached","denom","queryButtonText","optionsSubset","buttonTextMap","queryButtonTitle","buttonKey","optionDefaults","buttonTextOverride","buttonTextDefault","buttonTitleOverride","buttonHint","buttonTitleDefault","buildViewSpec","initHiddenDays","buildPrev","currentDateProfile","forceToValid","prevDate","currentRangeUnit","build","buildNext","nextDate","currentInfo","isRangeAllDay","buildValidRange","trimHiddenDays","buildCurrentRangeInfo","buildRenderRange","adjustActiveRange","buildDateIncrement","validRangeInput","simpleInput","refineRange","buildRangeFromDuration","buildRangeFromDayCount","buildCustomVisibleRange","getFallbackDuration","computeRes","skipHiddenDays","runningCount","visibleRangeInput","fallback","customAlignment","rangeInput","parseRange","isHiddenDayHash","inc","isExclusive","initEventSources","addSources","rawSources","source","parseInitialSources","reduceEventSources","eventSourceHash","fetchDirtySources","fetchSourcesByIds","excludeStaticSources","fetchId","receiveResponse","computeEventSourcesLoading","doesSourceNeedRange","isSourceDirty","prevSources","sourceIdHash","nextSources","fetchSource","sourceDef","fetch","xhr","error","message","ignoreRange","reduceEventStore","subset","calEachTransform","sourceEachTransform","transformEachRawEvent","transformRawEvents","excludeEventsBySourceId","receiveRawEvents","expandRange","master","sub","filteredDefs","filteredInstances","excludeSubEventStore","refinedEvents","rawEvent","refinedEvent","reduceDateSelection","currentSelection","reduceSelectedEvent","currentInstanceId","reduceEventDrag","currentDrag","newDrag","reduceEventResize","currentResize","newResize","parseToolbars","calendarOptionOverrides","parseToolbar","sectionStrHash","sectionWidgets","hasTitle","sectionName","sectionRes","parseSection","widgets","sectionStr","calendarCustomButtons","calendarButtonTextOverrides","calendarButtonText","calendarButtonHintOverrides","calendarButtonHints","sectionSubstrs","buttonGroupStr","buttonClick","buttonIcon","click","hint","textFallback","prevOrNext","navUnit","eventSourceDef","isResolved","wrappedSuccess","arguments","wrappedFailure","then","unpromisify","requestJson","method","successCallback","failureCallback","toUpperCase","encodeParams","injectQueryStringParams","XMLHttpRequest","open","setRequestHeader","onload","status","responseText","err","onerror","send","encodeURIComponent","handleEventSources","unfoundSources","newInputs","inputFound","unfoundSource","newInput","globalPlugins","extraParams","requestParams","customRequestParams","buildRequestParams","errorMessage","startRecur","endRecur","recurringData","clippedFramingRange","dowHash","dayMarker","instanceStarts","instanceStart","expandRanges","html","currentEl","currentHtml","domNodes","currentDomNodes","newDomNodes","newNode","drainedOption","isRunning","isDirty","pauseDepths","timeoutId","tryDrain","pause","resume","force","drained","runTaskOption","queue","delayedRunner","DelayedRunner","task","completedTasks","shift","runTask","buildTitle","buildTitleFormat","computeOptionsData","_computeOptionsData","computeCurrentViewData","_computeCurrentViewData","buildDateEnv","buildTheme","buildDateProfileGenerator","buildViewApi","buildViewUiProps","buildEventUiBySource","buildEventUiBases","parseContextBusinessHours","Emitter","actionRunner","TaskRunner","_handleAction","updateData","currentCalendarOptionsRefined","currentViewOptionsInput","currentViewOptionsRefined","data","optionsData","currentViewType","currentViewData","initialDateInput","getInitialDate","calendarContext","initialState","renderableEventStore","selectionConfig","contextAndState","reducer","computeIsLoading","resetOptions","append","reduceDynamicOptionOverrides","reduceViewType","reduceCurrentDate","dp","reduceDateProfile","eventUiSingleBase","eventUiBySource","newState","wasLoading","isLoading","onAction","oldData","changeHandlers","oldCalendarOptions","newCalendarOptions","reduceEventSourcesNewTimeZone","oldDateEnv","newDateEnv","rezoneEventStoreDates","onData","processRawCalendarOptions","refinedOptions","availableLocaleData","warnUnknownOptions","currentRaw","currentRefined","anyChanges","processRawViewOptions","explicitLocale","DateEnv","DateProfileGenerator","ViewApi","isLoadingFunc","viewName","handleData","dataManager","newOptionOverrides","allowReslicing","maxCoord","stackCnts","insertEntry","findInsertion","isInsertionValid","insertEntryAt","handleInvalidInsertion","stackCnt","touchingEntry","splitEntry","barrier","partCnt","splitHiddenEntries","entrySpan","barrierSpan","intersectSpans","insertAt","buildEntryKey","newEntry","candidateCoord","touchingLevel","touchingLateral","trackingLevel","trackingCoord","trackingEntries","trackingEntry","searchRes","binarySearch","getEntrySpanEnd","lateralIndex","trackingEntryBottom","destLevel","destLateral","toRects","groupIntersectingEntries","merges","filteredMerges","hungryMerge","merge","item","searchVal","getItemVal","middleIndex","middleVal","parseInteractionSettings","interactionSettingsToStore","interactionSettingsStore","config","DRAG_META_REFINERS","parseDragMeta","widgetGroups","widgetGroup","renderWidgetGroup","isOnlyButtons","widget","titleId","isPressed","activeButton","isTodayEnabled","isPrevEnabled","isNextEnabled","buttonClasses","groupClassName","startContent","endContent","model","extraClassName","forceLtr","centerContent","availableWidth","handleEl","updateAvailableWidth","handleResize","labeledById","handleSegClick","hasUrlContainer","Interaction","handleEventElRemove","currentSegEl","handleSegLeave","handleSegEnter","triggerEvent","removeHoverListeners","onMouseEnter","onMouseLeave","currentMatchedChild","mouseOverEv","mouseLeaveEv","listenToHoverBySelector","publicEvName","buildViewPropTransformers","buildToolbarProps","headerRef","footerRef","interactionsStore","viewLabelId","settingsInput","interactions","TheInteractionClass","resizeRunner","viewAspectRatio","toolbarProps","viewVGrow","viewContext","Provider","renderView","buildAppendContent","CalendarInteractionClass","ViewComponent","todayInfo","prevInfo","nextInfo","theClasses","TheClass","handleBeforePrint","handleAfterPrint","CLASS_NAME","renderInner","WEEKDAY_FORMAT","initialNowDate","initialNowQueriedMs","computeTiming","currentState","unroundedNow","currentUnitStart","nextUnitStart","waitMs","buildDayRange","createDayHeaderFormatter","explicitFormat","dateCnt","computeFallbackHeaderFormat","indices","firstIndex","getDateDayIndex","lastIndex","clippedFirstIndex","clippedLastIndex","dayOffset","breakOnWeeks","daysPerRow","buildCells","buildHeaderDates","rows","buildCell","seriesSeg","nextIndex","firstCol","lastCol","sliceBusinessHours","_sliceBusinessHours","sliceDateSelection","_sliceDateSpan","_sliceEventStore","sliceEventDrag","_sliceInteraction","sliceEventResize","forceDayIfListItem","extraArgs","computeActiveRange","rangeRes","sliceEventRanges","sliceEventRange","isComponentAllDay","isInteractionValid","isNewPropsValid","isDateSelectionValid","dateSpanMeta","filterConfig","subjectEventStore","subjectDefs","subjectInstances","subjectConfigs","otherEventStore","removals","otherDefs","otherInstances","otherConfigs","subjectInstanceId","subjectInstance","subjectRange","subjectConfig","subjectDef","allConstraintsPass","eventOverlapFunc","otherInstanceId","otherInstance","calendarEventStore","subjectAllow","subjectDateSpan","origDef","origInstance","isInteractionPropsValid","relevantEventStore","relevantDefs","relevantInstances","selectionRange","selectOverlapFunc","relevantInstanceId","relevantInstance","selectionAllow","isDateSelectionPropsValid","businessHoursUnexpanded","anyRangesContainRange","constraintToRanges","eventStoreToRanges","outerRanges","VISIBLE_HIDDEN_RE","isAbsolute","marginLeft","marginRight","marginBottom","realClientWidth","realClientHeight","masterCallback","depths","callbackMap","handleValue","removed","added","refCallback","computeShrinkWidth","largestWidth","shrinkCell","getSectionHasLiquidHeight","getAllowYScrolling","renderChunkContent","isColPropsEqual","cols0","cols1","renderMicroColGroup","shrinkWidth","colNodes","colProps","sanitizeShrinkWidth","hasShrinkWidth","getScrollGridClassNames","getSectionClassNames","wholeTableVGrow","renderScrollShim","getStickyHeaderDates","getStickyFooterScrollbar","processCols","scrollerRefs","RefMap","renderChunkTd","isLiquid","sectionKey","section","getSectionByKey","isDraggable","isStartResizable","isEndResizable","standardClassNames","getEventClassNames","innerProps","DAY_NUM_FORMAT","refineDayCellHookProps","showDayNumber","extraProps","dayNumberText","renderFill","handleDocumentMouseDown","handleCloseClick","handleDocumentKeyDown","onClose","extraAttrs","parentEl","alignmentEl","alignGridTop","alignmentRect","clippingParents","intersection","computeClippedClientRect","popoverDims","popoverTop","popoverLeft","offsetParent","startDate","dayClassNames","linkElRef","isPopoverOpen","computeRange","buildPublicSeg","handlePopoverClose","updateParentEl","computeEarliestSegStart","pickLatestEnd","pickEarliestStart","seg0","seg1","bodyContent","splitSegsByRow","splitSegsByFirstCol","byCol","splitInteractionByRow","renderTopInner","forceDayTop","dayNumberId","DEFAULT_TABLE_EVENT_TIME_FORMAT","hasListItemDisplay","compileSegs","singlePlacements","invisibleSegs","TableListItemEvent","TableBlockEvent","dayElRef","rootDataAttrs","showWeekNumber","weekElRef","weekClassNames","TableCellTop","fgContentElRef","fgContent","marginTop","moreMarginTop","TableCellMoreLink","bgContent","computeFgSegPlacement","maxContentHeight","DayGridSegHierarchy","hiddenConsumes","unknownHeightSegs","eventHeight","allRects","rectsByEachCol","groupRectsByEachCol","singleColPlacements","multiColPlacements","leftoverMargins","currentHeight","currentMarginTop","resliceSeg","absoluteTop","multiPlacements","isFirstCol","placeRects","moreCnts","moreMarginTops","hiddenEntry","hiddenSpan","spanStart","spanEnd","forceHidden","excludeHidden","touchingEntryId","placeholderEntry","frameElRefs","fgElRefs","segHarnessRefs","framePositions","businessHoursByCol","bgEventSegsByCol","highlightSegsByCol","getHighlightSegs","mirrorSegsByCol","getMirrorSegs","normalFgNodes","mirrorFgNodes","colPlacements","TableCell","showDayNumbers","currentProps","leftRightCss","isExternalSizingChange","frameEls","oldInstanceHeights","newInstanceHeights","queryEventInstanceHeights","limitByContentHeight","computeMaxContentHeight","segElMap","firstKey","fcContainerEl","getCellEls","TableRow","rowRefs","limitViaBalanced","isSegAllDay","rowPositions","rowObj","colPositions","getCellRange","getCellEl","DayTableSlicer","tableRef","Table","buildDayTableModel","DayTable","TableView","endOfWeek","dayGrid","DayTableView","TableDateProfileGenerator","dayGridDay","dayGridWeek","dayGridMonth"],"mappings":"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","file":"static/js/29.7b021708.chunk.js","sourcesContent":["import {\n  BaseComponent, DateMarker, createElement, DateRange, getDateMeta,\n  RenderHook, DayHeaderContentArg, getDayClassNames, formatDayString, Fragment, buildNavLinkAttrs, getUniqueDomId,\n} from '@fullcalendar/common'\n\nexport interface ListViewHeaderRowProps {\n  cellId: string\n  dayDate: DateMarker\n  todayRange: DateRange\n}\n\ninterface HookProps extends DayHeaderContentArg { // doesn't enforce much since DayCellContentArg allow extra props\n  textId: string // for aria-labelledby\n  text: string\n  sideText: string\n}\n\nexport class ListViewHeaderRow extends BaseComponent<ListViewHeaderRowProps> {\n  state = {\n    textId: getUniqueDomId(),\n  }\n\n  render() {\n    let { theme, dateEnv, options, viewApi } = this.context\n    let { cellId, dayDate, todayRange } = this.props\n    let { textId } = this.state\n    let dayMeta = getDateMeta(dayDate, todayRange)\n\n    // will ever be falsy?\n    let text = options.listDayFormat ? dateEnv.format(dayDate, options.listDayFormat) : ''\n\n    // will ever be falsy? also, BAD NAME \"alt\"\n    let sideText = options.listDaySideFormat ? dateEnv.format(dayDate, options.listDaySideFormat) : ''\n\n    let hookProps: HookProps = {\n      date: dateEnv.toDate(dayDate),\n      view: viewApi,\n      textId,\n      text,\n      sideText,\n      navLinkAttrs: buildNavLinkAttrs(this.context, dayDate),\n      sideNavLinkAttrs: buildNavLinkAttrs(this.context, dayDate, 'day', false),\n      ...dayMeta,\n    }\n\n    let classNames = ['fc-list-day'].concat(\n      getDayClassNames(dayMeta, theme),\n    )\n\n    // TODO: make a reusable HOC for dayHeader (used in daygrid/timegrid too)\n    return (\n      <RenderHook<HookProps>\n        hookProps={hookProps}\n        classNames={options.dayHeaderClassNames}\n        content={options.dayHeaderContent}\n        defaultContent={renderInnerContent}\n        didMount={options.dayHeaderDidMount}\n        willUnmount={options.dayHeaderWillUnmount}\n      >\n        {(rootElRef, customClassNames, innerElRef, innerContent) => (\n          <tr\n            ref={rootElRef}\n            className={classNames.concat(customClassNames).join(' ')}\n            data-date={formatDayString(dayDate)}\n          >\n            {/* TODO: force-hide top border based on :first-child */}\n            <th scope=\"colgroup\" colSpan={3} id={cellId} aria-labelledby={textId}>\n              <div className={'fc-list-day-cushion ' + theme.getClass('tableCellShaded')} ref={innerElRef}>\n                {innerContent}\n              </div>\n            </th>\n          </tr>\n        )}\n      </RenderHook>\n    )\n  }\n}\n\nfunction renderInnerContent(props: HookProps) {\n  return (\n    <Fragment>\n      {props.text && (\n        <a id={props.textId} className=\"fc-list-day-text\" {...props.navLinkAttrs}>\n          {props.text}\n        </a>\n      )}\n      {props.sideText && (/* not keyboard tabbable */\n        <a aria-hidden className=\"fc-list-day-side-text\" {...props.sideNavLinkAttrs}>\n          {props.sideText}\n        </a>\n      )}\n    </Fragment>\n  )\n}\n","import {\n  MinimalEventProps, BaseComponent, ViewContext, createElement, AllDayContentArg,\n  Seg, isMultiDayRange, DateFormatter, buildSegTimeText, createFormatter, EventRoot, ComponentChildren, RenderHook, getSegAnchorAttrs,\n} from '@fullcalendar/common'\n\nconst DEFAULT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  meridiem: 'short',\n})\n\nexport interface ListViewEventRowProps extends MinimalEventProps {\n  timeHeaderId: string\n  eventHeaderId: string\n  dateHeaderId: string\n}\n\nexport class ListViewEventRow extends BaseComponent<ListViewEventRowProps> {\n  render() {\n    let { props, context } = this\n    let { seg, timeHeaderId, eventHeaderId, dateHeaderId } = props\n    let timeFormat = context.options.eventTimeFormat || DEFAULT_TIME_FORMAT\n\n    return (\n      <EventRoot\n        seg={seg}\n        timeText=\"\" // BAD. because of all-day content\n        disableDragging\n        disableResizing\n        defaultContent={() => renderEventInnerContent(seg, context) /* weird */}\n        isPast={props.isPast}\n        isFuture={props.isFuture}\n        isToday={props.isToday}\n        isSelected={props.isSelected}\n        isDragging={props.isDragging}\n        isResizing={props.isResizing}\n        isDateSelecting={props.isDateSelecting}\n      >\n        {(rootElRef, classNames, innerElRef, innerContent, hookProps) => (\n          <tr className={['fc-list-event', hookProps.event.url ? 'fc-event-forced-url' : ''].concat(classNames).join(' ')} ref={rootElRef}>\n            {buildTimeContent(seg, timeFormat, context, timeHeaderId, dateHeaderId)}\n            <td aria-hidden className=\"fc-list-event-graphic\">\n              <span className=\"fc-list-event-dot\" style={{ borderColor: hookProps.borderColor || hookProps.backgroundColor }} />\n            </td>\n            <td ref={innerElRef} headers={`${eventHeaderId} ${dateHeaderId}`} className=\"fc-list-event-title\">\n              {innerContent}\n            </td>\n          </tr>\n        )}\n      </EventRoot>\n    )\n  }\n}\n\nfunction renderEventInnerContent(seg: Seg, context: ViewContext) {\n  let interactiveAttrs = getSegAnchorAttrs(seg, context)\n  return (\n    <a {...interactiveAttrs}>\n      {/* TODO: document how whole row become clickable */}\n      {seg.eventRange.def.title}\n    </a>\n  )\n}\n\nfunction buildTimeContent(\n  seg: Seg,\n  timeFormat: DateFormatter,\n  context: ViewContext,\n  timeHeaderId: string,\n  dateHeaderId: string,\n): ComponentChildren {\n  let { options } = context\n\n  if (options.displayEventTime !== false) {\n    let eventDef = seg.eventRange.def\n    let eventInstance = seg.eventRange.instance\n    let doAllDay = false\n    let timeText: string\n\n    if (eventDef.allDay) {\n      doAllDay = true\n    } else if (isMultiDayRange(seg.eventRange.range)) { // TODO: use (!isStart || !isEnd) instead?\n      if (seg.isStart) {\n        timeText = buildSegTimeText(\n          seg,\n          timeFormat,\n          context,\n          null,\n          null,\n          eventInstance.range.start,\n          seg.end,\n        )\n      } else if (seg.isEnd) {\n        timeText = buildSegTimeText(\n          seg,\n          timeFormat,\n          context,\n          null,\n          null,\n          seg.start,\n          eventInstance.range.end,\n        )\n      } else {\n        doAllDay = true\n      }\n    } else {\n      timeText = buildSegTimeText(\n        seg,\n        timeFormat,\n        context,\n      )\n    }\n\n    if (doAllDay) {\n      let hookProps: AllDayContentArg = {\n        text: context.options.allDayText,\n        view: context.viewApi,\n      }\n\n      return (\n        <RenderHook<AllDayContentArg> // needed?\n          hookProps={hookProps}\n          classNames={options.allDayClassNames}\n          content={options.allDayContent}\n          defaultContent={renderAllDayInner}\n          didMount={options.allDayDidMount}\n          willUnmount={options.allDayWillUnmount}\n        >\n          {(rootElRef, classNames, innerElRef, innerContent) => (\n            <td ref={rootElRef} headers={`${timeHeaderId} ${dateHeaderId}`} className={['fc-list-event-time'].concat(classNames).join(' ')}>\n              {innerContent}\n            </td>\n          )}\n        </RenderHook>\n      )\n    }\n\n    return (\n      <td className=\"fc-list-event-time\">\n        {timeText}\n      </td>\n    )\n  }\n\n  return null\n}\n\nfunction renderAllDayInner(hookProps) {\n  return hookProps.text\n}\n","import {\n  createElement,\n  ViewProps,\n  Scroller,\n  DateMarker,\n  addDays,\n  startOfDay,\n  DateRange,\n  intersectRanges,\n  DateProfile,\n  EventUiHash,\n  EventRenderRange,\n  sliceEventStore,\n  EventStore,\n  memoize,\n  Seg,\n  VNode,\n  sortEventSegs,\n  getSegMeta,\n  NowTimer,\n  ViewRoot,\n  RenderHook,\n  DateComponent,\n  ViewApi,\n  MountArg,\n  getUniqueDomId,\n  formatDayString,\n} from '@fullcalendar/common'\nimport { ListViewHeaderRow } from './ListViewHeaderRow'\nimport { ListViewEventRow } from './ListViewEventRow'\n\nexport interface NoEventsContentArg {\n  text: string\n  view: ViewApi\n}\n\nexport type NoEventsMountArg = MountArg<NoEventsContentArg>\n\n/*\nResponsible for the scroller, and forwarding event-related actions into the \"grid\".\n*/\nexport class ListView extends DateComponent<ViewProps> {\n  private computeDateVars = memoize(computeDateVars)\n  private eventStoreToSegs = memoize(this._eventStoreToSegs)\n  state = {\n    timeHeaderId: getUniqueDomId(),\n    eventHeaderId: getUniqueDomId(),\n    dateHeaderIdRoot: getUniqueDomId(),\n  }\n\n  render() {\n    let { props, context } = this\n\n    let extraClassNames = [\n      'fc-list',\n      context.theme.getClass('table'), // just for the outer border. will be on div\n      context.options.stickyHeaderDates !== false ? 'fc-list-sticky' : '',\n    ]\n\n    let { dayDates, dayRanges } = this.computeDateVars(props.dateProfile)\n    let eventSegs = this.eventStoreToSegs(props.eventStore, props.eventUiBases, dayRanges)\n\n    return (\n      <ViewRoot viewSpec={context.viewSpec} elRef={this.setRootEl}>\n        {(rootElRef, classNames) => (\n          <div ref={rootElRef} className={extraClassNames.concat(classNames).join(' ')}>\n            <Scroller\n              liquid={!props.isHeightAuto}\n              overflowX={props.isHeightAuto ? 'visible' : 'hidden'}\n              overflowY={props.isHeightAuto ? 'visible' : 'auto'}\n            >\n              {eventSegs.length > 0 ?\n                this.renderSegList(eventSegs, dayDates) :\n                this.renderEmptyMessage()}\n            </Scroller>\n          </div>\n        )}\n      </ViewRoot>\n    )\n  }\n\n  setRootEl = (rootEl: HTMLDivElement | null) => {\n    if (rootEl) {\n      this.context.registerInteractiveComponent(this, { // TODO: make aware that it doesn't do Hits\n        el: rootEl,\n      })\n    } else {\n      this.context.unregisterInteractiveComponent(this)\n    }\n  }\n\n  renderEmptyMessage() {\n    let { options, viewApi } = this.context\n    let hookProps: NoEventsContentArg = {\n      text: options.noEventsText,\n      view: viewApi,\n    }\n\n    return (\n      <RenderHook<NoEventsContentArg> // needed???\n        hookProps={hookProps}\n        classNames={options.noEventsClassNames}\n        content={options.noEventsContent}\n        defaultContent={renderNoEventsInner}\n        didMount={options.noEventsDidMount}\n        willUnmount={options.noEventsWillUnmount}\n      >\n        {(rootElRef, classNames, innerElRef, innerContent) => (\n          <div className={['fc-list-empty'].concat(classNames).join(' ')} ref={rootElRef}>\n            <div className=\"fc-list-empty-cushion\" ref={innerElRef}>\n              {innerContent}\n            </div>\n          </div>\n        )}\n      </RenderHook>\n    )\n  }\n\n  renderSegList(allSegs: Seg[], dayDates: DateMarker[]) {\n    let { theme, options } = this.context\n    let { timeHeaderId, eventHeaderId, dateHeaderIdRoot } = this.state\n    let segsByDay = groupSegsByDay(allSegs) // sparse array\n\n    return (\n      <NowTimer unit=\"day\">\n        {(nowDate: DateMarker, todayRange: DateRange) => {\n          let innerNodes: VNode[] = []\n\n          for (let dayIndex = 0; dayIndex < segsByDay.length; dayIndex += 1) {\n            let daySegs = segsByDay[dayIndex]\n\n            if (daySegs) { // sparse array, so might be undefined\n              let dayStr = formatDayString(dayDates[dayIndex])\n              let dateHeaderId = dateHeaderIdRoot + '-' + dayStr\n\n              // append a day header\n              innerNodes.push(\n                <ListViewHeaderRow\n                  key={dayStr}\n                  cellId={dateHeaderId}\n                  dayDate={dayDates[dayIndex]}\n                  todayRange={todayRange}\n                />,\n              )\n\n              daySegs = sortEventSegs(daySegs, options.eventOrder)\n\n              for (let seg of daySegs) {\n                innerNodes.push(\n                  <ListViewEventRow\n                    key={dayStr + ':' + seg.eventRange.instance.instanceId /* are multiple segs for an instanceId */}\n                    seg={seg}\n                    isDragging={false}\n                    isResizing={false}\n                    isDateSelecting={false}\n                    isSelected={false}\n                    timeHeaderId={timeHeaderId}\n                    eventHeaderId={eventHeaderId}\n                    dateHeaderId={dateHeaderId}\n                    {...getSegMeta(seg, todayRange, nowDate)}\n                  />,\n                )\n              }\n            }\n          }\n\n          return (\n            <table className={'fc-list-table ' + theme.getClass('table')}>\n              <thead>\n                <tr>\n                  <th scope=\"col\" id={timeHeaderId}>{options.timeHint}</th>\n                  <th scope=\"col\" aria-hidden />\n                  <th scope=\"col\" id={eventHeaderId}>{options.eventHint}</th>\n                </tr>\n              </thead>\n              <tbody>{innerNodes}</tbody>\n            </table>\n          )\n        }}\n      </NowTimer>\n    )\n  }\n\n  _eventStoreToSegs(eventStore: EventStore, eventUiBases: EventUiHash, dayRanges: DateRange[]): Seg[] {\n    return this.eventRangesToSegs(\n      sliceEventStore(\n        eventStore,\n        eventUiBases,\n        this.props.dateProfile.activeRange,\n        this.context.options.nextDayThreshold,\n      ).fg,\n      dayRanges,\n    )\n  }\n\n  eventRangesToSegs(eventRanges: EventRenderRange[], dayRanges: DateRange[]) {\n    let segs = []\n\n    for (let eventRange of eventRanges) {\n      segs.push(...this.eventRangeToSegs(eventRange, dayRanges))\n    }\n\n    return segs\n  }\n\n  eventRangeToSegs(eventRange: EventRenderRange, dayRanges: DateRange[]) {\n    let { dateEnv } = this.context\n    let { nextDayThreshold } = this.context.options\n    let range = eventRange.range\n    let allDay = eventRange.def.allDay\n    let dayIndex\n    let segRange\n    let seg\n    let segs = []\n\n    for (dayIndex = 0; dayIndex < dayRanges.length; dayIndex += 1) {\n      segRange = intersectRanges(range, dayRanges[dayIndex])\n\n      if (segRange) {\n        seg = {\n          component: this,\n          eventRange,\n          start: segRange.start,\n          end: segRange.end,\n          isStart: eventRange.isStart && segRange.start.valueOf() === range.start.valueOf(),\n          isEnd: eventRange.isEnd && segRange.end.valueOf() === range.end.valueOf(),\n          dayIndex,\n        }\n\n        segs.push(seg)\n\n        // detect when range won't go fully into the next day,\n        // and mutate the latest seg to the be the end.\n        if (\n          !seg.isEnd && !allDay &&\n          dayIndex + 1 < dayRanges.length &&\n          range.end <\n            dateEnv.add(\n              dayRanges[dayIndex + 1].start,\n              nextDayThreshold,\n            )\n        ) {\n          seg.end = range.end\n          seg.isEnd = true\n          break\n        }\n      }\n    }\n\n    return segs\n  }\n}\n\nfunction renderNoEventsInner(hookProps) {\n  return hookProps.text\n}\n\nfunction computeDateVars(dateProfile: DateProfile) {\n  let dayStart = startOfDay(dateProfile.renderRange.start)\n  let viewEnd = dateProfile.renderRange.end\n  let dayDates: DateMarker[] = []\n  let dayRanges: DateRange[] = []\n\n  while (dayStart < viewEnd) {\n    dayDates.push(dayStart)\n\n    dayRanges.push({\n      start: dayStart,\n      end: addDays(dayStart, 1),\n    })\n\n    dayStart = addDays(dayStart, 1)\n  }\n\n  return { dayDates, dayRanges }\n}\n\n// Returns a sparse array of arrays, segs grouped by their dayIndex\nfunction groupSegsByDay(segs): Seg[][] {\n  let segsByDay = [] // sparse array\n  let i\n  let seg\n\n  for (i = 0; i < segs.length; i += 1) {\n    seg = segs[i];\n    (segsByDay[seg.dayIndex] || (segsByDay[seg.dayIndex] = []))\n      .push(seg)\n  }\n\n  return segsByDay\n}\n","import { createDuration } from './datelib/duration'\nimport { mergeProps, isPropsEqual } from './util/object'\nimport { createFormatter } from './datelib/formatting'\nimport { parseFieldSpecs } from './util/misc'\nimport { DateProfileGeneratorClass } from './DateProfileGenerator'\n\n// public\nimport {\n  CssDimValue,\n  DateInput,\n  DateRangeInput,\n  BusinessHoursInput,\n  EventSourceInput,\n  ViewApi,\n  LocaleSingularArg, LocaleInput,\n  EventInput, EventInputTransformer,\n  OverlapFunc, ConstraintInput, AllowFunc,\n  PluginDef,\n  ViewComponentType,\n  SpecificViewContentArg, SpecificViewMountArg,\n  ClassNamesGenerator, CustomContentGenerator, DidMountHandler, WillUnmountHandler,\n  NowIndicatorContentArg, NowIndicatorMountArg,\n  WeekNumberContentArg, WeekNumberMountArg,\n  SlotLaneContentArg, SlotLaneMountArg,\n  SlotLabelContentArg, SlotLabelMountArg,\n  AllDayContentArg, AllDayMountArg,\n  DayHeaderContentArg, DayHeaderMountArg,\n  DayCellContentArg, DayCellMountArg,\n  ViewContentArg, ViewMountArg,\n  EventClickArg,\n  EventHoveringArg,\n  DateSelectArg, DateUnselectArg,\n  CalendarApi,\n  VUIEvent,\n  WeekNumberCalculation,\n  FormatterInput,\n  ToolbarInput, CustomButtonInput, ButtonIconsInput, ButtonTextCompoundInput,\n  EventContentArg, EventMountArg,\n  DatesSetArg,\n  EventApi, EventAddArg, EventChangeArg, EventRemoveArg,\n  MoreLinkContentArg,\n  MoreLinkMountArg,\n  MoreLinkAction,\n  ButtonHintCompoundInput,\n} from './api-type-deps'\n\n// base options\n// ------------\n\nexport const BASE_OPTION_REFINERS = {\n  navLinkDayClick: identity as Identity<string | ((this: CalendarApi, date: Date, jsEvent: VUIEvent) => void)>,\n  navLinkWeekClick: identity as Identity<string | ((this: CalendarApi, weekStart: Date, jsEvent: VUIEvent) => void)>,\n  duration: createDuration,\n  bootstrapFontAwesome: identity as Identity<ButtonIconsInput | false>, // TODO: move to bootstrap plugin\n  buttonIcons: identity as Identity<ButtonIconsInput | false>,\n  customButtons: identity as Identity<{ [name: string]: CustomButtonInput }>,\n  defaultAllDayEventDuration: createDuration,\n  defaultTimedEventDuration: createDuration,\n  nextDayThreshold: createDuration,\n  scrollTime: createDuration,\n  scrollTimeReset: Boolean,\n  slotMinTime: createDuration,\n  slotMaxTime: createDuration,\n  dayPopoverFormat: createFormatter,\n  slotDuration: createDuration,\n  snapDuration: createDuration,\n  headerToolbar: identity as Identity<ToolbarInput | false>,\n  footerToolbar: identity as Identity<ToolbarInput | false>,\n  defaultRangeSeparator: String,\n  titleRangeSeparator: String,\n  forceEventDuration: Boolean,\n\n  dayHeaders: Boolean,\n  dayHeaderFormat: createFormatter,\n  dayHeaderClassNames: identity as Identity<ClassNamesGenerator<DayHeaderContentArg>>,\n  dayHeaderContent: identity as Identity<CustomContentGenerator<DayHeaderContentArg>>,\n  dayHeaderDidMount: identity as Identity<DidMountHandler<DayHeaderMountArg>>,\n  dayHeaderWillUnmount: identity as Identity<WillUnmountHandler<DayHeaderMountArg>>,\n\n  dayCellClassNames: identity as Identity<ClassNamesGenerator<DayCellContentArg>>,\n  dayCellContent: identity as Identity<CustomContentGenerator<DayCellContentArg>>,\n  dayCellDidMount: identity as Identity<DidMountHandler<DayCellMountArg>>,\n  dayCellWillUnmount: identity as Identity<WillUnmountHandler<DayCellMountArg>>,\n\n  initialView: String,\n  aspectRatio: Number,\n  weekends: Boolean,\n\n  weekNumberCalculation: identity as Identity<WeekNumberCalculation>,\n  weekNumbers: Boolean,\n  weekNumberClassNames: identity as Identity<ClassNamesGenerator<WeekNumberContentArg>>,\n  weekNumberContent: identity as Identity<CustomContentGenerator<WeekNumberContentArg>>,\n  weekNumberDidMount: identity as Identity<DidMountHandler<WeekNumberMountArg>>,\n  weekNumberWillUnmount: identity as Identity<WillUnmountHandler<WeekNumberMountArg>>,\n\n  editable: Boolean,\n\n  viewClassNames: identity as Identity<ClassNamesGenerator<ViewContentArg>>,\n  viewDidMount: identity as Identity<DidMountHandler<ViewMountArg>>,\n  viewWillUnmount: identity as Identity<WillUnmountHandler<ViewMountArg>>,\n\n  nowIndicator: Boolean,\n  nowIndicatorClassNames: identity as Identity<ClassNamesGenerator<NowIndicatorContentArg>>,\n  nowIndicatorContent: identity as Identity<CustomContentGenerator<NowIndicatorContentArg>>,\n  nowIndicatorDidMount: identity as Identity<DidMountHandler<NowIndicatorMountArg>>,\n  nowIndicatorWillUnmount: identity as Identity<WillUnmountHandler<NowIndicatorMountArg>>,\n\n  showNonCurrentDates: Boolean,\n  lazyFetching: Boolean,\n  startParam: String,\n  endParam: String,\n  timeZoneParam: String,\n  timeZone: String,\n  locales: identity as Identity<LocaleInput[]>,\n  locale: identity as Identity<LocaleSingularArg>,\n  themeSystem: String as Identity<'standard' | string>,\n  dragRevertDuration: Number,\n  dragScroll: Boolean,\n  allDayMaintainDuration: Boolean,\n  unselectAuto: Boolean,\n  dropAccept: identity as Identity<string | ((this: CalendarApi, draggable: any) => boolean)>, // TODO: type draggable\n  eventOrder: parseFieldSpecs,\n  eventOrderStrict: Boolean,\n\n  handleWindowResize: Boolean,\n  windowResizeDelay: Number,\n  longPressDelay: Number,\n  eventDragMinDistance: Number,\n  expandRows: Boolean,\n  height: identity as Identity<CssDimValue>,\n  contentHeight: identity as Identity<CssDimValue>,\n  direction: String as Identity<'ltr' | 'rtl'>,\n  weekNumberFormat: createFormatter,\n  eventResizableFromStart: Boolean,\n  displayEventTime: Boolean,\n  displayEventEnd: Boolean,\n  weekText: String, // the short version\n  weekTextLong: String, // falls back to weekText\n  progressiveEventRendering: Boolean,\n  businessHours: identity as Identity<BusinessHoursInput>,\n  initialDate: identity as Identity<DateInput>,\n  now: identity as Identity<DateInput | ((this: CalendarApi) => DateInput)>,\n  eventDataTransform: identity as Identity<EventInputTransformer>,\n  stickyHeaderDates: identity as Identity<boolean | 'auto'>,\n  stickyFooterScrollbar: identity as Identity<boolean | 'auto'>,\n  viewHeight: identity as Identity<CssDimValue>,\n  defaultAllDay: Boolean,\n  eventSourceFailure: identity as Identity<(this: CalendarApi, error: any) => void>,\n  eventSourceSuccess: identity as Identity<(this: CalendarApi, eventsInput: EventInput[], xhr?: XMLHttpRequest) => EventInput[] | void>,\n\n  eventDisplay: String, // TODO: give more specific\n  eventStartEditable: Boolean,\n  eventDurationEditable: Boolean,\n  eventOverlap: identity as Identity<boolean | OverlapFunc>,\n  eventConstraint: identity as Identity<ConstraintInput>,\n  eventAllow: identity as Identity<AllowFunc>,\n  eventBackgroundColor: String,\n  eventBorderColor: String,\n  eventTextColor: String,\n  eventColor: String,\n  eventClassNames: identity as Identity<ClassNamesGenerator<EventContentArg>>,\n  eventContent: identity as Identity<CustomContentGenerator<EventContentArg>>,\n  eventDidMount: identity as Identity<DidMountHandler<EventMountArg>>,\n  eventWillUnmount: identity as Identity<WillUnmountHandler<EventMountArg>>,\n\n  selectConstraint: identity as Identity<ConstraintInput>,\n  selectOverlap: identity as Identity<boolean | OverlapFunc>,\n  selectAllow: identity as Identity<AllowFunc>,\n\n  droppable: Boolean,\n  unselectCancel: String,\n\n  slotLabelFormat: identity as Identity<FormatterInput | FormatterInput[]>,\n\n  slotLaneClassNames: identity as Identity<ClassNamesGenerator<SlotLaneContentArg>>,\n  slotLaneContent: identity as Identity<CustomContentGenerator<SlotLaneContentArg>>,\n  slotLaneDidMount: identity as Identity<DidMountHandler<SlotLaneMountArg>>,\n  slotLaneWillUnmount: identity as Identity<WillUnmountHandler<SlotLaneMountArg>>,\n\n  slotLabelClassNames: identity as Identity<ClassNamesGenerator<SlotLabelContentArg>>,\n  slotLabelContent: identity as Identity<CustomContentGenerator<SlotLabelContentArg>>,\n  slotLabelDidMount: identity as Identity<DidMountHandler<SlotLabelMountArg>>,\n  slotLabelWillUnmount: identity as Identity<WillUnmountHandler<SlotLabelMountArg>>,\n\n  dayMaxEvents: identity as Identity<boolean | number>,\n  dayMaxEventRows: identity as Identity<boolean | number>,\n  dayMinWidth: Number,\n  slotLabelInterval: createDuration,\n\n  allDayText: String,\n  allDayClassNames: identity as Identity<ClassNamesGenerator<AllDayContentArg>>,\n  allDayContent: identity as Identity<CustomContentGenerator<AllDayContentArg>>,\n  allDayDidMount: identity as Identity<DidMountHandler<AllDayMountArg>>,\n  allDayWillUnmount: identity as Identity<WillUnmountHandler<AllDayMountArg>>,\n\n  slotMinWidth: Number, // move to timeline?\n  navLinks: Boolean,\n  eventTimeFormat: createFormatter,\n  rerenderDelay: Number, // TODO: move to @fullcalendar/core right? nah keep here\n  moreLinkText: identity as Identity<string | ((this: CalendarApi, num: number) => string)>, // this not enforced :( check others too\n  moreLinkHint: identity as Identity<string | ((this: CalendarApi, num: number) => string)>,\n  selectMinDistance: Number,\n  selectable: Boolean,\n  selectLongPressDelay: Number,\n  eventLongPressDelay: Number,\n\n  selectMirror: Boolean,\n  eventMaxStack: Number,\n  eventMinHeight: Number,\n  eventMinWidth: Number,\n  eventShortHeight: Number,\n  slotEventOverlap: Boolean,\n  plugins: identity as Identity<PluginDef[]>,\n  firstDay: Number,\n  dayCount: Number,\n  dateAlignment: String,\n  dateIncrement: createDuration,\n  hiddenDays: identity as Identity<number[]>,\n  monthMode: Boolean,\n  fixedWeekCount: Boolean,\n  validRange: identity as Identity<DateRangeInput | ((this: CalendarApi, nowDate: Date) => DateRangeInput)>, // `this` works?\n  visibleRange: identity as Identity<DateRangeInput | ((this: CalendarApi, currentDate: Date) => DateRangeInput)>, // `this` works?\n  titleFormat: identity as Identity<FormatterInput>, // DONT parse just yet. we need to inject titleSeparator\n\n  eventInteractive: Boolean,\n\n  // only used by list-view, but languages define the value, so we need it in base options\n  noEventsText: String,\n\n  viewHint: identity as Identity<string | ((...args: any[]) => string)>,\n  navLinkHint: identity as Identity<string | ((...args: any[]) => string)>,\n  closeHint: String,\n  timeHint: String,\n  eventHint: String,\n\n  moreLinkClick: identity as Identity<MoreLinkAction>,\n  moreLinkClassNames: identity as Identity<ClassNamesGenerator<MoreLinkContentArg>>,\n  moreLinkContent: identity as Identity<CustomContentGenerator<MoreLinkContentArg>>,\n  moreLinkDidMount: identity as Identity<DidMountHandler<MoreLinkMountArg>>,\n  moreLinkWillUnmount: identity as Identity<WillUnmountHandler<MoreLinkMountArg>>,\n}\n\ntype BuiltInBaseOptionRefiners = typeof BASE_OPTION_REFINERS\n\nexport interface BaseOptionRefiners extends BuiltInBaseOptionRefiners {\n  // for ambient-extending\n}\n\nexport type BaseOptions = RawOptionsFromRefiners< // as RawOptions\n  Required<BaseOptionRefiners> // Required is a hack for \"Index signature is missing\"\n>\n\n// do NOT give a type here. need `typeof BASE_OPTION_DEFAULTS` to give real results.\n// raw values.\nexport const BASE_OPTION_DEFAULTS = {\n  eventDisplay: 'auto',\n  defaultRangeSeparator: ' - ',\n  titleRangeSeparator: ' \\u2013 ', // en dash\n  defaultTimedEventDuration: '01:00:00',\n  defaultAllDayEventDuration: { day: 1 },\n  forceEventDuration: false,\n  nextDayThreshold: '00:00:00',\n  dayHeaders: true,\n  initialView: '',\n  aspectRatio: 1.35,\n  headerToolbar: {\n    start: 'title',\n    center: '',\n    end: 'today prev,next',\n  },\n  weekends: true,\n  weekNumbers: false,\n  weekNumberCalculation: 'local' as WeekNumberCalculation,\n  editable: false,\n  nowIndicator: false,\n  scrollTime: '06:00:00',\n  scrollTimeReset: true,\n  slotMinTime: '00:00:00',\n  slotMaxTime: '24:00:00',\n  showNonCurrentDates: true,\n  lazyFetching: true,\n  startParam: 'start',\n  endParam: 'end',\n  timeZoneParam: 'timeZone',\n  timeZone: 'local', // TODO: throw error if given falsy value?\n  locales: [],\n  locale: '', // blank values means it will compute based off locales[]\n  themeSystem: 'standard',\n  dragRevertDuration: 500,\n  dragScroll: true,\n  allDayMaintainDuration: false,\n  unselectAuto: true,\n  dropAccept: '*',\n  eventOrder: 'start,-duration,allDay,title',\n  dayPopoverFormat: { month: 'long', day: 'numeric', year: 'numeric' },\n  handleWindowResize: true,\n  windowResizeDelay: 100, // milliseconds before an updateSize happens\n  longPressDelay: 1000,\n  eventDragMinDistance: 5, // only applies to mouse\n  expandRows: false,\n  navLinks: false,\n  selectable: false,\n  eventMinHeight: 15,\n  eventMinWidth: 30,\n  eventShortHeight: 30,\n}\n\nexport type BaseOptionsRefined = DefaultedRefinedOptions<\n  RefinedOptionsFromRefiners<Required<BaseOptionRefiners>>, // Required is a hack for \"Index signature is missing\"\n  keyof typeof BASE_OPTION_DEFAULTS\n>\n\n// calendar listeners\n// ------------------\n\nexport const CALENDAR_LISTENER_REFINERS = {\n  datesSet: identity as Identity<(arg: DatesSetArg) => void>,\n  eventsSet: identity as Identity<(events: EventApi[]) => void>,\n  eventAdd: identity as Identity<(arg: EventAddArg) => void>,\n  eventChange: identity as Identity<(arg: EventChangeArg) => void>,\n  eventRemove: identity as Identity<(arg: EventRemoveArg) => void>,\n  windowResize: identity as Identity<(arg: { view: ViewApi }) => void>,\n  eventClick: identity as Identity<(arg: EventClickArg) => void>, // TODO: resource for scheduler????\n  eventMouseEnter: identity as Identity<(arg: EventHoveringArg) => void>,\n  eventMouseLeave: identity as Identity<(arg: EventHoveringArg) => void>,\n  select: identity as Identity<(arg: DateSelectArg) => void>, // resource for scheduler????\n  unselect: identity as Identity<(arg: DateUnselectArg) => void>,\n  loading: identity as Identity<(isLoading: boolean) => void>,\n\n  // internal\n  _unmount: identity as Identity<() => void>,\n  _beforeprint: identity as Identity<() => void>,\n  _afterprint: identity as Identity<() => void>,\n  _noEventDrop: identity as Identity<() => void>,\n  _noEventResize: identity as Identity<() => void>,\n  _resize: identity as Identity<(forced: boolean) => void>,\n  _scrollRequest: identity as Identity<(arg: any) => void>,\n}\n\ntype BuiltInCalendarListenerRefiners = typeof CALENDAR_LISTENER_REFINERS\n\nexport interface CalendarListenerRefiners extends BuiltInCalendarListenerRefiners {\n  // for ambient extending\n}\n\ntype CalendarListenersLoose = RefinedOptionsFromRefiners<Required<CalendarListenerRefiners>> // Required hack\nexport type CalendarListeners = Required<CalendarListenersLoose> // much more convenient for Emitters and whatnot\n\n// calendar-specific options\n// -------------------------\n\nexport const CALENDAR_OPTION_REFINERS = { // does not include base nor calendar listeners\n  buttonText: identity as Identity<ButtonTextCompoundInput>,\n  buttonHints: identity as Identity<ButtonHintCompoundInput>,\n  views: identity as Identity<{ [viewId: string]: ViewOptions }>,\n  plugins: identity as Identity<PluginDef[]>,\n  initialEvents: identity as Identity<EventSourceInput>,\n  events: identity as Identity<EventSourceInput>,\n  eventSources: identity as Identity<EventSourceInput[]>,\n}\n\ntype BuiltInCalendarOptionRefiners = typeof CALENDAR_OPTION_REFINERS\n\nexport interface CalendarOptionRefiners extends BuiltInCalendarOptionRefiners {\n  // for ambient-extending\n}\n\nexport type CalendarOptions =\n  BaseOptions &\n  CalendarListenersLoose &\n  RawOptionsFromRefiners<Required<CalendarOptionRefiners>> // Required hack https://github.com/microsoft/TypeScript/issues/15300\n\nexport type CalendarOptionsRefined =\n  BaseOptionsRefined &\n  CalendarListenersLoose &\n  RefinedOptionsFromRefiners<Required<CalendarOptionRefiners>> // Required hack\n\nexport const COMPLEX_OPTION_COMPARATORS: {\n  [optionName in keyof CalendarOptions]: (a: CalendarOptions[optionName], b: CalendarOptions[optionName]) => boolean\n} = {\n  headerToolbar: isBoolComplexEqual,\n  footerToolbar: isBoolComplexEqual,\n  buttonText: isBoolComplexEqual,\n  buttonHints: isBoolComplexEqual,\n  buttonIcons: isBoolComplexEqual,\n}\n\nfunction isBoolComplexEqual(a, b) {\n  if (typeof a === 'object' && typeof b === 'object' && a && b) { // both non-null objects\n    return isPropsEqual(a, b)\n  }\n  return a === b\n}\n\n// view-specific options\n// ---------------------\n\nexport const VIEW_OPTION_REFINERS: {\n  [name: string]: any\n} = {\n  type: String,\n  component: identity as Identity<ViewComponentType>,\n  buttonText: String,\n  buttonTextKey: String, // internal only\n  dateProfileGeneratorClass: identity as Identity<DateProfileGeneratorClass>,\n  usesMinMaxTime: Boolean, // internal only\n  classNames: identity as Identity<ClassNamesGenerator<SpecificViewContentArg>>,\n  content: identity as Identity<CustomContentGenerator<SpecificViewContentArg>>,\n  didMount: identity as Identity<DidMountHandler<SpecificViewMountArg>>,\n  willUnmount: identity as Identity<WillUnmountHandler<SpecificViewMountArg>>,\n}\n\ntype BuiltInViewOptionRefiners = typeof VIEW_OPTION_REFINERS\n\nexport interface ViewOptionRefiners extends BuiltInViewOptionRefiners {\n  // for ambient-extending\n}\n\nexport type ViewOptions =\n  BaseOptions &\n  CalendarListenersLoose &\n  RawOptionsFromRefiners<Required<ViewOptionRefiners>> // Required hack\n\nexport type ViewOptionsRefined =\n  BaseOptionsRefined &\n  CalendarListenersLoose &\n  RefinedOptionsFromRefiners<Required<ViewOptionRefiners>> // Required hack\n\n// util funcs\n// ----------------------------------------------------------------------------------------------------\n\nexport function mergeRawOptions(optionSets: Dictionary[]) {\n  return mergeProps(optionSets, COMPLEX_OPTION_COMPARATORS)\n}\n\nexport function refineProps<Refiners extends GenericRefiners, Raw extends RawOptionsFromRefiners<Refiners>>(\n  input: Raw,\n  refiners: Refiners,\n): {\n  refined: RefinedOptionsFromRefiners<Refiners>,\n  extra: Dictionary,\n} {\n  let refined = {} as any\n  let extra = {} as any\n\n  for (let propName in refiners) {\n    if (propName in input) {\n      refined[propName] = refiners[propName](input[propName])\n    }\n  }\n\n  for (let propName in input) {\n    if (!(propName in refiners)) {\n      extra[propName] = input[propName]\n    }\n  }\n\n  return { refined, extra }\n}\n\n// definition utils\n// ----------------------------------------------------------------------------------------------------\n\nexport type GenericRefiners = {\n  [propName: string]: (input: any) => any\n}\n\nexport type GenericListenerRefiners = {\n  [listenerName: string]: Identity<(this: CalendarApi, ...args: any[]) => void>\n}\n\nexport type RawOptionsFromRefiners<Refiners extends GenericRefiners> = {\n  [Prop in keyof Refiners]?: // all optional\n    Refiners[Prop] extends ((input: infer RawType) => infer RefinedType)\n      ? (any extends RawType ? RefinedType : RawType) // if input type `any`, use output (for Boolean/Number/String)\n      : never\n}\n\nexport type RefinedOptionsFromRefiners<Refiners extends GenericRefiners> = {\n  [Prop in keyof Refiners]?: // all optional\n    Refiners[Prop] extends ((input: any) => infer RefinedType) ? RefinedType : never\n}\n\nexport type DefaultedRefinedOptions<RefinedOptions extends Dictionary, DefaultKey extends keyof RefinedOptions> =\n  Required<Pick<RefinedOptions, DefaultKey>> &\n  Partial<Omit<RefinedOptions, DefaultKey>>\n\nexport type Dictionary = Record<string, any>\n\nexport type Identity<T = any> = (raw: T) => T\n\nexport function identity<T>(raw: T): T {\n  return raw\n}\n","import { createPlugin } from '@fullcalendar/common'\nimport { DayTableView } from './DayTableView'\nimport { TableDateProfileGenerator } from './TableDateProfileGenerator'\nimport './main.css'\n\nexport { DayTable } from './DayTable'\nexport { DayTableSlicer } from './DayTableSlicer'\nexport { Table } from './Table'\nexport { TableSeg } from './TableSeg'\nexport { TableView } from './TableView'\nexport { buildDayTableModel } from './DayTableView'\nexport { DayTableView as DayGridView } // export as old name!\n\nexport default createPlugin({\n  initialView: 'dayGridMonth',\n  views: {\n\n    dayGrid: {\n      component: DayTableView,\n      dateProfileGeneratorClass: TableDateProfileGenerator,\n    },\n\n    dayGridDay: {\n      type: 'dayGrid',\n      duration: { days: 1 },\n    },\n\n    dayGridWeek: {\n      type: 'dayGrid',\n      duration: { weeks: 1 },\n    },\n\n    dayGridMonth: {\n      type: 'dayGrid',\n      duration: { months: 1 },\n      monthMode: true,\n      fixedWeekCount: true,\n    },\n\n  },\n})\n","import {\n  Splitter,\n  hasBgRendering,\n  EventDef,\n  DateSpan,\n} from '@fullcalendar/common'\n\nexport class AllDaySplitter extends Splitter {\n  getKeyInfo() {\n    return {\n      allDay: {},\n      timed: {},\n    }\n  }\n\n  getKeysForDateSpan(dateSpan: DateSpan): string[] {\n    if (dateSpan.allDay) {\n      return ['allDay']\n    }\n\n    return ['timed']\n  }\n\n  getKeysForEventDef(eventDef: EventDef): string[] {\n    if (!eventDef.allDay) {\n      return ['timed']\n    }\n\n    if (hasBgRendering(eventDef)) {\n      return ['timed', 'allDay']\n    }\n\n    return ['allDay']\n  }\n}\n","import {\n  createElement,\n  ViewContext,\n  createFormatter,\n  ViewContextType,\n  RenderHook,\n  SlotLabelContentArg,\n} from '@fullcalendar/common'\nimport { TimeSlatMeta } from './time-slat-meta'\n\nconst DEFAULT_SLAT_LABEL_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  omitZeroMinute: true,\n  meridiem: 'short',\n})\n\nexport function TimeColsAxisCell(props: TimeSlatMeta) {\n  let classNames = [\n    'fc-timegrid-slot',\n    'fc-timegrid-slot-label',\n    props.isLabeled ? 'fc-scrollgrid-shrink' : 'fc-timegrid-slot-minor',\n  ]\n\n  return (\n    <ViewContextType.Consumer>\n      {(context: ViewContext) => {\n        if (!props.isLabeled) {\n          return (\n            <td className={classNames.join(' ')} data-time={props.isoTimeStr} />\n          )\n        }\n\n        let { dateEnv, options, viewApi } = context\n        let labelFormat = // TODO: fully pre-parse\n          options.slotLabelFormat == null ? DEFAULT_SLAT_LABEL_FORMAT :\n            Array.isArray(options.slotLabelFormat) ? createFormatter(options.slotLabelFormat[0]) :\n              createFormatter(options.slotLabelFormat)\n\n        let hookProps: SlotLabelContentArg = {\n          level: 0,\n          time: props.time,\n          date: dateEnv.toDate(props.date),\n          view: viewApi,\n          text: dateEnv.format(props.date, labelFormat),\n        }\n\n        return (\n          <RenderHook<SlotLabelContentArg> // needed?\n            hookProps={hookProps}\n            classNames={options.slotLabelClassNames}\n            content={options.slotLabelContent}\n            defaultContent={renderInnerContent}\n            didMount={options.slotLabelDidMount}\n            willUnmount={options.slotLabelWillUnmount}\n          >\n            {(rootElRef, customClassNames, innerElRef, innerContent) => (\n              <td ref={rootElRef} className={classNames.concat(customClassNames).join(' ')} data-time={props.isoTimeStr}>\n                <div className=\"fc-timegrid-slot-label-frame fc-scrollgrid-shrink-frame\">\n                  <div className=\"fc-timegrid-slot-label-cushion fc-scrollgrid-shrink-cushion\" ref={innerElRef}>\n                    {innerContent}\n                  </div>\n                </div>\n              </td>\n            )}\n          </RenderHook>\n        )\n      }}\n    </ViewContextType.Consumer>\n  )\n}\n\nfunction renderInnerContent(props) { // TODO: add types\n  return props.text\n}\n","import { createElement, BaseComponent } from '@fullcalendar/common'\nimport { TimeColsAxisCell } from './TimeColsAxisCell'\nimport { TimeSlatMeta } from './time-slat-meta'\n\n/* Thin Axis\n------------------------------------------------------------------------------------------------------------------*/\n\ninterface TimeBodyAxisProps {\n  slatMetas: TimeSlatMeta[]\n}\n\nexport class TimeBodyAxis extends BaseComponent<TimeBodyAxisProps> { // just <tr> content\n  render() {\n    return this.props.slatMetas.map((slatMeta: TimeSlatMeta) => (\n      <tr key={slatMeta.key}>\n        <TimeColsAxisCell {...slatMeta} />\n      </tr>\n    ))\n  }\n}\n","import {\n  createElement, createRef,\n  diffDays,\n  SimpleScrollGridSection,\n  VNode,\n  SimpleScrollGrid,\n  ChunkContentCallbackArgs,\n  ScrollGridSectionConfig,\n  buildNavLinkAttrs,\n  ViewRoot,\n  WeekNumberRoot,\n  RenderHook,\n  DateComponent,\n  ViewProps,\n  RefObject,\n  renderScrollShim,\n  getStickyHeaderDates,\n  getStickyFooterScrollbar,\n  createFormatter,\n  AllDayContentArg,\n  CssDimValue,\n  NowTimer,\n  DateMarker,\n  NowIndicatorRoot,\n} from '@fullcalendar/common'\nimport { AllDaySplitter } from './AllDaySplitter'\nimport { TimeSlatMeta } from './time-slat-meta'\nimport { TimeColsSlatsCoords } from './TimeColsSlatsCoords'\nimport { TimeBodyAxis } from './TimeBodyAxis'\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'short' })\nconst AUTO_ALL_DAY_MAX_EVENT_ROWS = 5\n\n/* An abstract class for all timegrid-related views. Displays one more columns with time slots running vertically.\n----------------------------------------------------------------------------------------------------------------------*/\n// Is a manager for the TimeCols subcomponent and possibly the DayGrid subcomponent (if allDaySlot is on).\n// Responsible for managing width/height.\n\ninterface TimeColsViewState {\n  slatCoords: TimeColsSlatsCoords | null\n}\n\nexport abstract class TimeColsView extends DateComponent<ViewProps, TimeColsViewState> {\n  protected allDaySplitter = new AllDaySplitter() // for use by subclasses\n\n  protected headerElRef: RefObject<HTMLTableCellElement> = createRef<HTMLTableCellElement>()\n  private rootElRef: RefObject<HTMLDivElement> = createRef<HTMLDivElement>()\n  private scrollerElRef: RefObject<HTMLDivElement> = createRef<HTMLDivElement>()\n\n  state = {\n    slatCoords: null,\n  }\n\n  // rendering\n  // ----------------------------------------------------------------------------------------------------\n\n  renderSimpleLayout(\n    headerRowContent: VNode | null,\n    allDayContent: ((contentArg: ChunkContentCallbackArgs) => VNode) | null,\n    timeContent: ((contentArg: ChunkContentCallbackArgs) => VNode) | null,\n  ) {\n    let { context, props } = this\n    let sections: SimpleScrollGridSection[] = []\n    let stickyHeaderDates = getStickyHeaderDates(context.options)\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunk: {\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent,\n        },\n      })\n    }\n\n    if (allDayContent) {\n      sections.push({\n        type: 'body',\n        key: 'all-day',\n        chunk: { content: allDayContent },\n      })\n      sections.push({\n        type: 'body',\n        key: 'all-day-divider',\n        outerContent: ( // TODO: rename to cellContent so don't need to define <tr>?\n          <tr role=\"presentation\" className=\"fc-scrollgrid-section\">\n            <td\n              className={'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded')}\n            />\n          </tr>\n        ),\n      })\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      expandRows: Boolean(context.options.expandRows),\n      chunk: {\n        scrollerElRef: this.scrollerElRef,\n        content: timeContent,\n      },\n    })\n\n    return (\n      <ViewRoot viewSpec={context.viewSpec} elRef={this.rootElRef}>\n        {(rootElRef, classNames) => (\n          <div className={['fc-timegrid'].concat(classNames).join(' ')} ref={rootElRef}>\n            <SimpleScrollGrid\n              liquid={!props.isHeightAuto && !props.forPrint}\n              collapsibleWidth={props.forPrint}\n              cols={[{ width: 'shrink' }]}\n              sections={sections}\n            />\n          </div>\n        )}\n      </ViewRoot>\n    )\n  }\n\n  renderHScrollLayout(\n    headerRowContent: VNode | null,\n    allDayContent: ((contentArg: ChunkContentCallbackArgs) => VNode) | null,\n    timeContent: ((contentArg: ChunkContentCallbackArgs) => VNode) | null,\n    colCnt: number,\n    dayMinWidth: number,\n    slatMetas: TimeSlatMeta[],\n    slatCoords: TimeColsSlatsCoords | null, // yuck\n  ) {\n    let ScrollGrid = this.context.pluginHooks.scrollGridImpl\n\n    if (!ScrollGrid) {\n      throw new Error('No ScrollGrid implementation')\n    }\n\n    let { context, props } = this\n    let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options)\n    let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options)\n    let sections: ScrollGridSectionConfig[] = []\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        syncRowHeights: true,\n        chunks: [\n          {\n            key: 'axis',\n            rowContent: (arg: ChunkContentCallbackArgs) => (\n              <tr role=\"presentation\">\n                {this.renderHeadAxis('day', arg.rowSyncHeights[0])}\n              </tr>\n            ),\n          },\n          {\n            key: 'cols',\n            elRef: this.headerElRef,\n            tableClassName: 'fc-col-header',\n            rowContent: headerRowContent,\n          },\n        ],\n      })\n    }\n\n    if (allDayContent) {\n      sections.push({\n        type: 'body',\n        key: 'all-day',\n        syncRowHeights: true,\n        chunks: [\n          {\n            key: 'axis',\n            rowContent: (contentArg: ChunkContentCallbackArgs) => (\n              <tr role=\"presentation\">\n                {this.renderTableRowAxis(contentArg.rowSyncHeights[0])}\n              </tr>\n            ),\n          },\n          {\n            key: 'cols',\n            content: allDayContent,\n          },\n        ],\n      })\n      sections.push({\n        key: 'all-day-divider',\n        type: 'body',\n        outerContent: ( // TODO: rename to cellContent so don't need to define <tr>?\n          <tr role=\"presentation\" className=\"fc-scrollgrid-section\">\n            <td\n              colSpan={2}\n              className={'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded')}\n            />\n          </tr>\n        ),\n      })\n    }\n\n    let isNowIndicator = context.options.nowIndicator\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      expandRows: Boolean(context.options.expandRows),\n      chunks: [\n        {\n          key: 'axis',\n          content: (arg) => (\n            // TODO: make this now-indicator arrow more DRY with TimeColsContent\n            <div className=\"fc-timegrid-axis-chunk\">\n              <table aria-hidden style={{ height: arg.expandRows ? arg.clientHeight : '' }}>\n                {arg.tableColGroupNode}\n                <tbody>\n                  <TimeBodyAxis slatMetas={slatMetas} />\n                </tbody>\n              </table>\n              <div className=\"fc-timegrid-now-indicator-container\">\n                <NowTimer unit={isNowIndicator ? 'minute' : 'day' /* hacky */}>\n                  {(nowDate: DateMarker) => {\n                    let nowIndicatorTop =\n                      isNowIndicator &&\n                      slatCoords &&\n                      slatCoords.safeComputeTop(nowDate) // might return void\n\n                    if (typeof nowIndicatorTop === 'number') {\n                      return (\n                        <NowIndicatorRoot isAxis date={nowDate}>\n                          {(rootElRef, classNames, innerElRef, innerContent) => (\n                            <div\n                              ref={rootElRef}\n                              className={['fc-timegrid-now-indicator-arrow'].concat(classNames).join(' ')}\n                              style={{ top: nowIndicatorTop }}\n                            >\n                              {innerContent}\n                            </div>\n                          )}\n                        </NowIndicatorRoot>\n                      )\n                    }\n\n                    return null\n                  }}\n                </NowTimer>\n              </div>\n            </div>\n          ),\n        },\n        {\n          key: 'cols',\n          scrollerElRef: this.scrollerElRef,\n          content: timeContent,\n        },\n      ],\n    })\n\n    if (stickyFooterScrollbar) {\n      sections.push({\n        key: 'footer',\n        type: 'footer',\n        isSticky: true,\n        chunks: [\n          {\n            key: 'axis',\n            content: renderScrollShim,\n          },\n          {\n            key: 'cols',\n            content: renderScrollShim,\n          },\n        ],\n      })\n    }\n\n    return (\n      <ViewRoot viewSpec={context.viewSpec} elRef={this.rootElRef}>\n        {(rootElRef, classNames) => (\n          <div className={['fc-timegrid'].concat(classNames).join(' ')} ref={rootElRef}>\n            <ScrollGrid\n              liquid={!props.isHeightAuto && !props.forPrint}\n              collapsibleWidth={false}\n              colGroups={[\n                { width: 'shrink', cols: [{ width: 'shrink' }] }, // TODO: allow no specify cols\n                { cols: [{ span: colCnt, minWidth: dayMinWidth }] },\n              ]}\n              sections={sections}\n            />\n          </div>\n        )}\n      </ViewRoot>\n    )\n  }\n\n  handleScrollTopRequest = (scrollTop: number) => {\n    let scrollerEl = this.scrollerElRef.current\n\n    if (scrollerEl) { // TODO: not sure how this could ever be null. weirdness with the reducer\n      scrollerEl.scrollTop = scrollTop\n    }\n  }\n\n  /* Dimensions\n  ------------------------------------------------------------------------------------------------------------------*/\n\n  getAllDayMaxEventProps() {\n    let { dayMaxEvents, dayMaxEventRows } = this.context.options\n\n    if (dayMaxEvents === true || dayMaxEventRows === true) { // is auto?\n      dayMaxEvents = undefined\n      dayMaxEventRows = AUTO_ALL_DAY_MAX_EVENT_ROWS // make sure \"auto\" goes to a real number\n    }\n\n    return { dayMaxEvents, dayMaxEventRows }\n  }\n\n  /* Header Render Methods\n  ------------------------------------------------------------------------------------------------------------------*/\n\n  renderHeadAxis = (rowKey: 'day' | string, frameHeight: CssDimValue = '') => {\n    let { options } = this.context\n    let { dateProfile } = this.props\n    let range = dateProfile.renderRange\n    let dayCnt = diffDays(range.start, range.end)\n\n    let navLinkAttrs = (dayCnt === 1) // only do in day views (to avoid doing in week views that dont need it)\n      ? buildNavLinkAttrs(this.context, range.start, 'week')\n      : {}\n\n    if (options.weekNumbers && rowKey === 'day') {\n      return (\n        <WeekNumberRoot date={range.start} defaultFormat={DEFAULT_WEEK_NUM_FORMAT}>\n          {(rootElRef, classNames, innerElRef, innerContent) => (\n            <th\n              ref={rootElRef}\n              aria-hidden\n              className={[\n                'fc-timegrid-axis',\n                'fc-scrollgrid-shrink',\n              ].concat(classNames).join(' ')}\n            >\n              <div\n                className=\"fc-timegrid-axis-frame fc-scrollgrid-shrink-frame fc-timegrid-axis-frame-liquid\"\n                style={{ height: frameHeight }}\n              >\n                <a\n                  ref={innerElRef}\n                  className=\"fc-timegrid-axis-cushion fc-scrollgrid-shrink-cushion fc-scrollgrid-sync-inner\"\n                  {...navLinkAttrs}\n                >\n                  {innerContent}\n                </a>\n              </div>\n            </th>\n          )}\n        </WeekNumberRoot>\n      )\n    }\n\n    return (\n      <th aria-hidden className=\"fc-timegrid-axis\">\n        <div className=\"fc-timegrid-axis-frame\" style={{ height: frameHeight }} />\n      </th>\n    )\n  }\n\n  /* Table Component Render Methods\n  ------------------------------------------------------------------------------------------------------------------*/\n\n  // only a one-way height sync. we don't send the axis inner-content height to the DayGrid,\n  // but DayGrid still needs to have classNames on inner elements in order to measure.\n  renderTableRowAxis = (rowHeight?: number) => {\n    let { options, viewApi } = this.context\n    let hookProps: AllDayContentArg = {\n      text: options.allDayText,\n      view: viewApi,\n    }\n\n    return (\n      // TODO: make reusable hook. used in list view too\n      <RenderHook<AllDayContentArg>\n        hookProps={hookProps}\n        classNames={options.allDayClassNames}\n        content={options.allDayContent}\n        defaultContent={renderAllDayInner}\n        didMount={options.allDayDidMount}\n        willUnmount={options.allDayWillUnmount}\n      >\n        {(rootElRef, classNames, innerElRef, innerContent) => (\n          <td\n            ref={rootElRef}\n            aria-hidden\n            className={[\n              'fc-timegrid-axis',\n              'fc-scrollgrid-shrink',\n            ].concat(classNames).join(' ')}\n          >\n            <div\n              className={'fc-timegrid-axis-frame fc-scrollgrid-shrink-frame' + (rowHeight == null ? ' fc-timegrid-axis-frame-liquid' : '')}\n              style={{ height: rowHeight }}\n            >\n              <span className=\"fc-timegrid-axis-cushion fc-scrollgrid-shrink-cushion fc-scrollgrid-sync-inner\" ref={innerElRef}>\n                {innerContent}\n              </span>\n            </div>\n          </td>\n        )}\n      </RenderHook>\n    )\n  }\n\n  handleSlatCoords = (slatCoords: TimeColsSlatsCoords) => {\n    this.setState({ slatCoords })\n  }\n}\n\nfunction renderAllDayInner(hookProps) {\n  return hookProps.text\n}\n","import {\n  PositionCache,\n  DateMarker,\n  startOfDay,\n  createDuration,\n  asRoughMs,\n  DateProfile,\n  Duration,\n  rangeContainsMarker,\n} from '@fullcalendar/common'\n\nexport class TimeColsSlatsCoords {\n  constructor(\n    public positions: PositionCache,\n    private dateProfile: DateProfile,\n    private slotDuration: Duration,\n  ) {\n  }\n\n  safeComputeTop(date: DateMarker) { // TODO: DRY with computeDateTop\n    let { dateProfile } = this\n\n    if (rangeContainsMarker(dateProfile.currentRange, date)) {\n      let startOfDayDate = startOfDay(date)\n      let timeMs = date.valueOf() - startOfDayDate.valueOf()\n\n      if (\n        timeMs >= asRoughMs(dateProfile.slotMinTime) &&\n        timeMs < asRoughMs(dateProfile.slotMaxTime)\n      ) {\n        return this.computeTimeTop(createDuration(timeMs))\n      }\n    }\n\n    return null\n  }\n\n  // Computes the top coordinate, relative to the bounds of the grid, of the given date.\n  // A `startOfDayDate` must be given for avoiding ambiguity over how to treat midnight.\n  computeDateTop(when: DateMarker, startOfDayDate?: DateMarker) {\n    if (!startOfDayDate) {\n      startOfDayDate = startOfDay(when)\n    }\n    return this.computeTimeTop(createDuration(when.valueOf() - startOfDayDate.valueOf()))\n  }\n\n  // Computes the top coordinate, relative to the bounds of the grid, of the given time (a Duration).\n  // This is a makeshify way to compute the time-top. Assumes all slatMetas dates are uniform.\n  // Eventually allow computation with arbirary slat dates.\n  computeTimeTop(duration: Duration): number {\n    let { positions, dateProfile } = this\n    let len = positions.els.length\n\n    // floating-point value of # of slots covered\n    let slatCoverage = (duration.milliseconds - asRoughMs(dateProfile.slotMinTime)) / asRoughMs(this.slotDuration)\n    let slatIndex\n    let slatRemainder\n\n    // compute a floating-point number for how many slats should be progressed through.\n    // from 0 to number of slats (inclusive)\n    // constrained because slotMinTime/slotMaxTime might be customized.\n    slatCoverage = Math.max(0, slatCoverage)\n    slatCoverage = Math.min(len, slatCoverage)\n\n    // an integer index of the furthest whole slat\n    // from 0 to number slats (*exclusive*, so len-1)\n    slatIndex = Math.floor(slatCoverage)\n    slatIndex = Math.min(slatIndex, len - 1)\n\n    // how much further through the slatIndex slat (from 0.0-1.0) must be covered in addition.\n    // could be 1.0 if slatCoverage is covering *all* the slots\n    slatRemainder = slatCoverage - slatIndex\n\n    return positions.tops[slatIndex] +\n      positions.getHeight(slatIndex) * slatRemainder\n  }\n}\n","import {\n  createElement,\n  BaseComponent,\n  RefMap,\n  RenderHook,\n  SlotLaneContentArg,\n} from '@fullcalendar/common'\nimport { TimeColsAxisCell } from './TimeColsAxisCell'\nimport { TimeSlatMeta } from './time-slat-meta'\n\nexport interface TimeColsSlatsBodyProps {\n  axis: boolean\n  slatMetas: TimeSlatMeta[]\n  slatElRefs: RefMap<HTMLTableRowElement>\n}\n\nexport class TimeColsSlatsBody extends BaseComponent<TimeColsSlatsBodyProps> {\n  render() {\n    let { props, context } = this\n    let { options } = context\n    let { slatElRefs } = props\n\n    return (\n      <tbody>\n        {props.slatMetas.map((slatMeta, i) => {\n          let hookProps: SlotLaneContentArg = {\n            time: slatMeta.time,\n            date: context.dateEnv.toDate(slatMeta.date),\n            view: context.viewApi,\n          }\n\n          let classNames = [\n            'fc-timegrid-slot',\n            'fc-timegrid-slot-lane',\n            slatMeta.isLabeled ? '' : 'fc-timegrid-slot-minor',\n          ]\n\n          return (\n            <tr\n              key={slatMeta.key}\n              ref={slatElRefs.createRef(slatMeta.key)}\n            >\n              {props.axis && (\n                <TimeColsAxisCell {...slatMeta} />\n              )}\n              <RenderHook\n                hookProps={hookProps}\n                classNames={options.slotLaneClassNames}\n                content={options.slotLaneContent}\n                didMount={options.slotLaneDidMount}\n                willUnmount={options.slotLaneWillUnmount}\n              >\n                {(rootElRef, customClassNames, innerElRef, innerContent) => (\n                  <td\n                    ref={rootElRef}\n                    className={classNames.concat(customClassNames).join(' ')}\n                    data-time={slatMeta.isoTimeStr}\n                  >\n                    {innerContent}\n                  </td>\n                )}\n              </RenderHook>\n            </tr>\n          )\n        })}\n      </tbody>\n    )\n  }\n}\n","import {\n  createElement,\n  VNode,\n  BaseComponent,\n  RefMap,\n  CssDimValue,\n  createRef,\n  PositionCache,\n  DateProfile,\n} from '@fullcalendar/common'\nimport { TimeSlatMeta } from './time-slat-meta'\nimport { TimeColsSlatsCoords } from './TimeColsSlatsCoords'\nimport { TimeColsSlatsBody } from './TimeColsSlatsBody'\n\nexport interface TimeColsSlatsProps extends TimeColsSlatsContentProps {\n  dateProfile: DateProfile\n  clientWidth: number | null\n  minHeight: CssDimValue\n  tableMinWidth: CssDimValue\n  tableColGroupNode: VNode\n  onCoords?: (coords: TimeColsSlatsCoords | null) => void\n}\n\ninterface TimeColsSlatsContentProps {\n  axis: boolean\n  slatMetas: TimeSlatMeta[]\n}\n\n/*\nfor the horizontal \"slats\" that run width-wise. Has a time axis on a side. Depends on RTL.\n*/\n\nexport class TimeColsSlats extends BaseComponent<TimeColsSlatsProps> {\n  private rootElRef = createRef<HTMLDivElement>()\n  private slatElRefs = new RefMap<HTMLTableRowElement>()\n\n  render() {\n    let { props, context } = this\n\n    return (\n      <div ref={this.rootElRef} className=\"fc-timegrid-slots\">\n        <table\n          aria-hidden\n          className={context.theme.getClass('table')}\n          style={{\n            minWidth: props.tableMinWidth,\n            width: props.clientWidth,\n            height: props.minHeight,\n          }}\n        >\n          {props.tableColGroupNode /* relies on there only being a single <col> for the axis */}\n          <TimeColsSlatsBody\n            slatElRefs={this.slatElRefs}\n            axis={props.axis}\n            slatMetas={props.slatMetas}\n          />\n        </table>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    this.updateSizing()\n  }\n\n  componentDidUpdate() {\n    this.updateSizing()\n  }\n\n  componentWillUnmount() {\n    if (this.props.onCoords) {\n      this.props.onCoords(null)\n    }\n  }\n\n  updateSizing() {\n    let { context, props } = this\n\n    if (\n      props.onCoords &&\n      props.clientWidth !== null // means sizing has stabilized\n    ) {\n      let rootEl = this.rootElRef.current\n\n      if (rootEl.offsetHeight) { // not hidden by css\n        props.onCoords(\n          new TimeColsSlatsCoords(\n            new PositionCache(\n              this.rootElRef.current,\n              collectSlatEls(this.slatElRefs.currentMap, props.slatMetas),\n              false,\n              true, // vertical\n            ),\n            this.props.dateProfile,\n            context.options.slotDuration,\n          ),\n        )\n      }\n    }\n  }\n}\n\nfunction collectSlatEls(elMap: { [key: string]: HTMLElement }, slatMetas: TimeSlatMeta[]) {\n  return slatMetas.map((slatMeta) => elMap[slatMeta.key])\n}\n","import { DateMarker, Seg, EventSegUiInteractionState } from '@fullcalendar/common'\n\n// JUST A DATA STRUCTURE, not a component\n\nexport interface TimeColsSeg extends Seg {\n  col: number\n  start: DateMarker\n  end: DateMarker\n}\n\nexport function splitSegsByCol(segs: TimeColsSeg[] | null, colCnt: number) { // can be given null/undefined!\n  let segsByCol: TimeColsSeg[][] = []\n  let i\n\n  for (i = 0; i < colCnt; i += 1) {\n    segsByCol.push([])\n  }\n\n  if (segs) {\n    for (i = 0; i < segs.length; i += 1) {\n      segsByCol[segs[i].col].push(segs[i])\n    }\n  }\n\n  return segsByCol\n}\n\nexport function splitInteractionByCol(ui: EventSegUiInteractionState | null, colCnt: number) {\n  let byRow: EventSegUiInteractionState[] = []\n\n  if (!ui) {\n    for (let i = 0; i < colCnt; i += 1) {\n      byRow[i] = null\n    }\n  } else {\n    for (let i = 0; i < colCnt; i += 1) {\n      byRow[i] = {\n        affectedInstances: ui.affectedInstances,\n        isEvent: ui.isEvent,\n        segs: [],\n      }\n    }\n\n    for (let seg of ui.segs) {\n      byRow[seg.col].segs.push(seg)\n    }\n  }\n\n  return byRow\n}\n","import {\n  createElement, MoreLinkContentArg, MoreLinkRoot, BaseComponent, createRef, setRef,\n  Dictionary, DateProfile, DateRange, DateMarker, EventSegUiInteractionState, CssDimValue,\n} from '@fullcalendar/common'\nimport { renderPlainFgSegs } from './TimeCol'\nimport { TimeColsSeg } from './TimeColsSeg'\n\nexport interface TimeColMoreLinkProps {\n  hiddenSegs: TimeColsSeg[]\n  top: CssDimValue\n  bottom: CssDimValue\n  extraDateSpan?: Dictionary\n  dateProfile: DateProfile\n  todayRange: DateRange\n  nowDate: DateMarker\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState\n  eventResize: EventSegUiInteractionState\n}\n\nexport class TimeColMoreLink extends BaseComponent<TimeColMoreLinkProps> {\n  rootElRef = createRef<HTMLElement>()\n\n  render() {\n    let { props } = this\n    return (\n      <MoreLinkRoot\n        allDayDate={null}\n        moreCnt={props.hiddenSegs.length}\n        allSegs={props.hiddenSegs}\n        hiddenSegs={props.hiddenSegs}\n        alignmentElRef={this.rootElRef}\n        defaultContent={renderMoreLinkInner}\n        extraDateSpan={props.extraDateSpan}\n        dateProfile={props.dateProfile}\n        todayRange={props.todayRange}\n        popoverContent={() => renderPlainFgSegs(props.hiddenSegs, props)}\n      >\n        {(rootElRef, classNames, innerElRef, innerContent, handleClick, title, isExpanded, popoverId) => (\n          <a\n            ref={(el: HTMLElement | null) => {\n              setRef(rootElRef, el)\n              setRef(this.rootElRef, el)\n            }}\n            className={['fc-timegrid-more-link'].concat(classNames).join(' ')}\n            style={{ top: props.top, bottom: props.bottom }}\n            onClick={handleClick}\n            title={title}\n            aria-expanded={isExpanded}\n            aria-controls={popoverId}\n          >\n            <div ref={innerElRef} className=\"fc-timegrid-more-link-inner fc-sticky\">\n              {innerContent}\n            </div>\n          </a>\n        )}\n      </MoreLinkRoot>\n    )\n  }\n}\n\nfunction renderMoreLinkInner(props: MoreLinkContentArg) {\n  return props.shortText\n}\n","import {\n  SegEntry,\n  SegHierarchy,\n  SegRect,\n  buildEntryKey,\n  getEntrySpanEnd,\n  binarySearch,\n  SegEntryGroup,\n  groupIntersectingEntries,\n} from '@fullcalendar/common'\n\ninterface SegNode extends SegEntry {\n  nextLevelNodes: SegNode[] // with highest-pressure first\n}\n\ntype SegNodeAndPressure = [ SegNode, number ]\n\ninterface SegSiblingRange { // will ALWAYS have span of 1 or more items. if not, will be null\n  level: number\n  lateralStart: number\n  lateralEnd: number\n}\n\nexport interface SegWebRect extends SegRect {\n  stackDepth: number\n  stackForward: number\n}\n\n// segInputs assumed sorted\nexport function buildPositioning(\n  segInputs: SegEntry[],\n  strictOrder?: boolean,\n  maxStackCnt?: number,\n): { segRects: SegWebRect[], hiddenGroups: SegEntryGroup[] } {\n  let hierarchy = new SegHierarchy()\n  if (strictOrder != null) {\n    hierarchy.strictOrder = strictOrder\n  }\n  if (maxStackCnt != null) {\n    hierarchy.maxStackCnt = maxStackCnt\n  }\n\n  let hiddenEntries = hierarchy.addSegs(segInputs)\n  let hiddenGroups = groupIntersectingEntries(hiddenEntries)\n\n  let web = buildWeb(hierarchy)\n  web = stretchWeb(web, 1) // all levelCoords/thickness will have 0.0-1.0\n  let segRects = webToRects(web)\n\n  return { segRects, hiddenGroups }\n}\n\nfunction buildWeb(hierarchy: SegHierarchy): SegNode[] {\n  const { entriesByLevel } = hierarchy\n\n  const buildNode = cacheable(\n    (level: number, lateral: number) => level + ':' + lateral,\n    (level: number, lateral: number): SegNodeAndPressure => {\n      let siblingRange = findNextLevelSegs(hierarchy, level, lateral)\n      let nextLevelRes = buildNodes(siblingRange, buildNode)\n      let entry = entriesByLevel[level][lateral]\n\n      return [\n        { ...entry, nextLevelNodes: nextLevelRes[0] },\n        entry.thickness + nextLevelRes[1], // the pressure builds\n      ]\n    },\n  )\n\n  return buildNodes(\n    entriesByLevel.length\n      ? { level: 0, lateralStart: 0, lateralEnd: entriesByLevel[0].length }\n      : null,\n    buildNode,\n  )[0]\n}\n\nfunction buildNodes(\n  siblingRange: SegSiblingRange | null,\n  buildNode: (level: number, lateral: number) => SegNodeAndPressure,\n): [SegNode[], number] { // number is maxPressure\n  if (!siblingRange) {\n    return [[], 0]\n  }\n\n  let { level, lateralStart, lateralEnd } = siblingRange\n  let lateral = lateralStart\n  let pairs: SegNodeAndPressure[] = []\n\n  while (lateral < lateralEnd) {\n    pairs.push(buildNode(level, lateral))\n    lateral += 1\n  }\n\n  pairs.sort(cmpDescPressures)\n\n  return [\n    pairs.map(extractNode),\n    pairs[0][1], // first item's pressure\n  ]\n}\n\nfunction cmpDescPressures(a: SegNodeAndPressure, b: SegNodeAndPressure) { // sort pressure high -> low\n  return b[1] - a[1]\n}\n\nfunction extractNode(a: SegNodeAndPressure): SegNode {\n  return a[0]\n}\n\nfunction findNextLevelSegs(hierarchy: SegHierarchy, subjectLevel: number, subjectLateral: number): SegSiblingRange | null {\n  let { levelCoords, entriesByLevel } = hierarchy\n  let subjectEntry = entriesByLevel[subjectLevel][subjectLateral]\n  let afterSubject = levelCoords[subjectLevel] + subjectEntry.thickness\n  let levelCnt = levelCoords.length\n  let level = subjectLevel\n\n  // skip past levels that are too high up\n  for (; level < levelCnt && levelCoords[level] < afterSubject; level += 1) ; // do nothing\n\n  for (; level < levelCnt; level += 1) {\n    let entries = entriesByLevel[level]\n    let entry: SegEntry\n    let searchIndex = binarySearch(entries, subjectEntry.span.start, getEntrySpanEnd)\n    let lateralStart = searchIndex[0] + searchIndex[1] // if exact match (which doesn't collide), go to next one\n    let lateralEnd = lateralStart\n\n    while ( // loop through entries that horizontally intersect\n      (entry = entries[lateralEnd]) && // but not past the whole seg list\n      entry.span.start < subjectEntry.span.end\n    ) { lateralEnd += 1 }\n\n    if (lateralStart < lateralEnd) {\n      return { level, lateralStart, lateralEnd }\n    }\n  }\n\n  return null\n}\n\nfunction stretchWeb(topLevelNodes: SegNode[], totalThickness: number): SegNode[] {\n  const stretchNode = cacheable(\n    (node: SegNode, startCoord: number, prevThickness: number) => buildEntryKey(node),\n    (node: SegNode, startCoord: number, prevThickness: number): [number, SegNode] => { // [startCoord, node]\n      let { nextLevelNodes, thickness } = node\n      let allThickness = thickness + prevThickness\n      let thicknessFraction = thickness / allThickness\n      let endCoord: number\n      let newChildren: SegNode[] = []\n\n      if (!nextLevelNodes.length) {\n        endCoord = totalThickness\n      } else {\n        for (let childNode of nextLevelNodes) {\n          if (endCoord === undefined) {\n            let res = stretchNode(childNode, startCoord, allThickness)\n            endCoord = res[0]\n            newChildren.push(res[1])\n          } else {\n            let res = stretchNode(childNode, endCoord, 0)\n            newChildren.push(res[1])\n          }\n        }\n      }\n\n      let newThickness = (endCoord - startCoord) * thicknessFraction\n      return [endCoord - newThickness, {\n        ...node,\n        thickness: newThickness,\n        nextLevelNodes: newChildren,\n      }]\n    },\n  )\n\n  return topLevelNodes.map((node: SegNode) => stretchNode(node, 0, 0)[1])\n}\n\n// not sorted in any particular order\nfunction webToRects(topLevelNodes: SegNode[]): SegWebRect[] {\n  let rects: SegWebRect[] = []\n\n  const processNode = cacheable(\n    (node: SegNode, levelCoord: number, stackDepth: number) => buildEntryKey(node),\n    (node: SegNode, levelCoord: number, stackDepth: number) => { // returns forwardPressure\n      let rect: SegWebRect = {\n        ...node,\n        levelCoord,\n        stackDepth,\n        stackForward: 0, // will assign after recursing\n      }\n      rects.push(rect)\n\n      return (\n        rect.stackForward = processNodes(node.nextLevelNodes, levelCoord + node.thickness, stackDepth + 1) + 1\n      )\n    },\n  )\n\n  function processNodes(nodes: SegNode[], levelCoord: number, stackDepth: number) { // returns stackForward\n    let stackForward = 0\n    for (let node of nodes) {\n      stackForward = Math.max(processNode(node, levelCoord, stackDepth), stackForward)\n    }\n    return stackForward\n  }\n\n  processNodes(topLevelNodes, 0, 0)\n  return rects // TODO: sort rects by levelCoord to be consistent with toRects?\n}\n\n// TODO: move to general util\n\nfunction cacheable<Args extends any[], Res>(\n  keyFunc: (...args: Args) => string,\n  workFunc: (...args: Args) => Res,\n): ((...args: Args) => Res) {\n  const cache: { [key: string]: Res } = {}\n\n  return (...args: Args) => {\n    let key = keyFunc(...args)\n    return (key in cache)\n      ? cache[key]\n      : (cache[key] = workFunc(...args))\n  }\n}\n","import {\n  SegHierarchy,\n  SegRect,\n  SegEntry,\n  SegInsertion,\n  buildEntryKey,\n  EventRenderRange,\n  intersectRanges,\n  addDays,\n  DayTableCell,\n  intersectSpans,\n} from '@fullcalendar/common'\nimport { TableSeg } from './TableSeg'\n\nexport interface TableSegPlacement {\n  seg: TableSeg\n  isVisible: boolean\n  isAbsolute: boolean\n  absoluteTop: number // populated regardless of isAbsolute\n  marginTop: number\n}\n\nexport function computeFgSegPlacement(\n  segs: TableSeg[], // assumed already sorted\n  dayMaxEvents: boolean | number,\n  dayMaxEventRows: boolean | number,\n  strictOrder: boolean,\n  eventInstanceHeights: { [instanceId: string]: number },\n  maxContentHeight: number | null,\n  cells: DayTableCell[],\n) {\n  let hierarchy = new DayGridSegHierarchy()\n  hierarchy.allowReslicing = true\n  hierarchy.strictOrder = strictOrder\n\n  if (dayMaxEvents === true || dayMaxEventRows === true) {\n    hierarchy.maxCoord = maxContentHeight\n    hierarchy.hiddenConsumes = true\n  } else if (typeof dayMaxEvents === 'number') {\n    hierarchy.maxStackCnt = dayMaxEvents\n  } else if (typeof dayMaxEventRows === 'number') {\n    hierarchy.maxStackCnt = dayMaxEventRows\n    hierarchy.hiddenConsumes = true\n  }\n\n  // create segInputs only for segs with known heights\n  let segInputs: SegEntry[] = []\n  let unknownHeightSegs: TableSeg[] = []\n  for (let i = 0; i < segs.length; i += 1) {\n    let seg = segs[i]\n    let { instanceId } = seg.eventRange.instance\n    let eventHeight = eventInstanceHeights[instanceId]\n\n    if (eventHeight != null) {\n      segInputs.push({\n        index: i,\n        thickness: eventHeight,\n        span: {\n          start: seg.firstCol,\n          end: seg.lastCol + 1,\n        },\n      })\n    } else {\n      unknownHeightSegs.push(seg)\n    }\n  }\n\n  let hiddenEntries = hierarchy.addSegs(segInputs)\n  let segRects = hierarchy.toRects()\n  let { singleColPlacements, multiColPlacements, leftoverMargins } = placeRects(segRects, segs, cells)\n\n  let moreCnts: number[] = []\n  let moreMarginTops: number[] = []\n\n  // add segs with unknown heights\n  for (let seg of unknownHeightSegs) {\n    multiColPlacements[seg.firstCol].push({\n      seg,\n      isVisible: false,\n      isAbsolute: true,\n      absoluteTop: 0,\n      marginTop: 0,\n    })\n\n    for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n      singleColPlacements[col].push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: false,\n        isAbsolute: false,\n        absoluteTop: 0,\n        marginTop: 0,\n      })\n    }\n  }\n\n  // add the hidden entries\n  for (let col = 0; col < cells.length; col += 1) {\n    moreCnts.push(0)\n  }\n  for (let hiddenEntry of hiddenEntries) {\n    let seg = segs[hiddenEntry.index]\n    let hiddenSpan = hiddenEntry.span\n\n    multiColPlacements[hiddenSpan.start].push({\n      seg: resliceSeg(seg, hiddenSpan.start, hiddenSpan.end, cells),\n      isVisible: false,\n      isAbsolute: true,\n      absoluteTop: 0,\n      marginTop: 0,\n    })\n\n    for (let col = hiddenSpan.start; col < hiddenSpan.end; col += 1) {\n      moreCnts[col] += 1\n      singleColPlacements[col].push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: false,\n        isAbsolute: false,\n        absoluteTop: 0,\n        marginTop: 0,\n      })\n    }\n  }\n\n  // deal with leftover margins\n  for (let col = 0; col < cells.length; col += 1) {\n    moreMarginTops.push(leftoverMargins[col])\n  }\n\n  return { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops }\n}\n\n// rects ordered by top coord, then left\nfunction placeRects(allRects: SegRect[], segs: TableSeg[], cells: DayTableCell[]) {\n  let rectsByEachCol = groupRectsByEachCol(allRects, cells.length)\n  let singleColPlacements: TableSegPlacement[][] = []\n  let multiColPlacements: TableSegPlacement[][] = []\n  let leftoverMargins: number[] = []\n\n  for (let col = 0; col < cells.length; col += 1) {\n    let rects = rectsByEachCol[col]\n\n    // compute all static segs in singlePlacements\n    let singlePlacements: TableSegPlacement[] = []\n    let currentHeight = 0\n    let currentMarginTop = 0\n    for (let rect of rects) {\n      let seg = segs[rect.index]\n      singlePlacements.push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: true,\n        isAbsolute: false,\n        absoluteTop: rect.levelCoord,\n        marginTop: rect.levelCoord - currentHeight,\n      })\n      currentHeight = rect.levelCoord + rect.thickness\n    }\n\n    // compute mixed static/absolute segs in multiPlacements\n    let multiPlacements: TableSegPlacement[] = []\n    currentHeight = 0\n    currentMarginTop = 0\n    for (let rect of rects) {\n      let seg = segs[rect.index]\n      let isAbsolute = rect.span.end - rect.span.start > 1 // multi-column?\n      let isFirstCol = rect.span.start === col\n\n      currentMarginTop += rect.levelCoord - currentHeight // amount of space since bottom of previous seg\n      currentHeight = rect.levelCoord + rect.thickness // height will now be bottom of current seg\n\n      if (isAbsolute) {\n        currentMarginTop += rect.thickness\n        if (isFirstCol) {\n          multiPlacements.push({\n            seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n            isVisible: true,\n            isAbsolute: true,\n            absoluteTop: rect.levelCoord,\n            marginTop: 0,\n          })\n        }\n      } else if (isFirstCol) {\n        multiPlacements.push({\n          seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n          isVisible: true,\n          isAbsolute: false,\n          absoluteTop: rect.levelCoord,\n          marginTop: currentMarginTop, // claim the margin\n        })\n        currentMarginTop = 0\n      }\n    }\n\n    singleColPlacements.push(singlePlacements)\n    multiColPlacements.push(multiPlacements)\n    leftoverMargins.push(currentMarginTop)\n  }\n\n  return { singleColPlacements, multiColPlacements, leftoverMargins }\n}\n\nfunction groupRectsByEachCol(rects: SegRect[], colCnt: number): SegRect[][] {\n  let rectsByEachCol: SegRect[][] = []\n\n  for (let col = 0; col < colCnt; col += 1) {\n    rectsByEachCol.push([])\n  }\n\n  for (let rect of rects) {\n    for (let col = rect.span.start; col < rect.span.end; col += 1) {\n      rectsByEachCol[col].push(rect)\n    }\n  }\n\n  return rectsByEachCol\n}\n\nfunction resliceSeg(seg: TableSeg, spanStart: number, spanEnd: number, cells: DayTableCell[]): TableSeg {\n  if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {\n    return seg\n  }\n\n  let eventRange = seg.eventRange\n  let origRange = eventRange.range\n  let slicedRange = intersectRanges(origRange, {\n    start: cells[spanStart].date,\n    end: addDays(cells[spanEnd - 1].date, 1),\n  })\n\n  return {\n    ...seg,\n    firstCol: spanStart,\n    lastCol: spanEnd - 1,\n    eventRange: {\n      def: eventRange.def,\n      ui: { ...eventRange.ui, durationEditable: false }, // hack to disable resizing\n      instance: eventRange.instance,\n      range: slicedRange,\n    } as EventRenderRange,\n    isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(),\n    isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf(),\n  }\n}\n\nclass DayGridSegHierarchy extends SegHierarchy {\n  // config\n  hiddenConsumes: boolean = false\n\n  // allows us to keep hidden entries in the hierarchy so they take up space\n  forceHidden: { [entryId: string]: true } = {}\n\n  addSegs(segInputs: SegEntry[]): SegEntry[] {\n    const hiddenSegs = super.addSegs(segInputs)\n    const { entriesByLevel } = this\n    const excludeHidden = (entry: SegEntry) => !this.forceHidden[buildEntryKey(entry)]\n\n    // remove the forced-hidden segs\n    for (let level = 0; level < entriesByLevel.length; level += 1) {\n      entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden)\n    }\n\n    return hiddenSegs\n  }\n\n  handleInvalidInsertion(insertion: SegInsertion, entry: SegEntry, hiddenEntries: SegEntry[]) {\n    const { entriesByLevel, forceHidden } = this\n    const { touchingEntry, touchingLevel, touchingLateral } = insertion\n\n    if (this.hiddenConsumes && touchingEntry) {\n      const touchingEntryId = buildEntryKey(touchingEntry)\n      // if not already hidden\n      if (!forceHidden[touchingEntryId]) {\n        if (this.allowReslicing) {\n          const placeholderEntry: SegEntry = { // placeholder of the \"more\" link\n            ...touchingEntry,\n            span: intersectSpans(touchingEntry.span, entry.span),\n          }\n          const placeholderEntryId = buildEntryKey(placeholderEntry)\n          forceHidden[placeholderEntryId] = true\n          entriesByLevel[touchingLevel][touchingLateral] = placeholderEntry // replace touchingEntry with our placeholder\n          this.splitEntry(touchingEntry, entry, hiddenEntries) // split up the touchingEntry, reinsert it\n        } else {\n          forceHidden[touchingEntryId] = true\n          hiddenEntries.push(touchingEntry)\n        }\n      }\n    }\n\n    return super.handleInvalidInsertion(insertion, entry, hiddenEntries)\n  }\n}\n","import { createElement, StandardEvent, BaseComponent, MinimalEventProps, createFormatter } from '@fullcalendar/common'\n\nconst DEFAULT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  meridiem: false,\n})\n\nexport interface TimeColEventProps extends MinimalEventProps {\n  isShort: boolean\n}\n\nexport class TimeColEvent extends BaseComponent<TimeColEventProps> {\n  render() {\n    let classNames = [\n      'fc-timegrid-event',\n      'fc-v-event',\n    ]\n\n    if (this.props.isShort) {\n      classNames.push('fc-timegrid-event-short')\n    }\n\n    return (\n      <StandardEvent\n        {...this.props}\n        defaultTimeFormat={DEFAULT_TIME_FORMAT}\n        extraClassNames={classNames}\n      />\n    )\n  }\n}\n","import {\n  DateMarker, BaseComponent, createElement,\n  DateRange, DayCellContent, DateProfile,\n} from '@fullcalendar/common'\n\nexport interface TimeColMiscProps { // should be given nowDate too??\n  dateProfile: DateProfile\n  date: DateMarker\n  todayRange: DateRange\n  extraHookProps?: any\n}\n\nexport class TimeColMisc extends BaseComponent<TimeColMiscProps> {\n  render() {\n    let { props } = this\n\n    return (\n      <DayCellContent date={props.date} dateProfile={props.dateProfile} todayRange={props.todayRange} extraHookProps={props.extraHookProps}>\n        {(innerElRef, innerContent) => (\n          innerContent &&\n            <div className=\"fc-timegrid-col-misc\" ref={innerElRef}>{innerContent}</div>\n        )}\n      </DayCellContent>\n    )\n  }\n}\n","import {\n  Ref, DateMarker, BaseComponent, createElement, EventSegUiInteractionState, Seg, getSegMeta,\n  DateRange, Fragment, DayCellRoot, NowIndicatorRoot, BgEvent, renderFill, buildIsoString, computeEarliestSegStart,\n  DateProfile, buildEventRangeKey, sortEventSegs, memoize, SegEntryGroup, SegEntry, Dictionary, SegSpan, CssDimValue,\n} from '@fullcalendar/common'\nimport { TimeColMoreLink } from './TimeColMoreLink'\nimport { TimeColsSeg } from './TimeColsSeg'\nimport { TimeColsSlatsCoords } from './TimeColsSlatsCoords'\nimport { SegWebRect } from './seg-web'\nimport { computeFgSegPlacements, computeSegVCoords } from './event-placement'\nimport { TimeColEvent } from './TimeColEvent'\nimport { TimeColMisc } from './TimeColMisc'\n\nexport interface TimeColProps {\n  elRef?: Ref<HTMLTableCellElement>\n  dateProfile: DateProfile\n  date: DateMarker\n  nowDate: DateMarker\n  todayRange: DateRange\n  extraDataAttrs?: any\n  extraHookProps?: any\n  extraClassNames?: string[]\n  extraDateSpan?: Dictionary\n  fgEventSegs: TimeColsSeg[]\n  bgEventSegs: TimeColsSeg[]\n  businessHourSegs: TimeColsSeg[]\n  nowIndicatorSegs: TimeColsSeg[]\n  dateSelectionSegs: TimeColsSeg[]\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n  slatCoords: TimeColsSlatsCoords\n  forPrint: boolean\n}\n\nexport class TimeCol extends BaseComponent<TimeColProps> {\n  sortEventSegs = memoize(sortEventSegs)\n  // TODO: memoize event-placement?\n\n  render() {\n    let { props, context } = this\n    let isSelectMirror = context.options.selectMirror\n\n    let mirrorSegs: Seg[] = // yuck\n      (props.eventDrag && props.eventDrag.segs) ||\n      (props.eventResize && props.eventResize.segs) ||\n      (isSelectMirror && props.dateSelectionSegs) ||\n      []\n\n    let interactionAffectedInstances = // TODO: messy way to compute this\n      (props.eventDrag && props.eventDrag.affectedInstances) ||\n      (props.eventResize && props.eventResize.affectedInstances) ||\n      {}\n\n    let sortedFgSegs = this.sortEventSegs(props.fgEventSegs, context.options.eventOrder) as TimeColsSeg[]\n\n    return (\n      <DayCellRoot\n        elRef={props.elRef}\n        date={props.date}\n        dateProfile={props.dateProfile}\n        todayRange={props.todayRange}\n        extraHookProps={props.extraHookProps}\n      >\n        {(rootElRef, classNames, dataAttrs) => (\n          <td\n            ref={rootElRef}\n            role=\"gridcell\"\n            className={['fc-timegrid-col'].concat(classNames, props.extraClassNames || []).join(' ')}\n            {...dataAttrs}\n            {...props.extraDataAttrs}\n          >\n            <div className=\"fc-timegrid-col-frame\">\n              <div className=\"fc-timegrid-col-bg\">\n                {this.renderFillSegs(props.businessHourSegs, 'non-business')}\n                {this.renderFillSegs(props.bgEventSegs, 'bg-event')}\n                {this.renderFillSegs(props.dateSelectionSegs, 'highlight')}\n              </div>\n              <div className=\"fc-timegrid-col-events\">\n                {this.renderFgSegs(\n                  sortedFgSegs,\n                  interactionAffectedInstances,\n                  false,\n                  false,\n                  false,\n                )}\n              </div>\n              <div className=\"fc-timegrid-col-events\">\n                {this.renderFgSegs(\n                  mirrorSegs as TimeColsSeg[],\n                  {},\n                  Boolean(props.eventDrag),\n                  Boolean(props.eventResize),\n                  Boolean(isSelectMirror),\n                )}\n              </div>\n              <div className=\"fc-timegrid-now-indicator-container\">\n                {this.renderNowIndicator(props.nowIndicatorSegs)}\n              </div>\n              <TimeColMisc\n                date={props.date}\n                dateProfile={props.dateProfile}\n                todayRange={props.todayRange}\n                extraHookProps={props.extraHookProps}\n              />\n            </div>\n          </td>\n        )}\n      </DayCellRoot>\n    )\n  }\n\n  renderFgSegs(\n    sortedFgSegs: TimeColsSeg[],\n    segIsInvisible: { [instanceId: string]: any },\n    isDragging: boolean,\n    isResizing: boolean,\n    isDateSelecting: boolean,\n  ) {\n    let { props } = this\n    if (props.forPrint) {\n      return renderPlainFgSegs(sortedFgSegs, props)\n    }\n    return this.renderPositionedFgSegs(sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting)\n  }\n\n  renderPositionedFgSegs(\n    segs: TimeColsSeg[], // if not mirror, needs to be sorted\n    segIsInvisible: { [instanceId: string]: any },\n    isDragging: boolean,\n    isResizing: boolean,\n    isDateSelecting: boolean,\n  ) {\n    let { eventMaxStack, eventShortHeight, eventOrderStrict, eventMinHeight } = this.context.options\n    let { date, slatCoords, eventSelection, todayRange, nowDate } = this.props\n    let isMirror = isDragging || isResizing || isDateSelecting\n    let segVCoords = computeSegVCoords(segs, date, slatCoords, eventMinHeight)\n    let { segPlacements, hiddenGroups } = computeFgSegPlacements(segs, segVCoords, eventOrderStrict, eventMaxStack)\n\n    return (\n      <Fragment>\n        {this.renderHiddenGroups(hiddenGroups, segs)}\n        {segPlacements.map((segPlacement) => {\n          let { seg, rect } = segPlacement\n          let instanceId = seg.eventRange.instance.instanceId\n          let isVisible = isMirror || Boolean(!segIsInvisible[instanceId] && rect)\n          let vStyle = computeSegVStyle(rect && rect.span)\n          let hStyle = (!isMirror && rect) ? this.computeSegHStyle(rect) : { left: 0, right: 0 }\n          let isInset = Boolean(rect) && rect.stackForward > 0\n          let isShort = Boolean(rect) && (rect.span.end - rect.span.start) < eventShortHeight // look at other places for this problem\n\n          return (\n            <div\n              className={\n                'fc-timegrid-event-harness' +\n                (isInset ? ' fc-timegrid-event-harness-inset' : '')\n              }\n              key={instanceId}\n              style={{\n                visibility: isVisible ? ('' as any) : 'hidden',\n                ...vStyle,\n                ...hStyle,\n              }}\n            >\n              <TimeColEvent\n                seg={seg}\n                isDragging={isDragging}\n                isResizing={isResizing}\n                isDateSelecting={isDateSelecting}\n                isSelected={instanceId === eventSelection}\n                isShort={isShort}\n                {...getSegMeta(seg, todayRange, nowDate)}\n              />\n            </div>\n          )\n        })}\n      </Fragment>\n    )\n  }\n\n  // will already have eventMinHeight applied because segInputs already had it\n  renderHiddenGroups(hiddenGroups: SegEntryGroup[], segs: TimeColsSeg[]) {\n    let { extraDateSpan, dateProfile, todayRange, nowDate, eventSelection, eventDrag, eventResize } = this.props\n    return (\n      <Fragment>\n        {hiddenGroups.map((hiddenGroup) => {\n          let positionCss = computeSegVStyle(hiddenGroup.span)\n          let hiddenSegs = compileSegsFromEntries(hiddenGroup.entries, segs)\n          return (\n            <TimeColMoreLink\n              key={buildIsoString(computeEarliestSegStart(hiddenSegs))}\n              hiddenSegs={hiddenSegs}\n              top={positionCss.top}\n              bottom={positionCss.bottom}\n              extraDateSpan={extraDateSpan}\n              dateProfile={dateProfile}\n              todayRange={todayRange}\n              nowDate={nowDate}\n              eventSelection={eventSelection}\n              eventDrag={eventDrag}\n              eventResize={eventResize}\n            />\n          )\n        })}\n      </Fragment>\n    )\n  }\n\n  renderFillSegs(segs: TimeColsSeg[], fillType: string) {\n    let { props, context } = this\n    let segVCoords = computeSegVCoords(segs, props.date, props.slatCoords, context.options.eventMinHeight) // don't assume all populated\n\n    let children = segVCoords.map((vcoords, i) => {\n      let seg = segs[i]\n      return (\n        <div\n          key={buildEventRangeKey(seg.eventRange)}\n          className=\"fc-timegrid-bg-harness\"\n          style={computeSegVStyle(vcoords)}\n        >\n          {fillType === 'bg-event' ?\n            <BgEvent seg={seg} {...getSegMeta(seg, props.todayRange, props.nowDate)} /> :\n            renderFill(fillType)}\n        </div>\n      )\n    })\n\n    return <Fragment>{children}</Fragment>\n  }\n\n  renderNowIndicator(segs: TimeColsSeg[]) {\n    let { slatCoords, date } = this.props\n\n    if (!slatCoords) { return null }\n\n    return segs.map((seg, i) => (\n      <NowIndicatorRoot\n        isAxis={false}\n        date={date}\n        // key doesn't matter. will only ever be one\n        key={i} // eslint-disable-line react/no-array-index-key\n      >\n        {(rootElRef, classNames, innerElRef, innerContent) => (\n          <div\n            ref={rootElRef}\n            className={['fc-timegrid-now-indicator-line'].concat(classNames).join(' ')}\n            style={{ top: slatCoords.computeDateTop(seg.start, date) }}\n          >\n            {innerContent}\n          </div>\n        )}\n      </NowIndicatorRoot>\n    ))\n  }\n\n  computeSegHStyle(segHCoords: SegWebRect) {\n    let { isRtl, options } = this.context\n    let shouldOverlap = options.slotEventOverlap\n    let nearCoord = segHCoords.levelCoord // the left side if LTR. the right side if RTL. floating-point\n    let farCoord = segHCoords.levelCoord + segHCoords.thickness // the right side if LTR. the left side if RTL. floating-point\n    let left // amount of space from left edge, a fraction of the total width\n    let right // amount of space from right edge, a fraction of the total width\n\n    if (shouldOverlap) {\n      // double the width, but don't go beyond the maximum forward coordinate (1.0)\n      farCoord = Math.min(1, nearCoord + (farCoord - nearCoord) * 2)\n    }\n\n    if (isRtl) {\n      left = 1 - farCoord\n      right = nearCoord\n    } else {\n      left = nearCoord\n      right = 1 - farCoord\n    }\n\n    let props = {\n      zIndex: segHCoords.stackDepth + 1, // convert from 0-base to 1-based\n      left: left * 100 + '%',\n      right: right * 100 + '%',\n    }\n\n    if (shouldOverlap && !segHCoords.stackForward) {\n      // add padding to the edge so that forward stacked events don't cover the resizer's icon\n      props[isRtl ? 'marginLeft' : 'marginRight'] = 10 * 2 // 10 is a guesstimate of the icon's width\n    }\n\n    return props\n  }\n}\n\nexport function renderPlainFgSegs(\n  sortedFgSegs: TimeColsSeg[],\n  { todayRange, nowDate, eventSelection, eventDrag, eventResize }: {\n    todayRange: DateRange\n    nowDate: DateMarker\n    eventSelection: string\n    eventDrag: EventSegUiInteractionState | null\n    eventResize: EventSegUiInteractionState | null\n  },\n) {\n  let hiddenInstances =\n    (eventDrag ? eventDrag.affectedInstances : null) ||\n    (eventResize ? eventResize.affectedInstances : null) ||\n    {}\n  return (\n    <Fragment>\n      {sortedFgSegs.map((seg) => {\n        let instanceId = seg.eventRange.instance.instanceId\n        return (\n          <div\n            key={instanceId}\n            style={{ visibility: hiddenInstances[instanceId] ? 'hidden' : ('' as any) }}\n          >\n            <TimeColEvent\n              seg={seg}\n              isDragging={false}\n              isResizing={false}\n              isDateSelecting={false}\n              isSelected={instanceId === eventSelection}\n              isShort={false}\n              {...getSegMeta(seg, todayRange, nowDate)}\n            />\n          </div>\n        )\n      })}\n    </Fragment>\n  )\n}\n\nfunction computeSegVStyle(segVCoords: SegSpan | null): { top: CssDimValue, bottom: CssDimValue } {\n  if (!segVCoords) {\n    return { top: '', bottom: '' }\n  }\n  return {\n    top: segVCoords.start,\n    bottom: -segVCoords.end,\n  }\n}\n\nfunction compileSegsFromEntries(\n  segEntries: SegEntry[],\n  allSegs: TimeColsSeg[],\n): TimeColsSeg[] {\n  return segEntries.map((segEntry) => allSegs[segEntry.index])\n}\n","import {\n  createElement, VNode,\n  BaseComponent,\n  EventSegUiInteractionState,\n  CssDimValue,\n  DateMarker,\n  RefMap,\n  createRef,\n  PositionCache,\n  memoize,\n  DateRange,\n  NowIndicatorRoot,\n  DateProfile,\n  DayTableCell,\n} from '@fullcalendar/common'\nimport { TimeColsSeg, splitSegsByCol, splitInteractionByCol } from './TimeColsSeg'\nimport { TimeColsSlatsCoords } from './TimeColsSlatsCoords'\nimport { TimeCol } from './TimeCol'\n\nexport interface TimeColsContentProps {\n  axis: boolean\n  cells: DayTableCell[]\n  dateProfile: DateProfile\n  nowDate: DateMarker\n  todayRange: DateRange\n  businessHourSegs: TimeColsSeg[]\n  bgEventSegs: TimeColsSeg[]\n  fgEventSegs: TimeColsSeg[]\n  dateSelectionSegs: TimeColsSeg[]\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n  nowIndicatorSegs: TimeColsSeg[]\n  clientWidth: number | null\n  tableMinWidth: CssDimValue\n  tableColGroupNode: VNode\n  slatCoords: TimeColsSlatsCoords\n  onColCoords?: (colCoords: PositionCache) => void\n  forPrint: boolean\n}\n\nexport class TimeColsContent extends BaseComponent<TimeColsContentProps> { // TODO: rename\n  private splitFgEventSegs = memoize(splitSegsByCol)\n  private splitBgEventSegs = memoize(splitSegsByCol)\n  private splitBusinessHourSegs = memoize(splitSegsByCol)\n  private splitNowIndicatorSegs = memoize(splitSegsByCol)\n  private splitDateSelectionSegs = memoize(splitSegsByCol)\n  private splitEventDrag = memoize(splitInteractionByCol)\n  private splitEventResize = memoize(splitInteractionByCol)\n  private rootElRef = createRef<HTMLDivElement>()\n  private cellElRefs = new RefMap<HTMLTableCellElement>()\n\n  render() {\n    let { props, context } = this\n    let nowIndicatorTop =\n      context.options.nowIndicator &&\n      props.slatCoords &&\n      props.slatCoords.safeComputeTop(props.nowDate) // might return void\n\n    let colCnt = props.cells.length\n    let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, colCnt)\n    let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, colCnt)\n    let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, colCnt)\n    let nowIndicatorSegsByRow = this.splitNowIndicatorSegs(props.nowIndicatorSegs, colCnt)\n    let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, colCnt)\n    let eventDragByRow = this.splitEventDrag(props.eventDrag, colCnt)\n    let eventResizeByRow = this.splitEventResize(props.eventResize, colCnt)\n\n    return (\n      <div className=\"fc-timegrid-cols\" ref={this.rootElRef}>\n        <table\n          role=\"presentation\"\n          style={{\n            minWidth: props.tableMinWidth,\n            width: props.clientWidth,\n          }}\n        >\n          {props.tableColGroupNode}\n          <tbody role=\"presentation\">\n            <tr role=\"row\">\n              {props.axis && (\n                <td aria-hidden className=\"fc-timegrid-col fc-timegrid-axis\">\n                  <div className=\"fc-timegrid-col-frame\">\n                    <div className=\"fc-timegrid-now-indicator-container\">\n                      {typeof nowIndicatorTop === 'number' && (\n                        <NowIndicatorRoot isAxis date={props.nowDate}>\n                          {(rootElRef, classNames, innerElRef, innerContent) => (\n                            <div\n                              ref={rootElRef}\n                              className={['fc-timegrid-now-indicator-arrow'].concat(classNames).join(' ')}\n                              style={{ top: nowIndicatorTop }}\n                            >\n                              {innerContent}\n                            </div>\n                          )}\n                        </NowIndicatorRoot>\n                      )}\n                    </div>\n                  </div>\n                </td>\n              )}\n              {props.cells.map((cell, i) => (\n                <TimeCol\n                  key={cell.key}\n                  elRef={this.cellElRefs.createRef(cell.key)}\n                  dateProfile={props.dateProfile}\n                  date={cell.date}\n                  nowDate={props.nowDate}\n                  todayRange={props.todayRange}\n                  extraHookProps={cell.extraHookProps}\n                  extraDataAttrs={cell.extraDataAttrs}\n                  extraClassNames={cell.extraClassNames}\n                  extraDateSpan={cell.extraDateSpan}\n                  fgEventSegs={fgEventSegsByRow[i]}\n                  bgEventSegs={bgEventSegsByRow[i]}\n                  businessHourSegs={businessHourSegsByRow[i]}\n                  nowIndicatorSegs={nowIndicatorSegsByRow[i]}\n                  dateSelectionSegs={dateSelectionSegsByRow[i]}\n                  eventDrag={eventDragByRow[i]}\n                  eventResize={eventResizeByRow[i]}\n                  slatCoords={props.slatCoords}\n                  eventSelection={props.eventSelection}\n                  forPrint={props.forPrint}\n                />\n              ))}\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    this.updateCoords()\n  }\n\n  componentDidUpdate() {\n    this.updateCoords()\n  }\n\n  updateCoords() {\n    let { props } = this\n\n    if (\n      props.onColCoords &&\n      props.clientWidth !== null // means sizing has stabilized\n    ) {\n      props.onColCoords(\n        new PositionCache(\n          this.rootElRef.current,\n          collectCellEls(this.cellElRefs.currentMap, props.cells),\n          true, // horizontal\n          false,\n        ),\n      )\n    }\n  }\n}\n\nfunction collectCellEls(elMap: { [key: string]: HTMLElement }, cells: DayTableCell[]) {\n  return cells.map((cell) => elMap[cell.key])\n}\n","import {\n  createElement, VNode,\n  addDurations,\n  multiplyDuration,\n  wholeDivideDurations,\n  DateMarker,\n  EventSegUiInteractionState,\n  memoize,\n  CssDimValue,\n  PositionCache,\n  ScrollResponder,\n  ScrollRequest,\n  DateRange,\n  Duration,\n  DateProfile,\n  DayTableCell,\n  Hit,\n  DateComponent,\n} from '@fullcalendar/common'\nimport { TimeColsSlats } from './TimeColsSlats'\nimport { TimeSlatMeta } from './time-slat-meta'\nimport { TimeColsContent } from './TimeColsContent'\nimport { TimeColsSlatsCoords } from './TimeColsSlatsCoords'\nimport { TimeColsSeg } from './TimeColsSeg'\n\nexport interface TimeColsProps {\n  cells: DayTableCell[]\n  dateProfile: DateProfile\n  slotDuration: Duration\n  nowDate: DateMarker\n  todayRange: DateRange\n  businessHourSegs: TimeColsSeg[]\n  bgEventSegs: TimeColsSeg[]\n  fgEventSegs: TimeColsSeg[]\n  dateSelectionSegs: TimeColsSeg[]\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n  tableColGroupNode: VNode\n  tableMinWidth: CssDimValue\n  clientWidth: number | null\n  clientHeight: number | null\n  expandRows: boolean\n  nowIndicatorSegs: TimeColsSeg[]\n  onScrollTopRequest?: (scrollTop: number) => void\n  forPrint: boolean\n  axis: boolean\n  slatMetas: TimeSlatMeta[]\n  onSlatCoords?: (slatCoords: TimeColsSlatsCoords) => void\n  isHitComboAllowed?: (hit0: Hit, hit1: Hit) => boolean\n}\n\ninterface TimeColsState {\n  slatCoords: TimeColsSlatsCoords | null\n}\n\n/* A component that renders one or more columns of vertical time slots\n----------------------------------------------------------------------------------------------------------------------*/\n\nexport class TimeCols extends DateComponent<TimeColsProps, TimeColsState> {\n  private processSlotOptions = memoize(processSlotOptions)\n  private scrollResponder: ScrollResponder\n  private colCoords: PositionCache\n\n  state = {\n    slatCoords: null,\n  }\n\n  render() {\n    let { props, state } = this\n\n    return (\n      <div\n        className=\"fc-timegrid-body\"\n        ref={this.handleRootEl}\n        style={{\n          // these props are important to give this wrapper correct dimensions for interactions\n          // TODO: if we set it here, can we avoid giving to inner tables?\n          width: props.clientWidth,\n          minWidth: props.tableMinWidth,\n        }}\n      >\n        <TimeColsSlats\n          axis={props.axis}\n          dateProfile={props.dateProfile}\n          slatMetas={props.slatMetas}\n          clientWidth={props.clientWidth}\n          minHeight={props.expandRows ? props.clientHeight : ''}\n          tableMinWidth={props.tableMinWidth}\n          tableColGroupNode={props.axis ? props.tableColGroupNode : null /* axis depends on the colgroup's shrinking */}\n          onCoords={this.handleSlatCoords}\n        />\n        <TimeColsContent\n          cells={props.cells}\n          axis={props.axis}\n          dateProfile={props.dateProfile}\n          businessHourSegs={props.businessHourSegs}\n          bgEventSegs={props.bgEventSegs}\n          fgEventSegs={props.fgEventSegs}\n          dateSelectionSegs={props.dateSelectionSegs}\n          eventSelection={props.eventSelection}\n          eventDrag={props.eventDrag}\n          eventResize={props.eventResize}\n          todayRange={props.todayRange}\n          nowDate={props.nowDate}\n          nowIndicatorSegs={props.nowIndicatorSegs}\n          clientWidth={props.clientWidth}\n          tableMinWidth={props.tableMinWidth}\n          tableColGroupNode={props.tableColGroupNode}\n          slatCoords={state.slatCoords}\n          onColCoords={this.handleColCoords}\n          forPrint={props.forPrint}\n        />\n      </div>\n    )\n  }\n\n  handleRootEl = (el: HTMLElement | null) => {\n    if (el) {\n      this.context.registerInteractiveComponent(this, {\n        el,\n        isHitComboAllowed: this.props.isHitComboAllowed,\n      })\n    } else {\n      this.context.unregisterInteractiveComponent(this)\n    }\n  }\n\n  componentDidMount() {\n    this.scrollResponder = this.context.createScrollResponder(this.handleScrollRequest)\n  }\n\n  componentDidUpdate(prevProps: TimeColsProps) {\n    this.scrollResponder.update(prevProps.dateProfile !== this.props.dateProfile)\n  }\n\n  componentWillUnmount() {\n    this.scrollResponder.detach()\n  }\n\n  handleScrollRequest = (request: ScrollRequest) => {\n    let { onScrollTopRequest } = this.props\n    let { slatCoords } = this.state\n\n    if (onScrollTopRequest && slatCoords) {\n      if (request.time) {\n        let top = slatCoords.computeTimeTop(request.time)\n        top = Math.ceil(top) // zoom can give weird floating-point values. rather scroll a little bit further\n        if (top) {\n          top += 1 // to overcome top border that slots beyond the first have. looks better\n        }\n\n        onScrollTopRequest(top)\n      }\n\n      return true\n    }\n\n    return false\n  }\n\n  handleColCoords = (colCoords: PositionCache | null) => {\n    this.colCoords = colCoords\n  }\n\n  handleSlatCoords = (slatCoords: TimeColsSlatsCoords | null) => {\n    this.setState({ slatCoords })\n\n    if (this.props.onSlatCoords) {\n      this.props.onSlatCoords(slatCoords)\n    }\n  }\n\n  queryHit(positionLeft: number, positionTop: number): Hit {\n    let { dateEnv, options } = this.context\n    let { colCoords } = this\n    let { dateProfile } = this.props\n    let { slatCoords } = this.state\n    let { snapDuration, snapsPerSlot } = this.processSlotOptions(this.props.slotDuration, options.snapDuration)\n\n    let colIndex = colCoords.leftToIndex(positionLeft)\n    let slatIndex = slatCoords.positions.topToIndex(positionTop)\n\n    if (colIndex != null && slatIndex != null) {\n      let cell = this.props.cells[colIndex]\n      let slatTop = slatCoords.positions.tops[slatIndex]\n      let slatHeight = slatCoords.positions.getHeight(slatIndex)\n      let partial = (positionTop - slatTop) / slatHeight // floating point number between 0 and 1\n      let localSnapIndex = Math.floor(partial * snapsPerSlot) // the snap # relative to start of slat\n      let snapIndex = slatIndex * snapsPerSlot + localSnapIndex\n\n      let dayDate = this.props.cells[colIndex].date\n      let time = addDurations(\n        dateProfile.slotMinTime,\n        multiplyDuration(snapDuration, snapIndex),\n      )\n\n      let start = dateEnv.add(dayDate, time)\n      let end = dateEnv.add(start, snapDuration)\n\n      return {\n        dateProfile,\n        dateSpan: {\n          range: { start, end },\n          allDay: false,\n          ...cell.extraDateSpan,\n        },\n        dayEl: colCoords.els[colIndex],\n        rect: {\n          left: colCoords.lefts[colIndex],\n          right: colCoords.rights[colIndex],\n          top: slatTop,\n          bottom: slatTop + slatHeight,\n        },\n        layer: 0,\n      }\n    }\n\n    return null\n  }\n}\n\nfunction processSlotOptions(slotDuration: Duration, snapDurationOverride: Duration | null) {\n  let snapDuration = snapDurationOverride || slotDuration\n  let snapsPerSlot = wholeDivideDurations(slotDuration, snapDuration)\n\n  if (snapsPerSlot === null) {\n    snapDuration = slotDuration\n    snapsPerSlot = 1\n    // TODO: say warning?\n  }\n\n  return { snapDuration, snapsPerSlot }\n}\n","import { intersectRanges, DateRange, Slicer } from '@fullcalendar/common'\nimport { TimeColsSeg } from './TimeColsSeg'\n\nexport class DayTimeColsSlicer extends Slicer<TimeColsSeg, [DateRange[]]> {\n  sliceRange(range: DateRange, dayRanges: DateRange[]): TimeColsSeg[] {\n    let segs: TimeColsSeg[] = []\n\n    for (let col = 0; col < dayRanges.length; col += 1) {\n      let segRange = intersectRanges(range, dayRanges[col])\n\n      if (segRange) {\n        segs.push({\n          start: segRange.start,\n          end: segRange.end,\n          isStart: segRange.start.valueOf() === range.start.valueOf(),\n          isEnd: segRange.end.valueOf() === range.end.valueOf(),\n          col,\n        })\n      }\n    }\n\n    return segs\n  }\n}\n","import {\n  createElement,\n  createRef,\n  VNode,\n  DateComponent,\n  DateProfile,\n  EventStore,\n  EventUiHash,\n  EventInteractionState,\n  DateSpan,\n  memoize,\n  DateRange,\n  DayTableModel,\n  DateEnv,\n  DateMarker,\n  NowTimer,\n  CssDimValue,\n  Duration,\n} from '@fullcalendar/common'\nimport { TimeCols } from './TimeCols'\nimport { TimeSlatMeta } from './time-slat-meta'\nimport { TimeColsSlatsCoords } from './TimeColsSlatsCoords'\nimport { DayTimeColsSlicer } from './DayTimeColsSlicer'\n\nexport interface DayTimeColsProps {\n  dateProfile: DateProfile\n  dayTableModel: DayTableModel\n  axis: boolean\n  slotDuration: Duration\n  slatMetas: TimeSlatMeta[]\n  businessHours: EventStore\n  eventStore: EventStore\n  eventUiBases: EventUiHash\n  dateSelection: DateSpan | null\n  eventSelection: string\n  eventDrag: EventInteractionState | null\n  eventResize: EventInteractionState | null\n  tableColGroupNode: VNode\n  tableMinWidth: CssDimValue\n  clientWidth: number | null\n  clientHeight: number | null\n  expandRows: boolean\n  onScrollTopRequest?: (scrollTop: number) => void\n  forPrint: boolean\n  onSlatCoords?: (slatCoords: TimeColsSlatsCoords) => void\n}\n\nexport class DayTimeCols extends DateComponent<DayTimeColsProps> {\n  private buildDayRanges = memoize(buildDayRanges)\n  private slicer = new DayTimeColsSlicer()\n  private timeColsRef = createRef<TimeCols>()\n\n  render() {\n    let { props, context } = this\n    let { dateProfile, dayTableModel } = props\n\n    let isNowIndicator = context.options.nowIndicator\n    let dayRanges = this.buildDayRanges(dayTableModel, dateProfile, context.dateEnv)\n\n    // give it the first row of cells\n    // TODO: would move this further down hierarchy, but sliceNowDate needs it\n    return (\n      <NowTimer unit={isNowIndicator ? 'minute' : 'day'}>\n        {(nowDate: DateMarker, todayRange: DateRange) => (\n          <TimeCols\n            ref={this.timeColsRef}\n            {...this.slicer.sliceProps(props, dateProfile, null, context, dayRanges)}\n            forPrint={props.forPrint}\n            axis={props.axis}\n            dateProfile={dateProfile}\n            slatMetas={props.slatMetas}\n            slotDuration={props.slotDuration}\n            cells={dayTableModel.cells[0]}\n            tableColGroupNode={props.tableColGroupNode}\n            tableMinWidth={props.tableMinWidth}\n            clientWidth={props.clientWidth}\n            clientHeight={props.clientHeight}\n            expandRows={props.expandRows}\n            nowDate={nowDate}\n            nowIndicatorSegs={isNowIndicator && this.slicer.sliceNowDate(nowDate, context, dayRanges)}\n            todayRange={todayRange}\n            onScrollTopRequest={props.onScrollTopRequest}\n            onSlatCoords={props.onSlatCoords}\n          />\n        )}\n      </NowTimer>\n    )\n  }\n}\n\nexport function buildDayRanges(dayTableModel: DayTableModel, dateProfile: DateProfile, dateEnv: DateEnv): DateRange[] {\n  let ranges: DateRange[] = []\n\n  for (let date of dayTableModel.headerDates) {\n    ranges.push({\n      start: dateEnv.add(date, dateProfile.slotMinTime),\n      end: dateEnv.add(date, dateProfile.slotMaxTime),\n    })\n  }\n\n  return ranges\n}\n","import {\n  createDuration,\n  asRoughMs,\n  formatIsoTimeString,\n  addDurations,\n  wholeDivideDurations,\n  Duration,\n  DateMarker,\n  DateEnv,\n} from '@fullcalendar/common'\n\nexport interface TimeSlatMeta {\n  date: DateMarker\n  time: Duration\n  key: string\n  isoTimeStr: string\n  isLabeled: boolean\n}\n\n// potential nice values for the slot-duration and interval-duration\n// from largest to smallest\nconst STOCK_SUB_DURATIONS = [\n  { hours: 1 },\n  { minutes: 30 },\n  { minutes: 15 },\n  { seconds: 30 },\n  { seconds: 15 },\n]\n\nexport function buildSlatMetas(\n  slotMinTime: Duration,\n  slotMaxTime: Duration,\n  explicitLabelInterval: Duration | null,\n  slotDuration: Duration,\n  dateEnv: DateEnv,\n) {\n  let dayStart = new Date(0)\n  let slatTime = slotMinTime\n  let slatIterator = createDuration(0)\n  let labelInterval = explicitLabelInterval || computeLabelInterval(slotDuration)\n  let metas: TimeSlatMeta[] = []\n\n  while (asRoughMs(slatTime) < asRoughMs(slotMaxTime)) {\n    let date = dateEnv.add(dayStart, slatTime)\n    let isLabeled = wholeDivideDurations(slatIterator, labelInterval) !== null\n\n    metas.push({\n      date,\n      time: slatTime,\n      key: date.toISOString(), // we can't use the isoTimeStr for uniqueness when minTime/maxTime beyone 0h/24h\n      isoTimeStr: formatIsoTimeString(date),\n      isLabeled,\n    })\n\n    slatTime = addDurations(slatTime, slotDuration)\n    slatIterator = addDurations(slatIterator, slotDuration)\n  }\n\n  return metas\n}\n\n// Computes an automatic value for slotLabelInterval\nfunction computeLabelInterval(slotDuration) {\n  let i\n  let labelInterval\n  let slotsPerLabel\n\n  // find the smallest stock label interval that results in more than one slots-per-label\n  for (i = STOCK_SUB_DURATIONS.length - 1; i >= 0; i -= 1) {\n    labelInterval = createDuration(STOCK_SUB_DURATIONS[i])\n    slotsPerLabel = wholeDivideDurations(labelInterval, slotDuration)\n    if (slotsPerLabel !== null && slotsPerLabel > 1) {\n      return labelInterval\n    }\n  }\n\n  return slotDuration // fall back\n}\n","import {\n  createElement,\n  DateProfileGenerator, DateProfile,\n  DayHeader,\n  DaySeriesModel,\n  DayTableModel,\n  memoize,\n  ChunkContentCallbackArgs,\n} from '@fullcalendar/common'\nimport { DayTable } from '@fullcalendar/daygrid'\nimport { TimeColsView } from './TimeColsView'\nimport { DayTimeCols } from './DayTimeCols'\nimport { buildSlatMetas } from './time-slat-meta'\n\nexport class DayTimeColsView extends TimeColsView {\n  private buildTimeColsModel = memoize(buildTimeColsModel)\n  private buildSlatMetas = memoize(buildSlatMetas)\n\n  render() {\n    let { options, dateEnv, dateProfileGenerator } = this.context\n    let { props } = this\n    let { dateProfile } = props\n    let dayTableModel = this.buildTimeColsModel(dateProfile, dateProfileGenerator)\n    let splitProps = this.allDaySplitter.splitProps(props)\n    let slatMetas = this.buildSlatMetas(\n      dateProfile.slotMinTime,\n      dateProfile.slotMaxTime,\n      options.slotLabelInterval,\n      options.slotDuration,\n      dateEnv,\n    )\n    let { dayMinWidth } = options\n    let hasAttachedAxis = !dayMinWidth\n    let hasDetachedAxis = dayMinWidth\n\n    let headerContent = options.dayHeaders && (\n      <DayHeader\n        dates={dayTableModel.headerDates}\n        dateProfile={dateProfile}\n        datesRepDistinctDays\n        renderIntro={hasAttachedAxis ? this.renderHeadAxis : null}\n      />\n    )\n\n    let allDayContent = (options.allDaySlot !== false) && ((contentArg: ChunkContentCallbackArgs) => (\n      <DayTable\n        {...splitProps.allDay}\n        dateProfile={dateProfile}\n        dayTableModel={dayTableModel}\n        nextDayThreshold={options.nextDayThreshold}\n        tableMinWidth={contentArg.tableMinWidth}\n        colGroupNode={contentArg.tableColGroupNode}\n        renderRowIntro={hasAttachedAxis ? this.renderTableRowAxis : null}\n        showWeekNumbers={false}\n        expandRows={false}\n        headerAlignElRef={this.headerElRef}\n        clientWidth={contentArg.clientWidth}\n        clientHeight={contentArg.clientHeight}\n        forPrint={props.forPrint}\n        {...this.getAllDayMaxEventProps()}\n      />\n    ))\n\n    let timeGridContent = (contentArg: ChunkContentCallbackArgs) => (\n      <DayTimeCols\n        {...splitProps.timed}\n        dayTableModel={dayTableModel}\n        dateProfile={dateProfile}\n        axis={hasAttachedAxis}\n        slotDuration={options.slotDuration}\n        slatMetas={slatMetas}\n        forPrint={props.forPrint}\n        tableColGroupNode={contentArg.tableColGroupNode}\n        tableMinWidth={contentArg.tableMinWidth}\n        clientWidth={contentArg.clientWidth}\n        clientHeight={contentArg.clientHeight}\n        onSlatCoords={this.handleSlatCoords}\n        expandRows={contentArg.expandRows}\n        onScrollTopRequest={this.handleScrollTopRequest}\n      />\n    )\n\n    return hasDetachedAxis\n      ? this.renderHScrollLayout(\n        headerContent,\n        allDayContent,\n        timeGridContent,\n        dayTableModel.colCnt,\n        dayMinWidth,\n        slatMetas,\n        this.state.slatCoords,\n      )\n      : this.renderSimpleLayout(\n        headerContent,\n        allDayContent,\n        timeGridContent,\n      )\n  }\n}\n\nexport function buildTimeColsModel(dateProfile: DateProfile, dateProfileGenerator: DateProfileGenerator) {\n  let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator)\n\n  return new DayTableModel(daySeries, false)\n}\n","import { config, elementClosest, Emitter, PointerDragEvent } from '@fullcalendar/common'\n\nconfig.touchMouseIgnoreWait = 500\n\nlet ignoreMouseDepth = 0\nlet listenerCnt = 0\nlet isWindowTouchMoveCancelled = false\n\n/*\nUses a \"pointer\" abstraction, which monitors UI events for both mouse and touch.\nTracks when the pointer \"drags\" on a certain element, meaning down+move+up.\n\nAlso, tracks if there was touch-scrolling.\nAlso, can prevent touch-scrolling from happening.\nAlso, can fire pointermove events when scrolling happens underneath, even when no real pointer movement.\n\nemits:\n- pointerdown\n- pointermove\n- pointerup\n*/\nexport class PointerDragging {\n  containerEl: EventTarget\n  subjectEl: HTMLElement | null = null\n  emitter: Emitter<any>\n\n  // options that can be directly assigned by caller\n  selector: string = '' // will cause subjectEl in all emitted events to be this element\n  handleSelector: string = ''\n  shouldIgnoreMove: boolean = false\n  shouldWatchScroll: boolean = true // for simulating pointermove on scroll\n\n  // internal states\n  isDragging: boolean = false\n  isTouchDragging: boolean = false\n  wasTouchScroll: boolean = false\n  origPageX: number\n  origPageY: number\n  prevPageX: number\n  prevPageY: number\n  prevScrollX: number // at time of last pointer pageX/pageY capture\n  prevScrollY: number // \"\n\n  constructor(containerEl: EventTarget) {\n    this.containerEl = containerEl\n    this.emitter = new Emitter()\n    containerEl.addEventListener('mousedown', this.handleMouseDown as EventListener)\n    containerEl.addEventListener('touchstart', this.handleTouchStart as EventListener, { passive: true })\n    listenerCreated()\n  }\n\n  destroy() {\n    this.containerEl.removeEventListener('mousedown', this.handleMouseDown as EventListener)\n    this.containerEl.removeEventListener('touchstart', this.handleTouchStart as EventListener, { passive: true } as AddEventListenerOptions)\n    listenerDestroyed()\n  }\n\n  tryStart(ev: UIEvent): boolean {\n    let subjectEl = this.querySubjectEl(ev)\n    let downEl = ev.target as HTMLElement\n\n    if (\n      subjectEl &&\n      (!this.handleSelector || elementClosest(downEl, this.handleSelector))\n    ) {\n      this.subjectEl = subjectEl\n      this.isDragging = true // do this first so cancelTouchScroll will work\n      this.wasTouchScroll = false\n\n      return true\n    }\n\n    return false\n  }\n\n  cleanup() {\n    isWindowTouchMoveCancelled = false\n    this.isDragging = false\n    this.subjectEl = null\n    // keep wasTouchScroll around for later access\n    this.destroyScrollWatch()\n  }\n\n  querySubjectEl(ev: UIEvent): HTMLElement {\n    if (this.selector) {\n      return elementClosest(ev.target as HTMLElement, this.selector)\n    }\n    return this.containerEl as HTMLElement\n  }\n\n  // Mouse\n  // ----------------------------------------------------------------------------------------------------\n\n  handleMouseDown = (ev: MouseEvent) => {\n    if (\n      !this.shouldIgnoreMouse() &&\n      isPrimaryMouseButton(ev) &&\n      this.tryStart(ev)\n    ) {\n      let pev = this.createEventFromMouse(ev, true)\n      this.emitter.trigger('pointerdown', pev)\n      this.initScrollWatch(pev)\n\n      if (!this.shouldIgnoreMove) {\n        document.addEventListener('mousemove', this.handleMouseMove)\n      }\n\n      document.addEventListener('mouseup', this.handleMouseUp)\n    }\n  }\n\n  handleMouseMove = (ev: MouseEvent) => {\n    let pev = this.createEventFromMouse(ev)\n    this.recordCoords(pev)\n    this.emitter.trigger('pointermove', pev)\n  }\n\n  handleMouseUp = (ev: MouseEvent) => {\n    document.removeEventListener('mousemove', this.handleMouseMove)\n    document.removeEventListener('mouseup', this.handleMouseUp)\n\n    this.emitter.trigger('pointerup', this.createEventFromMouse(ev))\n\n    this.cleanup() // call last so that pointerup has access to props\n  }\n\n  shouldIgnoreMouse() {\n    return ignoreMouseDepth || this.isTouchDragging\n  }\n\n  // Touch\n  // ----------------------------------------------------------------------------------------------------\n\n  handleTouchStart = (ev: TouchEvent) => {\n    if (this.tryStart(ev)) {\n      this.isTouchDragging = true\n\n      let pev = this.createEventFromTouch(ev, true)\n      this.emitter.trigger('pointerdown', pev)\n      this.initScrollWatch(pev)\n\n      // unlike mouse, need to attach to target, not document\n      // https://stackoverflow.com/a/45760014\n      let targetEl = ev.target as HTMLElement\n\n      if (!this.shouldIgnoreMove) {\n        targetEl.addEventListener('touchmove', this.handleTouchMove)\n      }\n\n      targetEl.addEventListener('touchend', this.handleTouchEnd)\n      targetEl.addEventListener('touchcancel', this.handleTouchEnd) // treat it as a touch end\n\n      // attach a handler to get called when ANY scroll action happens on the page.\n      // this was impossible to do with normal on/off because 'scroll' doesn't bubble.\n      // http://stackoverflow.com/a/32954565/96342\n      window.addEventListener(\n        'scroll',\n        this.handleTouchScroll,\n        true, // useCapture\n      )\n    }\n  }\n\n  handleTouchMove = (ev: TouchEvent) => {\n    let pev = this.createEventFromTouch(ev)\n    this.recordCoords(pev)\n    this.emitter.trigger('pointermove', pev)\n  }\n\n  handleTouchEnd = (ev: TouchEvent) => {\n    if (this.isDragging) { // done to guard against touchend followed by touchcancel\n      let targetEl = ev.target as HTMLElement\n\n      targetEl.removeEventListener('touchmove', this.handleTouchMove)\n      targetEl.removeEventListener('touchend', this.handleTouchEnd)\n      targetEl.removeEventListener('touchcancel', this.handleTouchEnd)\n      window.removeEventListener('scroll', this.handleTouchScroll, true) // useCaptured=true\n\n      this.emitter.trigger('pointerup', this.createEventFromTouch(ev))\n\n      this.cleanup() // call last so that pointerup has access to props\n      this.isTouchDragging = false\n      startIgnoringMouse()\n    }\n  }\n\n  handleTouchScroll = () => {\n    this.wasTouchScroll = true\n  }\n\n  // can be called by user of this class, to cancel touch-based scrolling for the current drag\n  cancelTouchScroll() {\n    if (this.isDragging) {\n      isWindowTouchMoveCancelled = true\n    }\n  }\n\n  // Scrolling that simulates pointermoves\n  // ----------------------------------------------------------------------------------------------------\n\n  initScrollWatch(ev: PointerDragEvent) {\n    if (this.shouldWatchScroll) {\n      this.recordCoords(ev)\n      window.addEventListener('scroll', this.handleScroll, true) // useCapture=true\n    }\n  }\n\n  recordCoords(ev: PointerDragEvent) {\n    if (this.shouldWatchScroll) {\n      this.prevPageX = (ev as any).pageX\n      this.prevPageY = (ev as any).pageY\n      this.prevScrollX = window.pageXOffset\n      this.prevScrollY = window.pageYOffset\n    }\n  }\n\n  handleScroll = (ev: UIEvent) => {\n    if (!this.shouldIgnoreMove) {\n      let pageX = (window.pageXOffset - this.prevScrollX) + this.prevPageX\n      let pageY = (window.pageYOffset - this.prevScrollY) + this.prevPageY\n\n      this.emitter.trigger('pointermove', {\n        origEvent: ev,\n        isTouch: this.isTouchDragging,\n        subjectEl: this.subjectEl,\n        pageX,\n        pageY,\n        deltaX: pageX - this.origPageX,\n        deltaY: pageY - this.origPageY,\n      } as PointerDragEvent)\n    }\n  }\n\n  destroyScrollWatch() {\n    if (this.shouldWatchScroll) {\n      window.removeEventListener('scroll', this.handleScroll, true) // useCaptured=true\n    }\n  }\n\n  // Event Normalization\n  // ----------------------------------------------------------------------------------------------------\n\n  createEventFromMouse(ev: MouseEvent, isFirst?: boolean): PointerDragEvent {\n    let deltaX = 0\n    let deltaY = 0\n\n    // TODO: repeat code\n    if (isFirst) {\n      this.origPageX = ev.pageX\n      this.origPageY = ev.pageY\n    } else {\n      deltaX = ev.pageX - this.origPageX\n      deltaY = ev.pageY - this.origPageY\n    }\n\n    return {\n      origEvent: ev,\n      isTouch: false,\n      subjectEl: this.subjectEl,\n      pageX: ev.pageX,\n      pageY: ev.pageY,\n      deltaX,\n      deltaY,\n    }\n  }\n\n  createEventFromTouch(ev: TouchEvent, isFirst?: boolean): PointerDragEvent {\n    let touches = ev.touches\n    let pageX\n    let pageY\n    let deltaX = 0\n    let deltaY = 0\n\n    // if touch coords available, prefer,\n    // because FF would give bad ev.pageX ev.pageY\n    if (touches && touches.length) {\n      pageX = touches[0].pageX\n      pageY = touches[0].pageY\n    } else {\n      pageX = (ev as any).pageX\n      pageY = (ev as any).pageY\n    }\n\n    // TODO: repeat code\n    if (isFirst) {\n      this.origPageX = pageX\n      this.origPageY = pageY\n    } else {\n      deltaX = pageX - this.origPageX\n      deltaY = pageY - this.origPageY\n    }\n\n    return {\n      origEvent: ev,\n      isTouch: true,\n      subjectEl: this.subjectEl,\n      pageX,\n      pageY,\n      deltaX,\n      deltaY,\n    }\n  }\n}\n\n// Returns a boolean whether this was a left mouse click and no ctrl key (which means right click on Mac)\nfunction isPrimaryMouseButton(ev: MouseEvent) {\n  return ev.button === 0 && !ev.ctrlKey\n}\n\n// Ignoring fake mouse events generated by touch\n// ----------------------------------------------------------------------------------------------------\n\nfunction startIgnoringMouse() { // can be made non-class function\n  ignoreMouseDepth += 1\n\n  setTimeout(() => {\n    ignoreMouseDepth -= 1\n  }, config.touchMouseIgnoreWait)\n}\n\n// We want to attach touchmove as early as possible for Safari\n// ----------------------------------------------------------------------------------------------------\n\nfunction listenerCreated() {\n  listenerCnt += 1\n\n  if (listenerCnt === 1) {\n    window.addEventListener('touchmove', onWindowTouchMove, { passive: false })\n  }\n}\n\nfunction listenerDestroyed() {\n  listenerCnt -= 1\n\n  if (!listenerCnt) {\n    window.removeEventListener('touchmove', onWindowTouchMove, { passive: false } as AddEventListenerOptions)\n  }\n}\n\nfunction onWindowTouchMove(ev: UIEvent) {\n  if (isWindowTouchMoveCancelled) {\n    ev.preventDefault()\n  }\n}\n","import { removeElement, applyStyle, whenTransitionDone, Rect } from '@fullcalendar/common'\n\n/*\nAn effect in which an element follows the movement of a pointer across the screen.\nThe moving element is a clone of some other element.\nMust call start + handleMove + stop.\n*/\nexport class ElementMirror {\n  isVisible: boolean = false // must be explicitly enabled\n  origScreenX?: number\n  origScreenY?: number\n  deltaX?: number\n  deltaY?: number\n  sourceEl: HTMLElement | null = null\n  mirrorEl: HTMLElement | null = null\n  sourceElRect: Rect | null = null // screen coords relative to viewport\n\n  // options that can be set directly by caller\n  parentNode: HTMLElement = document.body // HIGHLY SUGGESTED to set this to sidestep ShadowDOM issues\n  zIndex: number = 9999\n  revertDuration: number = 0\n\n  start(sourceEl: HTMLElement, pageX: number, pageY: number) {\n    this.sourceEl = sourceEl\n    this.sourceElRect = this.sourceEl.getBoundingClientRect()\n    this.origScreenX = pageX - window.pageXOffset\n    this.origScreenY = pageY - window.pageYOffset\n    this.deltaX = 0\n    this.deltaY = 0\n    this.updateElPosition()\n  }\n\n  handleMove(pageX: number, pageY: number) {\n    this.deltaX = (pageX - window.pageXOffset) - this.origScreenX!\n    this.deltaY = (pageY - window.pageYOffset) - this.origScreenY!\n    this.updateElPosition()\n  }\n\n  // can be called before start\n  setIsVisible(bool: boolean) {\n    if (bool) {\n      if (!this.isVisible) {\n        if (this.mirrorEl) {\n          this.mirrorEl.style.display = ''\n        }\n\n        this.isVisible = bool // needs to happen before updateElPosition\n        this.updateElPosition() // because was not updating the position while invisible\n      }\n    } else if (this.isVisible) {\n      if (this.mirrorEl) {\n        this.mirrorEl.style.display = 'none'\n      }\n\n      this.isVisible = bool\n    }\n  }\n\n  // always async\n  stop(needsRevertAnimation: boolean, callback: () => void) {\n    let done = () => {\n      this.cleanup()\n      callback()\n    }\n\n    if (\n      needsRevertAnimation &&\n      this.mirrorEl &&\n      this.isVisible &&\n      this.revertDuration && // if 0, transition won't work\n      (this.deltaX || this.deltaY) // if same coords, transition won't work\n    ) {\n      this.doRevertAnimation(done, this.revertDuration)\n    } else {\n      setTimeout(done, 0)\n    }\n  }\n\n  doRevertAnimation(callback: () => void, revertDuration: number) {\n    let mirrorEl = this.mirrorEl!\n    let finalSourceElRect = this.sourceEl!.getBoundingClientRect() // because autoscrolling might have happened\n\n    mirrorEl.style.transition =\n      'top ' + revertDuration + 'ms,' +\n      'left ' + revertDuration + 'ms'\n\n    applyStyle(mirrorEl, {\n      left: finalSourceElRect.left,\n      top: finalSourceElRect.top,\n    })\n\n    whenTransitionDone(mirrorEl, () => {\n      mirrorEl.style.transition = ''\n      callback()\n    })\n  }\n\n  cleanup() {\n    if (this.mirrorEl) {\n      removeElement(this.mirrorEl)\n      this.mirrorEl = null\n    }\n\n    this.sourceEl = null\n  }\n\n  updateElPosition() {\n    if (this.sourceEl && this.isVisible) {\n      applyStyle(this.getMirrorEl(), {\n        left: this.sourceElRect!.left + this.deltaX!,\n        top: this.sourceElRect!.top + this.deltaY!,\n      })\n    }\n  }\n\n  getMirrorEl(): HTMLElement {\n    let sourceElRect = this.sourceElRect!\n    let mirrorEl = this.mirrorEl\n\n    if (!mirrorEl) {\n      mirrorEl = this.mirrorEl = this.sourceEl!.cloneNode(true) as HTMLElement // cloneChildren=true\n\n      // we don't want long taps or any mouse interaction causing selection/menus.\n      // would use preventSelection(), but that prevents selectstart, causing problems.\n      mirrorEl.classList.add('fc-unselectable')\n\n      mirrorEl.classList.add('fc-event-dragging')\n\n      applyStyle(mirrorEl, {\n        position: 'fixed',\n        zIndex: this.zIndex,\n        visibility: '', // in case original element was hidden by the drag effect\n        boxSizing: 'border-box', // for easy width/height\n        width: sourceElRect.right - sourceElRect.left, // explicit height in case there was a 'right' value\n        height: sourceElRect.bottom - sourceElRect.top, // explicit width in case there was a 'bottom' value\n        right: 'auto', // erase and set width instead\n        bottom: 'auto', // erase and set height instead\n        margin: 0,\n      })\n\n      this.parentNode.appendChild(mirrorEl)\n    }\n\n    return mirrorEl\n  }\n}\n","import { Rect, ScrollController } from '@fullcalendar/common'\n\n/*\nIs a cache for a given element's scroll information (all the info that ScrollController stores)\nin addition the \"client rectangle\" of the element.. the area within the scrollbars.\n\nThe cache can be in one of two modes:\n- doesListening:false - ignores when the container is scrolled by someone else\n- doesListening:true - watch for scrolling and update the cache\n*/\nexport abstract class ScrollGeomCache extends ScrollController {\n  clientRect: Rect\n  origScrollTop: number\n  origScrollLeft: number\n\n  protected scrollController: ScrollController\n  protected doesListening: boolean\n  protected scrollTop: number\n  protected scrollLeft: number\n  protected scrollWidth: number\n  protected scrollHeight: number\n  protected clientWidth: number\n  protected clientHeight: number\n\n  constructor(scrollController: ScrollController, doesListening: boolean) {\n    super()\n    this.scrollController = scrollController\n    this.doesListening = doesListening\n    this.scrollTop = this.origScrollTop = scrollController.getScrollTop()\n    this.scrollLeft = this.origScrollLeft = scrollController.getScrollLeft()\n    this.scrollWidth = scrollController.getScrollWidth()\n    this.scrollHeight = scrollController.getScrollHeight()\n    this.clientWidth = scrollController.getClientWidth()\n    this.clientHeight = scrollController.getClientHeight()\n    this.clientRect = this.computeClientRect() // do last in case it needs cached values\n\n    if (this.doesListening) {\n      this.getEventTarget().addEventListener('scroll', this.handleScroll)\n    }\n  }\n\n  abstract getEventTarget(): EventTarget\n  abstract computeClientRect(): Rect\n\n  destroy() {\n    if (this.doesListening) {\n      this.getEventTarget().removeEventListener('scroll', this.handleScroll)\n    }\n  }\n\n  handleScroll = () => {\n    this.scrollTop = this.scrollController.getScrollTop()\n    this.scrollLeft = this.scrollController.getScrollLeft()\n    this.handleScrollChange()\n  }\n\n  getScrollTop() {\n    return this.scrollTop\n  }\n\n  getScrollLeft() {\n    return this.scrollLeft\n  }\n\n  setScrollTop(top: number) {\n    this.scrollController.setScrollTop(top)\n\n    if (!this.doesListening) {\n      // we are not relying on the element to normalize out-of-bounds scroll values\n      // so we need to sanitize ourselves\n      this.scrollTop = Math.max(Math.min(top, this.getMaxScrollTop()), 0)\n\n      this.handleScrollChange()\n    }\n  }\n\n  setScrollLeft(top: number) {\n    this.scrollController.setScrollLeft(top)\n\n    if (!this.doesListening) {\n      // we are not relying on the element to normalize out-of-bounds scroll values\n      // so we need to sanitize ourselves\n      this.scrollLeft = Math.max(Math.min(top, this.getMaxScrollLeft()), 0)\n\n      this.handleScrollChange()\n    }\n  }\n\n  getClientWidth() {\n    return this.clientWidth\n  }\n\n  getClientHeight() {\n    return this.clientHeight\n  }\n\n  getScrollWidth() {\n    return this.scrollWidth\n  }\n\n  getScrollHeight() {\n    return this.scrollHeight\n  }\n\n  handleScrollChange() {\n  }\n}\n","import { computeInnerRect, ElementScrollController } from '@fullcalendar/common'\nimport { ScrollGeomCache } from './ScrollGeomCache'\n\nexport class ElementScrollGeomCache extends ScrollGeomCache {\n  constructor(el: HTMLElement, doesListening: boolean) {\n    super(new ElementScrollController(el), doesListening)\n  }\n\n  getEventTarget(): EventTarget {\n    return (this.scrollController as ElementScrollController).el\n  }\n\n  computeClientRect() {\n    return computeInnerRect((this.scrollController as ElementScrollController).el)\n  }\n}\n","import { Rect, WindowScrollController } from '@fullcalendar/common'\nimport { ScrollGeomCache } from './ScrollGeomCache'\n\nexport class WindowScrollGeomCache extends ScrollGeomCache {\n  constructor(doesListening: boolean) {\n    super(new WindowScrollController(), doesListening)\n  }\n\n  getEventTarget(): EventTarget {\n    return window\n  }\n\n  computeClientRect(): Rect {\n    return {\n      left: this.scrollLeft,\n      right: this.scrollLeft + this.clientWidth,\n      top: this.scrollTop,\n      bottom: this.scrollTop + this.clientHeight,\n    }\n  }\n\n  // the window is the only scroll object that changes it's rectangle relative\n  // to the document's topleft as it scrolls\n  handleScrollChange() {\n    this.clientRect = this.computeClientRect()\n  }\n}\n","import { getElRoot } from '@fullcalendar/common'\nimport { ScrollGeomCache } from '../ScrollGeomCache'\nimport { ElementScrollGeomCache } from '../ElementScrollGeomCache'\nimport { WindowScrollGeomCache } from '../WindowScrollGeomCache'\n\ninterface Edge {\n  scrollCache: ScrollGeomCache\n  name: 'top' | 'left' | 'right' | 'bottom'\n  distance: number // how many pixels the current pointer is from the edge\n}\n\n// If available we are using native \"performance\" API instead of \"Date\"\n// Read more about it on MDN:\n// https://developer.mozilla.org/en-US/docs/Web/API/Performance\nconst getTime = typeof performance === 'function' ? (performance as any).now : Date.now\n\n/*\nFor a pointer interaction, automatically scrolls certain scroll containers when the pointer\napproaches the edge.\n\nThe caller must call start + handleMove + stop.\n*/\nexport class AutoScroller {\n  // options that can be set by caller\n  isEnabled: boolean = true\n  scrollQuery: (Window | string)[] = [window, '.fc-scroller']\n  edgeThreshold: number = 50 // pixels\n  maxVelocity: number = 300 // pixels per second\n\n  // internal state\n  pointerScreenX: number | null = null\n  pointerScreenY: number | null = null\n  isAnimating: boolean = false\n  scrollCaches: ScrollGeomCache[] | null = null\n  msSinceRequest?: number\n\n  // protect against the initial pointerdown being too close to an edge and starting the scroll\n  everMovedUp: boolean = false\n  everMovedDown: boolean = false\n  everMovedLeft: boolean = false\n  everMovedRight: boolean = false\n\n  start(pageX: number, pageY: number, scrollStartEl: HTMLElement) {\n    if (this.isEnabled) {\n      this.scrollCaches = this.buildCaches(scrollStartEl)\n      this.pointerScreenX = null\n      this.pointerScreenY = null\n      this.everMovedUp = false\n      this.everMovedDown = false\n      this.everMovedLeft = false\n      this.everMovedRight = false\n      this.handleMove(pageX, pageY)\n    }\n  }\n\n  handleMove(pageX: number, pageY: number) {\n    if (this.isEnabled) {\n      let pointerScreenX = pageX - window.pageXOffset\n      let pointerScreenY = pageY - window.pageYOffset\n\n      let yDelta = this.pointerScreenY === null ? 0 : pointerScreenY - this.pointerScreenY\n      let xDelta = this.pointerScreenX === null ? 0 : pointerScreenX - this.pointerScreenX\n\n      if (yDelta < 0) {\n        this.everMovedUp = true\n      } else if (yDelta > 0) {\n        this.everMovedDown = true\n      }\n\n      if (xDelta < 0) {\n        this.everMovedLeft = true\n      } else if (xDelta > 0) {\n        this.everMovedRight = true\n      }\n\n      this.pointerScreenX = pointerScreenX\n      this.pointerScreenY = pointerScreenY\n\n      if (!this.isAnimating) {\n        this.isAnimating = true\n        this.requestAnimation(getTime())\n      }\n    }\n  }\n\n  stop() {\n    if (this.isEnabled) {\n      this.isAnimating = false // will stop animation\n\n      for (let scrollCache of this.scrollCaches!) {\n        scrollCache.destroy()\n      }\n\n      this.scrollCaches = null\n    }\n  }\n\n  requestAnimation(now: number) {\n    this.msSinceRequest = now\n    requestAnimationFrame(this.animate)\n  }\n\n  private animate = () => {\n    if (this.isAnimating) { // wasn't cancelled between animation calls\n      let edge = this.computeBestEdge(\n        this.pointerScreenX! + window.pageXOffset,\n        this.pointerScreenY! + window.pageYOffset,\n      )\n\n      if (edge) {\n        let now = getTime()\n        this.handleSide(edge, (now - this.msSinceRequest!) / 1000)\n        this.requestAnimation(now)\n      } else {\n        this.isAnimating = false // will stop animation\n      }\n    }\n  }\n\n  private handleSide(edge: Edge, seconds: number) {\n    let { scrollCache } = edge\n    let { edgeThreshold } = this\n    let invDistance = edgeThreshold - edge.distance\n    let velocity = // the closer to the edge, the faster we scroll\n      ((invDistance * invDistance) / (edgeThreshold * edgeThreshold)) * // quadratic\n      this.maxVelocity * seconds\n    let sign = 1\n\n    switch (edge.name) {\n      case 'left':\n        sign = -1\n        // falls through\n      case 'right':\n        scrollCache.setScrollLeft(scrollCache.getScrollLeft() + velocity * sign)\n        break\n\n      case 'top':\n        sign = -1\n        // falls through\n      case 'bottom':\n        scrollCache.setScrollTop(scrollCache.getScrollTop() + velocity * sign)\n        break\n    }\n  }\n\n  // left/top are relative to document topleft\n  private computeBestEdge(left: number, top: number): Edge | null {\n    let { edgeThreshold } = this\n    let bestSide: Edge | null = null\n\n    for (let scrollCache of this.scrollCaches!) {\n      let rect = scrollCache.clientRect\n      let leftDist = left - rect.left\n      let rightDist = rect.right - left\n      let topDist = top - rect.top\n      let bottomDist = rect.bottom - top\n\n      // completely within the rect?\n      if (leftDist >= 0 && rightDist >= 0 && topDist >= 0 && bottomDist >= 0) {\n        if (\n          topDist <= edgeThreshold && this.everMovedUp && scrollCache.canScrollUp() &&\n          (!bestSide || bestSide.distance > topDist)\n        ) {\n          bestSide = { scrollCache, name: 'top', distance: topDist }\n        }\n\n        if (\n          bottomDist <= edgeThreshold && this.everMovedDown && scrollCache.canScrollDown() &&\n          (!bestSide || bestSide.distance > bottomDist)\n        ) {\n          bestSide = { scrollCache, name: 'bottom', distance: bottomDist }\n        }\n\n        if (\n          leftDist <= edgeThreshold && this.everMovedLeft && scrollCache.canScrollLeft() &&\n          (!bestSide || bestSide.distance > leftDist)\n        ) {\n          bestSide = { scrollCache, name: 'left', distance: leftDist }\n        }\n\n        if (\n          rightDist <= edgeThreshold && this.everMovedRight && scrollCache.canScrollRight() &&\n          (!bestSide || bestSide.distance > rightDist)\n        ) {\n          bestSide = { scrollCache, name: 'right', distance: rightDist }\n        }\n      }\n    }\n\n    return bestSide\n  }\n\n  private buildCaches(scrollStartEl: HTMLElement) {\n    return this.queryScrollEls(scrollStartEl).map((el) => {\n      if (el === window) {\n        return new WindowScrollGeomCache(false) // false = don't listen to user-generated scrolls\n      }\n      return new ElementScrollGeomCache(el, false) // false = don't listen to user-generated scrolls\n    })\n  }\n\n  private queryScrollEls(scrollStartEl: HTMLElement) {\n    let els = []\n\n    for (let query of this.scrollQuery) {\n      if (typeof query === 'object') {\n        els.push(query)\n      } else {\n        els.push(...Array.prototype.slice.call(\n          getElRoot(scrollStartEl).querySelectorAll(query),\n        ))\n      }\n    }\n\n    return els\n  }\n}\n","import {\n  PointerDragEvent,\n  preventSelection,\n  allowSelection,\n  preventContextMenu,\n  allowContextMenu,\n  ElementDragging,\n} from '@fullcalendar/common'\nimport { PointerDragging } from './PointerDragging'\nimport { ElementMirror } from './ElementMirror'\nimport { AutoScroller } from './AutoScroller'\n\n/*\nMonitors dragging on an element. Has a number of high-level features:\n- minimum distance required before dragging\n- minimum wait time (\"delay\") before dragging\n- a mirror element that follows the pointer\n*/\nexport class FeaturefulElementDragging extends ElementDragging {\n  pointer: PointerDragging\n  mirror: ElementMirror\n  autoScroller: AutoScroller\n\n  // options that can be directly set by caller\n  // the caller can also set the PointerDragging's options as well\n  delay: number | null = null\n  minDistance: number = 0\n  touchScrollAllowed: boolean = true // prevents drag from starting and blocks scrolling during drag\n\n  mirrorNeedsRevert: boolean = false\n  isInteracting: boolean = false // is the user validly moving the pointer? lasts until pointerup\n  isDragging: boolean = false // is it INTENTFULLY dragging? lasts until after revert animation\n  isDelayEnded: boolean = false\n  isDistanceSurpassed: boolean = false\n  delayTimeoutId: number | null = null\n\n  constructor(private containerEl: HTMLElement, selector?: string) {\n    super(containerEl)\n\n    let pointer = this.pointer = new PointerDragging(containerEl)\n    pointer.emitter.on('pointerdown', this.onPointerDown)\n    pointer.emitter.on('pointermove', this.onPointerMove)\n    pointer.emitter.on('pointerup', this.onPointerUp)\n\n    if (selector) {\n      pointer.selector = selector\n    }\n\n    this.mirror = new ElementMirror()\n    this.autoScroller = new AutoScroller()\n  }\n\n  destroy() {\n    this.pointer.destroy()\n\n    // HACK: simulate a pointer-up to end the current drag\n    // TODO: fire 'dragend' directly and stop interaction. discourage use of pointerup event (b/c might not fire)\n    this.onPointerUp({} as any)\n  }\n\n  onPointerDown = (ev: PointerDragEvent) => {\n    if (!this.isDragging) { // so new drag doesn't happen while revert animation is going\n      this.isInteracting = true\n      this.isDelayEnded = false\n      this.isDistanceSurpassed = false\n\n      preventSelection(document.body)\n      preventContextMenu(document.body)\n\n      // prevent links from being visited if there's an eventual drag.\n      // also prevents selection in older browsers (maybe?).\n      // not necessary for touch, besides, browser would complain about passiveness.\n      if (!ev.isTouch) {\n        ev.origEvent.preventDefault()\n      }\n\n      this.emitter.trigger('pointerdown', ev)\n\n      if (\n        this.isInteracting && // not destroyed via pointerdown handler\n        !this.pointer.shouldIgnoreMove\n      ) {\n        // actions related to initiating dragstart+dragmove+dragend...\n\n        this.mirror.setIsVisible(false) // reset. caller must set-visible\n        this.mirror.start(ev.subjectEl as HTMLElement, ev.pageX, ev.pageY) // must happen on first pointer down\n\n        this.startDelay(ev)\n\n        if (!this.minDistance) {\n          this.handleDistanceSurpassed(ev)\n        }\n      }\n    }\n  }\n\n  onPointerMove = (ev: PointerDragEvent) => {\n    if (this.isInteracting) {\n      this.emitter.trigger('pointermove', ev)\n\n      if (!this.isDistanceSurpassed) {\n        let minDistance = this.minDistance\n        let distanceSq // current distance from the origin, squared\n        let { deltaX, deltaY } = ev\n\n        distanceSq = deltaX * deltaX + deltaY * deltaY\n        if (distanceSq >= minDistance * minDistance) { // use pythagorean theorem\n          this.handleDistanceSurpassed(ev)\n        }\n      }\n\n      if (this.isDragging) {\n        // a real pointer move? (not one simulated by scrolling)\n        if (ev.origEvent.type !== 'scroll') {\n          this.mirror.handleMove(ev.pageX, ev.pageY)\n          this.autoScroller.handleMove(ev.pageX, ev.pageY)\n        }\n\n        this.emitter.trigger('dragmove', ev)\n      }\n    }\n  }\n\n  onPointerUp = (ev: PointerDragEvent) => {\n    if (this.isInteracting) {\n      this.isInteracting = false\n\n      allowSelection(document.body)\n      allowContextMenu(document.body)\n\n      this.emitter.trigger('pointerup', ev) // can potentially set mirrorNeedsRevert\n\n      if (this.isDragging) {\n        this.autoScroller.stop()\n        this.tryStopDrag(ev) // which will stop the mirror\n      }\n\n      if (this.delayTimeoutId) {\n        clearTimeout(this.delayTimeoutId)\n        this.delayTimeoutId = null\n      }\n    }\n  }\n\n  startDelay(ev: PointerDragEvent) {\n    if (typeof this.delay === 'number') {\n      this.delayTimeoutId = setTimeout(() => {\n        this.delayTimeoutId = null\n        this.handleDelayEnd(ev)\n      }, this.delay) as any // not assignable to number!\n    } else {\n      this.handleDelayEnd(ev)\n    }\n  }\n\n  handleDelayEnd(ev: PointerDragEvent) {\n    this.isDelayEnded = true\n    this.tryStartDrag(ev)\n  }\n\n  handleDistanceSurpassed(ev: PointerDragEvent) {\n    this.isDistanceSurpassed = true\n    this.tryStartDrag(ev)\n  }\n\n  tryStartDrag(ev: PointerDragEvent) {\n    if (this.isDelayEnded && this.isDistanceSurpassed) {\n      if (!this.pointer.wasTouchScroll || this.touchScrollAllowed) {\n        this.isDragging = true\n        this.mirrorNeedsRevert = false\n\n        this.autoScroller.start(ev.pageX, ev.pageY, this.containerEl)\n        this.emitter.trigger('dragstart', ev)\n\n        if (this.touchScrollAllowed === false) {\n          this.pointer.cancelTouchScroll()\n        }\n      }\n    }\n  }\n\n  tryStopDrag(ev: PointerDragEvent) {\n    // .stop() is ALWAYS asynchronous, which we NEED because we want all pointerup events\n    // that come from the document to fire beforehand. much more convenient this way.\n    this.mirror.stop(\n      this.mirrorNeedsRevert,\n      this.stopDrag.bind(this, ev), // bound with args\n    )\n  }\n\n  stopDrag(ev: PointerDragEvent) {\n    this.isDragging = false\n    this.emitter.trigger('dragend', ev)\n  }\n\n  // fill in the implementations...\n\n  setIgnoreMove(bool: boolean) {\n    this.pointer.shouldIgnoreMove = bool\n  }\n\n  setMirrorIsVisible(bool: boolean) {\n    this.mirror.setIsVisible(bool)\n  }\n\n  setMirrorNeedsRevert(bool: boolean) {\n    this.mirrorNeedsRevert = bool\n  }\n\n  setAutoScrollEnabled(bool: boolean) {\n    this.autoScroller.isEnabled = bool\n  }\n}\n","import {\n  getClippingParents, computeRect,\n  pointInsideRect, Rect,\n} from '@fullcalendar/common'\nimport { ElementScrollGeomCache } from './ElementScrollGeomCache'\n\n/*\nWhen this class is instantiated, it records the offset of an element (relative to the document topleft),\nand continues to monitor scrolling, updating the cached coordinates if it needs to.\nDoes not access the DOM after instantiation, so highly performant.\n\nAlso keeps track of all scrolling/overflow:hidden containers that are parents of the given element\nand an determine if a given point is inside the combined clipping rectangle.\n*/\nexport class OffsetTracker { // ElementOffsetTracker\n  scrollCaches: ElementScrollGeomCache[]\n  origRect: Rect\n\n  constructor(el: HTMLElement) {\n    this.origRect = computeRect(el)\n\n    // will work fine for divs that have overflow:hidden\n    this.scrollCaches = getClippingParents(el).map(\n      (scrollEl) => new ElementScrollGeomCache(scrollEl, true), // listen=true\n    )\n  }\n\n  destroy() {\n    for (let scrollCache of this.scrollCaches) {\n      scrollCache.destroy()\n    }\n  }\n\n  computeLeft() {\n    let left = this.origRect.left\n\n    for (let scrollCache of this.scrollCaches) {\n      left += scrollCache.origScrollLeft - scrollCache.getScrollLeft()\n    }\n\n    return left\n  }\n\n  computeTop() {\n    let top = this.origRect.top\n\n    for (let scrollCache of this.scrollCaches) {\n      top += scrollCache.origScrollTop - scrollCache.getScrollTop()\n    }\n\n    return top\n  }\n\n  isWithinClipping(pageX: number, pageY: number): boolean {\n    let point = { left: pageX, top: pageY }\n\n    for (let scrollCache of this.scrollCaches) {\n      if (\n        !isIgnoredClipping(scrollCache.getEventTarget()) &&\n        !pointInsideRect(point, scrollCache.clientRect)\n      ) {\n        return false\n      }\n    }\n\n    return true\n  }\n}\n\n// certain clipping containers should never constrain interactions, like <html> and <body>\n// https://github.com/fullcalendar/fullcalendar/issues/3615\nfunction isIgnoredClipping(node: EventTarget) {\n  let tagName = (node as HTMLElement).tagName\n\n  return tagName === 'HTML' || tagName === 'BODY'\n}\n","import {\n  Emitter, PointerDragEvent,\n  isDateSpansEqual,\n  computeRect,\n  constrainPoint, intersectRects, getRectCenter, diffPoints, Point,\n  rangeContainsRange,\n  Hit,\n  InteractionSettingsStore,\n  mapHash,\n  ElementDragging,\n} from '@fullcalendar/common'\nimport { OffsetTracker } from '../OffsetTracker'\n\n/*\nTracks movement over multiple droppable areas (aka \"hits\")\nthat exist in one or more DateComponents.\nRelies on an existing draggable.\n\nemits:\n- pointerdown\n- dragstart\n- hitchange - fires initially, even if not over a hit\n- pointerup\n- (hitchange - again, to null, if ended over a hit)\n- dragend\n*/\nexport class HitDragging {\n  droppableStore: InteractionSettingsStore\n  dragging: ElementDragging\n  emitter: Emitter<any>\n\n  // options that can be set by caller\n  useSubjectCenter: boolean = false\n  requireInitial: boolean = true // if doesn't start out on a hit, won't emit any events\n\n  // internal state\n  offsetTrackers: { [componentUid: string]: OffsetTracker }\n  initialHit: Hit | null = null\n  movingHit: Hit | null = null\n  finalHit: Hit | null = null // won't ever be populated if shouldIgnoreMove\n  coordAdjust?: Point\n\n  constructor(dragging: ElementDragging, droppableStore: InteractionSettingsStore) {\n    this.droppableStore = droppableStore\n\n    dragging.emitter.on('pointerdown', this.handlePointerDown)\n    dragging.emitter.on('dragstart', this.handleDragStart)\n    dragging.emitter.on('dragmove', this.handleDragMove)\n    dragging.emitter.on('pointerup', this.handlePointerUp)\n    dragging.emitter.on('dragend', this.handleDragEnd)\n\n    this.dragging = dragging\n    this.emitter = new Emitter()\n  }\n\n  handlePointerDown = (ev: PointerDragEvent) => {\n    let { dragging } = this\n\n    this.initialHit = null\n    this.movingHit = null\n    this.finalHit = null\n\n    this.prepareHits()\n    this.processFirstCoord(ev)\n\n    if (this.initialHit || !this.requireInitial) {\n      dragging.setIgnoreMove(false)\n\n      // TODO: fire this before computing processFirstCoord, so listeners can cancel. this gets fired by almost every handler :(\n      this.emitter.trigger('pointerdown', ev)\n    } else {\n      dragging.setIgnoreMove(true)\n    }\n  }\n\n  // sets initialHit\n  // sets coordAdjust\n  processFirstCoord(ev: PointerDragEvent) {\n    let origPoint = { left: ev.pageX, top: ev.pageY }\n    let adjustedPoint = origPoint\n    let subjectEl = ev.subjectEl\n    let subjectRect\n\n    if (subjectEl instanceof HTMLElement) { // i.e. not a Document/ShadowRoot\n      subjectRect = computeRect(subjectEl)\n      adjustedPoint = constrainPoint(adjustedPoint, subjectRect)\n    }\n\n    let initialHit = this.initialHit = this.queryHitForOffset(adjustedPoint.left, adjustedPoint.top)\n    if (initialHit) {\n      if (this.useSubjectCenter && subjectRect) {\n        let slicedSubjectRect = intersectRects(subjectRect, initialHit.rect)\n        if (slicedSubjectRect) {\n          adjustedPoint = getRectCenter(slicedSubjectRect)\n        }\n      }\n\n      this.coordAdjust = diffPoints(adjustedPoint, origPoint)\n    } else {\n      this.coordAdjust = { left: 0, top: 0 }\n    }\n  }\n\n  handleDragStart = (ev: PointerDragEvent) => {\n    this.emitter.trigger('dragstart', ev)\n    this.handleMove(ev, true) // force = fire even if initially null\n  }\n\n  handleDragMove = (ev: PointerDragEvent) => {\n    this.emitter.trigger('dragmove', ev)\n    this.handleMove(ev)\n  }\n\n  handlePointerUp = (ev: PointerDragEvent) => {\n    this.releaseHits()\n    this.emitter.trigger('pointerup', ev)\n  }\n\n  handleDragEnd = (ev: PointerDragEvent) => {\n    if (this.movingHit) {\n      this.emitter.trigger('hitupdate', null, true, ev)\n    }\n\n    this.finalHit = this.movingHit\n    this.movingHit = null\n    this.emitter.trigger('dragend', ev)\n  }\n\n  handleMove(ev: PointerDragEvent, forceHandle?: boolean) {\n    let hit = this.queryHitForOffset(\n      ev.pageX + this.coordAdjust!.left,\n      ev.pageY + this.coordAdjust!.top,\n    )\n\n    if (forceHandle || !isHitsEqual(this.movingHit, hit)) {\n      this.movingHit = hit\n      this.emitter.trigger('hitupdate', hit, false, ev)\n    }\n  }\n\n  prepareHits() {\n    this.offsetTrackers = mapHash(this.droppableStore, (interactionSettings) => {\n      interactionSettings.component.prepareHits()\n      return new OffsetTracker(interactionSettings.el)\n    })\n  }\n\n  releaseHits() {\n    let { offsetTrackers } = this\n\n    for (let id in offsetTrackers) {\n      offsetTrackers[id].destroy()\n    }\n\n    this.offsetTrackers = {}\n  }\n\n  queryHitForOffset(offsetLeft: number, offsetTop: number): Hit | null {\n    let { droppableStore, offsetTrackers } = this\n    let bestHit: Hit | null = null\n\n    for (let id in droppableStore) {\n      let component = droppableStore[id].component\n      let offsetTracker = offsetTrackers[id]\n\n      if (\n        offsetTracker && // wasn't destroyed mid-drag\n        offsetTracker.isWithinClipping(offsetLeft, offsetTop)\n      ) {\n        let originLeft = offsetTracker.computeLeft()\n        let originTop = offsetTracker.computeTop()\n        let positionLeft = offsetLeft - originLeft\n        let positionTop = offsetTop - originTop\n        let { origRect } = offsetTracker\n        let width = origRect.right - origRect.left\n        let height = origRect.bottom - origRect.top\n\n        if (\n          // must be within the element's bounds\n          positionLeft >= 0 && positionLeft < width &&\n          positionTop >= 0 && positionTop < height\n        ) {\n          let hit = component.queryHit(positionLeft, positionTop, width, height)\n          if (\n            hit && (\n              // make sure the hit is within activeRange, meaning it's not a dead cell\n              rangeContainsRange(hit.dateProfile.activeRange, hit.dateSpan.range)\n            ) &&\n            (!bestHit || hit.layer > bestHit.layer)\n          ) {\n            hit.componentId = id\n            hit.context = component.context\n\n            // TODO: better way to re-orient rectangle\n            hit.rect.left += originLeft\n            hit.rect.right += originLeft\n            hit.rect.top += originTop\n            hit.rect.bottom += originTop\n\n            bestHit = hit\n          }\n        }\n      }\n    }\n\n    return bestHit\n  }\n}\n\nexport function isHitsEqual(hit0: Hit | null, hit1: Hit | null): boolean {\n  if (!hit0 && !hit1) {\n    return true\n  }\n\n  if (Boolean(hit0) !== Boolean(hit1)) {\n    return false\n  }\n\n  return isDateSpansEqual(hit0!.dateSpan, hit1!.dateSpan)\n}\n","import { DateSpan, CalendarContext, DatePointApi, DateEnv, ViewApi, EventApi } from '@fullcalendar/common'\nimport { __assign } from 'tslib'\n\nexport interface DropArg extends DatePointApi {\n  draggedEl: HTMLElement\n  jsEvent: MouseEvent\n  view: ViewApi\n}\n\nexport type EventReceiveArg = EventReceiveLeaveArg\nexport type EventLeaveArg = EventReceiveLeaveArg\nexport interface EventReceiveLeaveArg { // will this become public?\n  draggedEl: HTMLElement\n  event: EventApi\n  relatedEvents: EventApi[]\n  revert: () => void\n  view: ViewApi\n}\n\nexport function buildDatePointApiWithContext(dateSpan: DateSpan, context: CalendarContext) {\n  let props = {} as DatePointApi\n\n  for (let transform of context.pluginHooks.datePointTransforms) {\n    __assign(props, transform(dateSpan, context))\n  }\n\n  __assign(props, buildDatePointApi(dateSpan, context.dateEnv))\n\n  return props\n}\n\nexport function buildDatePointApi(span: DateSpan, dateEnv: DateEnv): DatePointApi {\n  return {\n    date: dateEnv.toDate(span.range.start),\n    dateStr: dateEnv.formatIso(span.range.start, { omitTime: span.allDay }),\n    allDay: span.allDay,\n  }\n}\n","import {\n  PointerDragEvent, Interaction, InteractionSettings, interactionSettingsToStore,\n  DatePointApi,\n  ViewApi,\n} from '@fullcalendar/common'\nimport { FeaturefulElementDragging } from '../dnd/FeaturefulElementDragging'\nimport { HitDragging, isHitsEqual } from './HitDragging'\nimport { buildDatePointApiWithContext } from '../utils'\n\nexport interface DateClickArg extends DatePointApi {\n  dayEl: HTMLElement\n  jsEvent: MouseEvent\n  view: ViewApi\n}\n\n/*\nMonitors when the user clicks on a specific date/time of a component.\nA pointerdown+pointerup on the same \"hit\" constitutes a click.\n*/\nexport class DateClicking extends Interaction {\n  dragging: FeaturefulElementDragging\n  hitDragging: HitDragging\n\n  constructor(settings: InteractionSettings) {\n    super(settings)\n\n    // we DO want to watch pointer moves because otherwise finalHit won't get populated\n    this.dragging = new FeaturefulElementDragging(settings.el)\n    this.dragging.autoScroller.isEnabled = false\n\n    let hitDragging = this.hitDragging = new HitDragging(this.dragging, interactionSettingsToStore(settings))\n    hitDragging.emitter.on('pointerdown', this.handlePointerDown)\n    hitDragging.emitter.on('dragend', this.handleDragEnd)\n  }\n\n  destroy() {\n    this.dragging.destroy()\n  }\n\n  handlePointerDown = (pev: PointerDragEvent) => {\n    let { dragging } = this\n    let downEl = pev.origEvent.target as HTMLElement\n\n    // do this in pointerdown (not dragend) because DOM might be mutated by the time dragend is fired\n    dragging.setIgnoreMove(\n      !this.component.isValidDateDownEl(downEl),\n    )\n  }\n\n  // won't even fire if moving was ignored\n  handleDragEnd = (ev: PointerDragEvent) => {\n    let { component } = this\n    let { pointer } = this.dragging\n\n    if (!pointer.wasTouchScroll) {\n      let { initialHit, finalHit } = this.hitDragging\n\n      if (initialHit && finalHit && isHitsEqual(initialHit, finalHit)) {\n        let { context } = component\n        let arg: DateClickArg = {\n          ...buildDatePointApiWithContext(initialHit.dateSpan, context),\n          dayEl: initialHit.dayEl,\n          jsEvent: ev.origEvent as MouseEvent,\n          view: context.viewApi || context.calendarApi.view,\n        }\n\n        context.emitter.trigger('dateClick', arg)\n      }\n    }\n  }\n}\n","import {\n  compareNumbers, enableCursor, disableCursor, DateComponent, Hit,\n  DateSpan, PointerDragEvent, dateSelectionJoinTransformer,\n  Interaction, InteractionSettings, interactionSettingsToStore,\n  triggerDateSelect, isDateSelectionValid,\n} from '@fullcalendar/common'\nimport { __assign } from 'tslib'\nimport { HitDragging } from './HitDragging'\nimport { FeaturefulElementDragging } from '../dnd/FeaturefulElementDragging'\n\n/*\nTracks when the user selects a portion of time of a component,\nconstituted by a drag over date cells, with a possible delay at the beginning of the drag.\n*/\nexport class DateSelecting extends Interaction {\n  dragging: FeaturefulElementDragging\n  hitDragging: HitDragging\n  dragSelection: DateSpan | null = null\n\n  constructor(settings: InteractionSettings) {\n    super(settings)\n    let { component } = settings\n    let { options } = component.context\n\n    let dragging = this.dragging = new FeaturefulElementDragging(settings.el)\n    dragging.touchScrollAllowed = false\n    dragging.minDistance = options.selectMinDistance || 0\n    dragging.autoScroller.isEnabled = options.dragScroll\n\n    let hitDragging = this.hitDragging = new HitDragging(this.dragging, interactionSettingsToStore(settings))\n    hitDragging.emitter.on('pointerdown', this.handlePointerDown)\n    hitDragging.emitter.on('dragstart', this.handleDragStart)\n    hitDragging.emitter.on('hitupdate', this.handleHitUpdate)\n    hitDragging.emitter.on('pointerup', this.handlePointerUp)\n  }\n\n  destroy() {\n    this.dragging.destroy()\n  }\n\n  handlePointerDown = (ev: PointerDragEvent) => {\n    let { component, dragging } = this\n    let { options } = component.context\n\n    let canSelect = options.selectable &&\n      component.isValidDateDownEl(ev.origEvent.target as HTMLElement)\n\n    // don't bother to watch expensive moves if component won't do selection\n    dragging.setIgnoreMove(!canSelect)\n\n    // if touch, require user to hold down\n    dragging.delay = ev.isTouch ? getComponentTouchDelay(component) : null\n  }\n\n  handleDragStart = (ev: PointerDragEvent) => {\n    this.component.context.calendarApi.unselect(ev) // unselect previous selections\n  }\n\n  handleHitUpdate = (hit: Hit | null, isFinal: boolean) => {\n    let { context } = this.component\n    let dragSelection: DateSpan | null = null\n    let isInvalid = false\n\n    if (hit) {\n      let initialHit = this.hitDragging.initialHit!\n      let disallowed = hit.componentId === initialHit.componentId\n        && this.isHitComboAllowed\n        && !this.isHitComboAllowed(initialHit, hit)\n\n      if (!disallowed) {\n        dragSelection = joinHitsIntoSelection(\n          initialHit,\n          hit,\n          context.pluginHooks.dateSelectionTransformers,\n        )\n      }\n\n      if (!dragSelection || !isDateSelectionValid(dragSelection, hit.dateProfile, context)) {\n        isInvalid = true\n        dragSelection = null\n      }\n    }\n\n    if (dragSelection) {\n      context.dispatch({ type: 'SELECT_DATES', selection: dragSelection })\n    } else if (!isFinal) { // only unselect if moved away while dragging\n      context.dispatch({ type: 'UNSELECT_DATES' })\n    }\n\n    if (!isInvalid) {\n      enableCursor()\n    } else {\n      disableCursor()\n    }\n\n    if (!isFinal) {\n      this.dragSelection = dragSelection // only clear if moved away from all hits while dragging\n    }\n  }\n\n  handlePointerUp = (pev: PointerDragEvent) => {\n    if (this.dragSelection) {\n      // selection is already rendered, so just need to report selection\n      triggerDateSelect(this.dragSelection, pev, this.component.context)\n\n      this.dragSelection = null\n    }\n  }\n}\n\nfunction getComponentTouchDelay(component: DateComponent<any>): number {\n  let { options } = component.context\n  let delay = options.selectLongPressDelay\n\n  if (delay == null) {\n    delay = options.longPressDelay\n  }\n\n  return delay\n}\n\nfunction joinHitsIntoSelection(hit0: Hit, hit1: Hit, dateSelectionTransformers: dateSelectionJoinTransformer[]): DateSpan {\n  let dateSpan0 = hit0.dateSpan\n  let dateSpan1 = hit1.dateSpan\n  let ms = [\n    dateSpan0.range.start,\n    dateSpan0.range.end,\n    dateSpan1.range.start,\n    dateSpan1.range.end,\n  ]\n\n  ms.sort(compareNumbers)\n\n  let props = {} as DateSpan\n\n  for (let transformer of dateSelectionTransformers) {\n    let res = transformer(hit0, hit1)\n\n    if (res === false) {\n      return null\n    }\n\n    if (res) {\n      __assign(props, res)\n    }\n  }\n\n  props.range = { start: ms[0], end: ms[3] }\n  props.allDay = dateSpan0.allDay\n\n  return props\n}\n","import {\n  DateComponent, Seg,\n  PointerDragEvent, Hit,\n  EventMutation, applyMutationToEventStore,\n  startOfDay,\n  elementClosest,\n  EventStore, getRelevantEvents, createEmptyEventStore,\n  EventInteractionState,\n  diffDates, enableCursor, disableCursor,\n  EventRenderRange, getElSeg,\n  EventApi,\n  eventDragMutationMassager,\n  Interaction, InteractionSettings, interactionSettingsStore,\n  EventDropTransformers,\n  CalendarContext,\n  ViewApi,\n  EventChangeArg,\n  buildEventApis,\n  EventAddArg,\n  EventRemoveArg,\n  isInteractionValid,\n  getElRoot,\n} from '@fullcalendar/common'\nimport { __assign } from 'tslib'\nimport { HitDragging, isHitsEqual } from './HitDragging'\nimport { FeaturefulElementDragging } from '../dnd/FeaturefulElementDragging'\nimport { buildDatePointApiWithContext } from '../utils'\n\nexport type EventDragStopArg = EventDragArg\nexport type EventDragStartArg = EventDragArg\n\nexport interface EventDragArg {\n  el: HTMLElement\n  event: EventApi\n  jsEvent: MouseEvent\n  view: ViewApi\n}\n\nexport class EventDragging extends Interaction { // TODO: rename to EventSelectingAndDragging\n  // TODO: test this in IE11\n  // QUESTION: why do we need it on the resizable???\n  static SELECTOR = '.fc-event-draggable, .fc-event-resizable'\n\n  dragging: FeaturefulElementDragging\n  hitDragging: HitDragging\n\n  // internal state\n  subjectEl: HTMLElement | null = null\n  subjectSeg: Seg | null = null // the seg being selected/dragged\n  isDragging: boolean = false\n  eventRange: EventRenderRange | null = null\n  relevantEvents: EventStore | null = null // the events being dragged\n  receivingContext: CalendarContext | null = null\n  validMutation: EventMutation | null = null\n  mutatedRelevantEvents: EventStore | null = null\n\n  constructor(settings: InteractionSettings) {\n    super(settings)\n    let { component } = this\n    let { options } = component.context\n\n    let dragging = this.dragging = new FeaturefulElementDragging(settings.el)\n    dragging.pointer.selector = EventDragging.SELECTOR\n    dragging.touchScrollAllowed = false\n    dragging.autoScroller.isEnabled = options.dragScroll\n\n    let hitDragging = this.hitDragging = new HitDragging(this.dragging, interactionSettingsStore)\n    hitDragging.useSubjectCenter = settings.useEventCenter\n    hitDragging.emitter.on('pointerdown', this.handlePointerDown)\n    hitDragging.emitter.on('dragstart', this.handleDragStart)\n    hitDragging.emitter.on('hitupdate', this.handleHitUpdate)\n    hitDragging.emitter.on('pointerup', this.handlePointerUp)\n    hitDragging.emitter.on('dragend', this.handleDragEnd)\n  }\n\n  destroy() {\n    this.dragging.destroy()\n  }\n\n  handlePointerDown = (ev: PointerDragEvent) => {\n    let origTarget = ev.origEvent.target as HTMLElement\n    let { component, dragging } = this\n    let { mirror } = dragging\n    let { options } = component.context\n    let initialContext = component.context\n    this.subjectEl = ev.subjectEl as HTMLElement\n    let subjectSeg = this.subjectSeg = getElSeg(ev.subjectEl as HTMLElement)!\n    let eventRange = this.eventRange = subjectSeg.eventRange!\n    let eventInstanceId = eventRange.instance!.instanceId\n\n    this.relevantEvents = getRelevantEvents(\n      initialContext.getCurrentData().eventStore,\n      eventInstanceId,\n    )\n\n    dragging.minDistance = ev.isTouch ? 0 : options.eventDragMinDistance\n    dragging.delay =\n      // only do a touch delay if touch and this event hasn't been selected yet\n      (ev.isTouch && eventInstanceId !== component.props.eventSelection) ?\n        getComponentTouchDelay(component) :\n        null\n\n    if (options.fixedMirrorParent) {\n      mirror.parentNode = options.fixedMirrorParent\n    } else {\n      mirror.parentNode = elementClosest(origTarget, '.fc')\n    }\n\n    mirror.revertDuration = options.dragRevertDuration\n\n    let isValid =\n      component.isValidSegDownEl(origTarget) &&\n      !elementClosest(origTarget, '.fc-event-resizer') // NOT on a resizer\n\n    dragging.setIgnoreMove(!isValid)\n\n    // disable dragging for elements that are resizable (ie, selectable)\n    // but are not draggable\n    this.isDragging = isValid &&\n      (ev.subjectEl as HTMLElement).classList.contains('fc-event-draggable')\n  }\n\n  handleDragStart = (ev: PointerDragEvent) => {\n    let initialContext = this.component.context\n    let eventRange = this.eventRange!\n    let eventInstanceId = eventRange.instance.instanceId\n\n    if (ev.isTouch) {\n      // need to select a different event?\n      if (eventInstanceId !== this.component.props.eventSelection) {\n        initialContext.dispatch({ type: 'SELECT_EVENT', eventInstanceId })\n      }\n    } else {\n      // if now using mouse, but was previous touch interaction, clear selected event\n      initialContext.dispatch({ type: 'UNSELECT_EVENT' })\n    }\n\n    if (this.isDragging) {\n      initialContext.calendarApi.unselect(ev) // unselect *date* selection\n      initialContext.emitter.trigger('eventDragStart', {\n        el: this.subjectEl,\n        event: new EventApi(initialContext, eventRange.def, eventRange.instance),\n        jsEvent: ev.origEvent as MouseEvent, // Is this always a mouse event? See #4655\n        view: initialContext.viewApi,\n      } as EventDragStartArg)\n    }\n  }\n\n  handleHitUpdate = (hit: Hit | null, isFinal: boolean) => {\n    if (!this.isDragging) {\n      return\n    }\n\n    let relevantEvents = this.relevantEvents!\n    let initialHit = this.hitDragging.initialHit!\n    let initialContext = this.component.context\n\n    // states based on new hit\n    let receivingContext: CalendarContext | null = null\n    let mutation: EventMutation | null = null\n    let mutatedRelevantEvents: EventStore | null = null\n    let isInvalid = false\n    let interaction: EventInteractionState = {\n      affectedEvents: relevantEvents,\n      mutatedEvents: createEmptyEventStore(),\n      isEvent: true,\n    }\n\n    if (hit) {\n      receivingContext = hit.context\n      let receivingOptions = receivingContext.options\n\n      if (\n        initialContext === receivingContext ||\n        (receivingOptions.editable && receivingOptions.droppable)\n      ) {\n        mutation = computeEventMutation(initialHit, hit, receivingContext.getCurrentData().pluginHooks.eventDragMutationMassagers)\n\n        if (mutation) {\n          mutatedRelevantEvents = applyMutationToEventStore(\n            relevantEvents,\n            receivingContext.getCurrentData().eventUiBases,\n            mutation,\n            receivingContext,\n          )\n          interaction.mutatedEvents = mutatedRelevantEvents\n\n          if (!isInteractionValid(interaction, hit.dateProfile, receivingContext)) {\n            isInvalid = true\n            mutation = null\n            mutatedRelevantEvents = null\n            interaction.mutatedEvents = createEmptyEventStore()\n          }\n        }\n      } else {\n        receivingContext = null\n      }\n    }\n\n    this.displayDrag(receivingContext, interaction)\n\n    if (!isInvalid) {\n      enableCursor()\n    } else {\n      disableCursor()\n    }\n\n    if (!isFinal) {\n      if (\n        initialContext === receivingContext && // TODO: write test for this\n        isHitsEqual(initialHit, hit)\n      ) {\n        mutation = null\n      }\n\n      this.dragging.setMirrorNeedsRevert(!mutation)\n\n      // render the mirror if no already-rendered mirror\n      // TODO: wish we could somehow wait for dispatch to guarantee render\n      this.dragging.setMirrorIsVisible(\n        !hit || !getElRoot(this.subjectEl).querySelector('.fc-event-mirror'), // TODO: turn className into constant\n      )\n\n      // assign states based on new hit\n      this.receivingContext = receivingContext\n      this.validMutation = mutation\n      this.mutatedRelevantEvents = mutatedRelevantEvents\n    }\n  }\n\n  handlePointerUp = () => {\n    if (!this.isDragging) {\n      this.cleanup() // because handleDragEnd won't fire\n    }\n  }\n\n  handleDragEnd = (ev: PointerDragEvent) => {\n    if (this.isDragging) {\n      let initialContext = this.component.context\n      let initialView = initialContext.viewApi\n      let { receivingContext, validMutation } = this\n      let eventDef = this.eventRange!.def\n      let eventInstance = this.eventRange!.instance\n      let eventApi = new EventApi(initialContext, eventDef, eventInstance)\n      let relevantEvents = this.relevantEvents!\n      let mutatedRelevantEvents = this.mutatedRelevantEvents!\n      let { finalHit } = this.hitDragging\n\n      this.clearDrag() // must happen after revert animation\n\n      initialContext.emitter.trigger('eventDragStop', {\n        el: this.subjectEl,\n        event: eventApi,\n        jsEvent: ev.origEvent as MouseEvent, // Is this always a mouse event? See #4655\n        view: initialView,\n      } as EventDragStopArg)\n\n      if (validMutation) {\n        // dropped within same calendar\n        if (receivingContext === initialContext) {\n          let updatedEventApi = new EventApi(\n            initialContext,\n            mutatedRelevantEvents.defs[eventDef.defId],\n            eventInstance ? mutatedRelevantEvents.instances[eventInstance.instanceId] : null,\n          )\n\n          initialContext.dispatch({\n            type: 'MERGE_EVENTS',\n            eventStore: mutatedRelevantEvents,\n          })\n\n          let eventChangeArg: EventChangeArg = {\n            oldEvent: eventApi,\n            event: updatedEventApi,\n            relatedEvents: buildEventApis(mutatedRelevantEvents, initialContext, eventInstance),\n            revert() {\n              initialContext.dispatch({\n                type: 'MERGE_EVENTS',\n                eventStore: relevantEvents, // the pre-change data\n              })\n            },\n          }\n\n          let transformed: ReturnType<EventDropTransformers> = {}\n          for (let transformer of initialContext.getCurrentData().pluginHooks.eventDropTransformers) {\n            __assign(transformed, transformer(validMutation, initialContext))\n          }\n\n          initialContext.emitter.trigger('eventDrop', {\n            ...eventChangeArg,\n            ...transformed,\n            el: ev.subjectEl as HTMLElement,\n            delta: validMutation.datesDelta!,\n            jsEvent: ev.origEvent as MouseEvent, // bad\n            view: initialView,\n          })\n\n          initialContext.emitter.trigger('eventChange', eventChangeArg)\n\n        // dropped in different calendar\n        } else if (receivingContext) {\n          let eventRemoveArg: EventRemoveArg = {\n            event: eventApi,\n            relatedEvents: buildEventApis(relevantEvents, initialContext, eventInstance),\n            revert() {\n              initialContext.dispatch({\n                type: 'MERGE_EVENTS',\n                eventStore: relevantEvents,\n              })\n            },\n          }\n\n          initialContext.emitter.trigger('eventLeave', {\n            ...eventRemoveArg,\n            draggedEl: ev.subjectEl as HTMLElement,\n            view: initialView,\n          })\n\n          initialContext.dispatch({\n            type: 'REMOVE_EVENTS',\n            eventStore: relevantEvents,\n          })\n\n          initialContext.emitter.trigger('eventRemove', eventRemoveArg)\n\n          let addedEventDef = mutatedRelevantEvents.defs[eventDef.defId]\n          let addedEventInstance = mutatedRelevantEvents.instances[eventInstance.instanceId]\n          let addedEventApi = new EventApi(receivingContext, addedEventDef, addedEventInstance)\n\n          receivingContext.dispatch({\n            type: 'MERGE_EVENTS',\n            eventStore: mutatedRelevantEvents,\n          })\n\n          let eventAddArg: EventAddArg = {\n            event: addedEventApi,\n            relatedEvents: buildEventApis(mutatedRelevantEvents, receivingContext, addedEventInstance),\n            revert() {\n              receivingContext.dispatch({\n                type: 'REMOVE_EVENTS',\n                eventStore: mutatedRelevantEvents,\n              })\n            },\n          }\n\n          receivingContext.emitter.trigger('eventAdd', eventAddArg)\n\n          if (ev.isTouch) {\n            receivingContext.dispatch({\n              type: 'SELECT_EVENT',\n              eventInstanceId: eventInstance.instanceId,\n            })\n          }\n\n          receivingContext.emitter.trigger('drop', {\n            ...buildDatePointApiWithContext(finalHit.dateSpan, receivingContext),\n            draggedEl: ev.subjectEl as HTMLElement,\n            jsEvent: ev.origEvent as MouseEvent, // Is this always a mouse event? See #4655\n            view: finalHit.context.viewApi,\n          })\n\n          receivingContext.emitter.trigger('eventReceive', {\n            ...eventAddArg,\n            draggedEl: ev.subjectEl as HTMLElement,\n            view: finalHit.context.viewApi,\n          })\n        }\n      } else {\n        initialContext.emitter.trigger('_noEventDrop')\n      }\n    }\n\n    this.cleanup()\n  }\n\n  // render a drag state on the next receivingCalendar\n  displayDrag(nextContext: CalendarContext | null, state: EventInteractionState) {\n    let initialContext = this.component.context\n    let prevContext = this.receivingContext\n\n    // does the previous calendar need to be cleared?\n    if (prevContext && prevContext !== nextContext) {\n      // does the initial calendar need to be cleared?\n      // if so, don't clear all the way. we still need to to hide the affectedEvents\n      if (prevContext === initialContext) {\n        prevContext.dispatch({\n          type: 'SET_EVENT_DRAG',\n          state: {\n            affectedEvents: state.affectedEvents,\n            mutatedEvents: createEmptyEventStore(),\n            isEvent: true,\n          },\n        })\n\n      // completely clear the old calendar if it wasn't the initial\n      } else {\n        prevContext.dispatch({ type: 'UNSET_EVENT_DRAG' })\n      }\n    }\n\n    if (nextContext) {\n      nextContext.dispatch({ type: 'SET_EVENT_DRAG', state })\n    }\n  }\n\n  clearDrag() {\n    let initialCalendar = this.component.context\n    let { receivingContext } = this\n\n    if (receivingContext) {\n      receivingContext.dispatch({ type: 'UNSET_EVENT_DRAG' })\n    }\n\n    // the initial calendar might have an dummy drag state from displayDrag\n    if (initialCalendar !== receivingContext) {\n      initialCalendar.dispatch({ type: 'UNSET_EVENT_DRAG' })\n    }\n  }\n\n  cleanup() { // reset all internal state\n    this.subjectSeg = null\n    this.isDragging = false\n    this.eventRange = null\n    this.relevantEvents = null\n    this.receivingContext = null\n    this.validMutation = null\n    this.mutatedRelevantEvents = null\n  }\n}\n\nfunction computeEventMutation(hit0: Hit, hit1: Hit, massagers: eventDragMutationMassager[]): EventMutation {\n  let dateSpan0 = hit0.dateSpan\n  let dateSpan1 = hit1.dateSpan\n  let date0 = dateSpan0.range.start\n  let date1 = dateSpan1.range.start\n  let standardProps = {} as any\n\n  if (dateSpan0.allDay !== dateSpan1.allDay) {\n    standardProps.allDay = dateSpan1.allDay\n    standardProps.hasEnd = hit1.context.options.allDayMaintainDuration\n\n    if (dateSpan1.allDay) {\n      // means date1 is already start-of-day,\n      // but date0 needs to be converted\n      date0 = startOfDay(date0)\n    }\n  }\n\n  let delta = diffDates(\n    date0, date1,\n    hit0.context.dateEnv,\n    hit0.componentId === hit1.componentId ?\n      hit0.largeUnit :\n      null,\n  )\n\n  if (delta.milliseconds) { // has hours/minutes/seconds\n    standardProps.allDay = false\n  }\n\n  let mutation: EventMutation = {\n    datesDelta: delta,\n    standardProps,\n  }\n\n  for (let massager of massagers) {\n    massager(mutation, hit0, hit1)\n  }\n\n  return mutation\n}\n\nfunction getComponentTouchDelay(component: DateComponent<any>): number | null {\n  let { options } = component.context\n  let delay = options.eventLongPressDelay\n\n  if (delay == null) {\n    delay = options.longPressDelay\n  }\n\n  return delay\n}\n","import {\n  Seg, Hit,\n  EventMutation, applyMutationToEventStore,\n  elementClosest,\n  PointerDragEvent,\n  EventStore, getRelevantEvents, createEmptyEventStore,\n  diffDates, enableCursor, disableCursor,\n  DateRange,\n  EventApi,\n  EventRenderRange, getElSeg,\n  createDuration,\n  EventInteractionState,\n  Interaction, InteractionSettings, interactionSettingsToStore, ViewApi, Duration, EventChangeArg, buildEventApis, isInteractionValid,\n} from '@fullcalendar/common'\nimport { __assign } from 'tslib'\nimport { HitDragging, isHitsEqual } from './HitDragging'\nimport { FeaturefulElementDragging } from '../dnd/FeaturefulElementDragging'\n\nexport type EventResizeStartArg = EventResizeStartStopArg\nexport type EventResizeStopArg = EventResizeStartStopArg\n\nexport interface EventResizeStartStopArg {\n  el: HTMLElement\n  event: EventApi\n  jsEvent: MouseEvent\n  view: ViewApi\n}\n\nexport interface EventResizeDoneArg extends EventChangeArg {\n  el: HTMLElement\n  startDelta: Duration\n  endDelta: Duration\n  jsEvent: MouseEvent\n  view: ViewApi\n}\n\nexport class EventResizing extends Interaction {\n  dragging: FeaturefulElementDragging\n  hitDragging: HitDragging\n\n  // internal state\n  draggingSegEl: HTMLElement | null = null\n  draggingSeg: Seg | null = null // TODO: rename to resizingSeg? subjectSeg?\n  eventRange: EventRenderRange | null = null\n  relevantEvents: EventStore | null = null\n  validMutation: EventMutation | null = null\n  mutatedRelevantEvents: EventStore | null = null\n\n  constructor(settings: InteractionSettings) {\n    super(settings)\n    let { component } = settings\n\n    let dragging = this.dragging = new FeaturefulElementDragging(settings.el)\n    dragging.pointer.selector = '.fc-event-resizer'\n    dragging.touchScrollAllowed = false\n    dragging.autoScroller.isEnabled = component.context.options.dragScroll\n\n    let hitDragging = this.hitDragging = new HitDragging(this.dragging, interactionSettingsToStore(settings))\n    hitDragging.emitter.on('pointerdown', this.handlePointerDown)\n    hitDragging.emitter.on('dragstart', this.handleDragStart)\n    hitDragging.emitter.on('hitupdate', this.handleHitUpdate)\n    hitDragging.emitter.on('dragend', this.handleDragEnd)\n  }\n\n  destroy() {\n    this.dragging.destroy()\n  }\n\n  handlePointerDown = (ev: PointerDragEvent) => {\n    let { component } = this\n    let segEl = this.querySegEl(ev)\n    let seg = getElSeg(segEl)\n    let eventRange = this.eventRange = seg.eventRange!\n\n    this.dragging.minDistance = component.context.options.eventDragMinDistance\n\n    // if touch, need to be working with a selected event\n    this.dragging.setIgnoreMove(\n      !this.component.isValidSegDownEl(ev.origEvent.target as HTMLElement) ||\n      (ev.isTouch && this.component.props.eventSelection !== eventRange.instance!.instanceId),\n    )\n  }\n\n  handleDragStart = (ev: PointerDragEvent) => {\n    let { context } = this.component\n    let eventRange = this.eventRange!\n\n    this.relevantEvents = getRelevantEvents(\n      context.getCurrentData().eventStore,\n      this.eventRange.instance!.instanceId,\n    )\n\n    let segEl = this.querySegEl(ev)\n    this.draggingSegEl = segEl\n    this.draggingSeg = getElSeg(segEl)\n\n    context.calendarApi.unselect()\n    context.emitter.trigger('eventResizeStart', {\n      el: segEl,\n      event: new EventApi(context, eventRange.def, eventRange.instance),\n      jsEvent: ev.origEvent as MouseEvent, // Is this always a mouse event? See #4655\n      view: context.viewApi,\n    } as EventResizeStartArg)\n  }\n\n  handleHitUpdate = (hit: Hit | null, isFinal: boolean, ev: PointerDragEvent) => {\n    let { context } = this.component\n    let relevantEvents = this.relevantEvents!\n    let initialHit = this.hitDragging.initialHit!\n    let eventInstance = this.eventRange.instance!\n    let mutation: EventMutation | null = null\n    let mutatedRelevantEvents: EventStore | null = null\n    let isInvalid = false\n    let interaction: EventInteractionState = {\n      affectedEvents: relevantEvents,\n      mutatedEvents: createEmptyEventStore(),\n      isEvent: true,\n    }\n\n    if (hit) {\n      let disallowed = hit.componentId === initialHit.componentId\n        && this.isHitComboAllowed\n        && !this.isHitComboAllowed(initialHit, hit)\n\n      if (!disallowed) {\n        mutation = computeMutation(\n          initialHit,\n          hit,\n          (ev.subjectEl as HTMLElement).classList.contains('fc-event-resizer-start'),\n          eventInstance.range,\n        )\n      }\n    }\n\n    if (mutation) {\n      mutatedRelevantEvents = applyMutationToEventStore(relevantEvents, context.getCurrentData().eventUiBases, mutation, context)\n      interaction.mutatedEvents = mutatedRelevantEvents\n\n      if (!isInteractionValid(interaction, hit.dateProfile, context)) {\n        isInvalid = true\n        mutation = null\n        mutatedRelevantEvents = null\n        interaction.mutatedEvents = null\n      }\n    }\n\n    if (mutatedRelevantEvents) {\n      context.dispatch({\n        type: 'SET_EVENT_RESIZE',\n        state: interaction,\n      })\n    } else {\n      context.dispatch({ type: 'UNSET_EVENT_RESIZE' })\n    }\n\n    if (!isInvalid) {\n      enableCursor()\n    } else {\n      disableCursor()\n    }\n\n    if (!isFinal) {\n      if (mutation && isHitsEqual(initialHit, hit)) {\n        mutation = null\n      }\n\n      this.validMutation = mutation\n      this.mutatedRelevantEvents = mutatedRelevantEvents\n    }\n  }\n\n  handleDragEnd = (ev: PointerDragEvent) => {\n    let { context } = this.component\n    let eventDef = this.eventRange!.def\n    let eventInstance = this.eventRange!.instance\n    let eventApi = new EventApi(context, eventDef, eventInstance)\n    let relevantEvents = this.relevantEvents!\n    let mutatedRelevantEvents = this.mutatedRelevantEvents!\n\n    context.emitter.trigger('eventResizeStop', {\n      el: this.draggingSegEl,\n      event: eventApi,\n      jsEvent: ev.origEvent as MouseEvent, // Is this always a mouse event? See #4655\n      view: context.viewApi,\n    } as EventResizeStopArg)\n\n    if (this.validMutation) {\n      let updatedEventApi = new EventApi(\n        context,\n        mutatedRelevantEvents.defs[eventDef.defId],\n        eventInstance ? mutatedRelevantEvents.instances[eventInstance.instanceId] : null,\n      )\n\n      context.dispatch({\n        type: 'MERGE_EVENTS',\n        eventStore: mutatedRelevantEvents,\n      })\n\n      let eventChangeArg: EventChangeArg = {\n        oldEvent: eventApi,\n        event: updatedEventApi,\n        relatedEvents: buildEventApis(mutatedRelevantEvents, context, eventInstance),\n        revert() {\n          context.dispatch({\n            type: 'MERGE_EVENTS',\n            eventStore: relevantEvents, // the pre-change events\n          })\n        },\n      }\n\n      context.emitter.trigger('eventResize', {\n        ...eventChangeArg,\n        el: this.draggingSegEl,\n        startDelta: this.validMutation.startDelta || createDuration(0),\n        endDelta: this.validMutation.endDelta || createDuration(0),\n        jsEvent: ev.origEvent as MouseEvent,\n        view: context.viewApi,\n      })\n\n      context.emitter.trigger('eventChange', eventChangeArg)\n    } else {\n      context.emitter.trigger('_noEventResize')\n    }\n\n    // reset all internal state\n    this.draggingSeg = null\n    this.relevantEvents = null\n    this.validMutation = null\n\n    // okay to keep eventInstance around. useful to set it in handlePointerDown\n  }\n\n  querySegEl(ev: PointerDragEvent) {\n    return elementClosest(ev.subjectEl as HTMLElement, '.fc-event')\n  }\n}\n\nfunction computeMutation(\n  hit0: Hit,\n  hit1: Hit,\n  isFromStart: boolean,\n  instanceRange: DateRange,\n): EventMutation | null {\n  let dateEnv = hit0.context.dateEnv\n  let date0 = hit0.dateSpan.range.start\n  let date1 = hit1.dateSpan.range.start\n\n  let delta = diffDates(\n    date0, date1,\n    dateEnv,\n    hit0.largeUnit,\n  )\n\n  if (isFromStart) {\n    if (dateEnv.add(instanceRange.start, delta) < instanceRange.end) {\n      return { startDelta: delta }\n    }\n  } else if (dateEnv.add(instanceRange.end, delta) > instanceRange.start) {\n    return { endDelta: delta }\n  }\n\n  return null\n}\n","import {\n  DateSelectionApi,\n  PointerDragEvent,\n  elementClosest,\n  CalendarContext,\n  getEventTargetViaRoot,\n} from '@fullcalendar/common'\nimport { PointerDragging } from '../dnd/PointerDragging'\nimport { EventDragging } from './EventDragging'\n\nexport class UnselectAuto {\n  documentPointer: PointerDragging // for unfocusing\n  isRecentPointerDateSelect = false // wish we could use a selector to detect date selection, but uses hit system\n  matchesCancel = false\n  matchesEvent = false\n\n  constructor(private context: CalendarContext) {\n    let documentPointer = this.documentPointer = new PointerDragging(document)\n    documentPointer.shouldIgnoreMove = true\n    documentPointer.shouldWatchScroll = false\n    documentPointer.emitter.on('pointerdown', this.onDocumentPointerDown)\n    documentPointer.emitter.on('pointerup', this.onDocumentPointerUp)\n\n    /*\n    TODO: better way to know about whether there was a selection with the pointer\n    */\n    context.emitter.on('select', this.onSelect)\n  }\n\n  destroy() {\n    this.context.emitter.off('select', this.onSelect)\n    this.documentPointer.destroy()\n  }\n\n  onSelect = (selectInfo: DateSelectionApi) => {\n    if (selectInfo.jsEvent) {\n      this.isRecentPointerDateSelect = true\n    }\n  }\n\n  onDocumentPointerDown = (pev: PointerDragEvent) => {\n    let unselectCancel = this.context.options.unselectCancel\n    let downEl = getEventTargetViaRoot(pev.origEvent) as HTMLElement\n\n    this.matchesCancel = !!elementClosest(downEl, unselectCancel)\n    this.matchesEvent = !!elementClosest(downEl, EventDragging.SELECTOR) // interaction started on an event?\n  }\n\n  onDocumentPointerUp = (pev: PointerDragEvent) => {\n    let { context } = this\n    let { documentPointer } = this\n    let calendarState = context.getCurrentData()\n\n    // touch-scrolling should never unfocus any type of selection\n    if (!documentPointer.wasTouchScroll) {\n      if (\n        calendarState.dateSelection && // an existing date selection?\n        !this.isRecentPointerDateSelect // a new pointer-initiated date selection since last onDocumentPointerUp?\n      ) {\n        let unselectAuto = context.options.unselectAuto\n\n        if (unselectAuto && (!unselectAuto || !this.matchesCancel)) {\n          context.calendarApi.unselect(pev)\n        }\n      }\n\n      if (\n        calendarState.eventSelection && // an existing event selected?\n        !this.matchesEvent // interaction DIDN'T start on an event\n      ) {\n        context.dispatch({ type: 'UNSELECT_EVENT' })\n      }\n    }\n\n    this.isRecentPointerDateSelect = false\n  }\n}\n","import {\n  Hit,\n  interactionSettingsStore,\n  PointerDragEvent,\n  parseEventDef, createEventInstance, EventTuple,\n  createEmptyEventStore, eventTupleToStore,\n  config,\n  DateSpan, DatePointApi,\n  EventInteractionState,\n  DragMetaInput, DragMeta, parseDragMeta,\n  EventApi,\n  elementMatches,\n  enableCursor, disableCursor,\n  isInteractionValid,\n  ElementDragging,\n  ViewApi,\n  CalendarContext,\n  getDefaultEventEnd,\n  refineEventDef,\n} from '@fullcalendar/common'\nimport { __assign } from 'tslib'\nimport { HitDragging } from '../interactions/HitDragging'\nimport { buildDatePointApiWithContext } from '../utils'\n\nexport type DragMetaGenerator = DragMetaInput | ((el: HTMLElement) => DragMetaInput)\n\nexport interface ExternalDropApi extends DatePointApi {\n  draggedEl: HTMLElement\n  jsEvent: UIEvent\n  view: ViewApi\n}\n\n/*\nGiven an already instantiated draggable object for one-or-more elements,\nInterprets any dragging as an attempt to drag an events that lives outside\nof a calendar onto a calendar.\n*/\nexport class ExternalElementDragging {\n  hitDragging: HitDragging\n  receivingContext: CalendarContext | null = null\n  droppableEvent: EventTuple | null = null // will exist for all drags, even if create:false\n  suppliedDragMeta: DragMetaGenerator | null = null\n  dragMeta: DragMeta | null = null\n\n  constructor(dragging: ElementDragging, suppliedDragMeta?: DragMetaGenerator) {\n    let hitDragging = this.hitDragging = new HitDragging(dragging, interactionSettingsStore)\n    hitDragging.requireInitial = false // will start outside of a component\n    hitDragging.emitter.on('dragstart', this.handleDragStart)\n    hitDragging.emitter.on('hitupdate', this.handleHitUpdate)\n    hitDragging.emitter.on('dragend', this.handleDragEnd)\n\n    this.suppliedDragMeta = suppliedDragMeta\n  }\n\n  handleDragStart = (ev: PointerDragEvent) => {\n    this.dragMeta = this.buildDragMeta(ev.subjectEl as HTMLElement)\n  }\n\n  buildDragMeta(subjectEl: HTMLElement) {\n    if (typeof this.suppliedDragMeta === 'object') {\n      return parseDragMeta(this.suppliedDragMeta)\n    }\n    if (typeof this.suppliedDragMeta === 'function') {\n      return parseDragMeta(this.suppliedDragMeta(subjectEl))\n    }\n    return getDragMetaFromEl(subjectEl)\n  }\n\n  handleHitUpdate = (hit: Hit | null, isFinal: boolean, ev: PointerDragEvent) => {\n    let { dragging } = this.hitDragging\n    let receivingContext: CalendarContext | null = null\n    let droppableEvent: EventTuple | null = null\n    let isInvalid = false\n    let interaction: EventInteractionState = {\n      affectedEvents: createEmptyEventStore(),\n      mutatedEvents: createEmptyEventStore(),\n      isEvent: this.dragMeta!.create,\n    }\n\n    if (hit) {\n      receivingContext = hit.context\n\n      if (this.canDropElOnCalendar(ev.subjectEl as HTMLElement, receivingContext)) {\n        droppableEvent = computeEventForDateSpan(\n          hit.dateSpan,\n          this.dragMeta!,\n          receivingContext,\n        )\n\n        interaction.mutatedEvents = eventTupleToStore(droppableEvent)\n        isInvalid = !isInteractionValid(interaction, hit.dateProfile, receivingContext)\n\n        if (isInvalid) {\n          interaction.mutatedEvents = createEmptyEventStore()\n          droppableEvent = null\n        }\n      }\n    }\n\n    this.displayDrag(receivingContext, interaction)\n\n    // show mirror if no already-rendered mirror element OR if we are shutting down the mirror (?)\n    // TODO: wish we could somehow wait for dispatch to guarantee render\n    dragging.setMirrorIsVisible(\n      isFinal || !droppableEvent || !document.querySelector('.fc-event-mirror'), // TODO: turn className into constant\n      // TODO: somehow query FullCalendars WITHIN shadow-roots for existing event-mirror els\n    )\n\n    if (!isInvalid) {\n      enableCursor()\n    } else {\n      disableCursor()\n    }\n\n    if (!isFinal) {\n      dragging.setMirrorNeedsRevert(!droppableEvent)\n\n      this.receivingContext = receivingContext\n      this.droppableEvent = droppableEvent\n    }\n  }\n\n  handleDragEnd = (pev: PointerDragEvent) => {\n    let { receivingContext, droppableEvent } = this\n\n    this.clearDrag()\n\n    if (receivingContext && droppableEvent) {\n      let finalHit = this.hitDragging.finalHit!\n      let finalView = finalHit.context.viewApi\n      let dragMeta = this.dragMeta!\n\n      receivingContext.emitter.trigger('drop', {\n        ...buildDatePointApiWithContext(finalHit.dateSpan, receivingContext),\n        draggedEl: pev.subjectEl as HTMLElement,\n        jsEvent: pev.origEvent as MouseEvent, // Is this always a mouse event? See #4655\n        view: finalView,\n      })\n\n      if (dragMeta.create) {\n        let addingEvents = eventTupleToStore(droppableEvent)\n\n        receivingContext.dispatch({\n          type: 'MERGE_EVENTS',\n          eventStore: addingEvents,\n        })\n\n        if (pev.isTouch) {\n          receivingContext.dispatch({\n            type: 'SELECT_EVENT',\n            eventInstanceId: droppableEvent.instance.instanceId,\n          })\n        }\n\n        // signal that an external event landed\n        receivingContext.emitter.trigger('eventReceive', {\n          event: new EventApi(\n            receivingContext,\n            droppableEvent.def,\n            droppableEvent.instance,\n          ),\n          relatedEvents: [],\n          revert() {\n            receivingContext.dispatch({\n              type: 'REMOVE_EVENTS',\n              eventStore: addingEvents,\n            })\n          },\n          draggedEl: pev.subjectEl as HTMLElement,\n          view: finalView,\n        })\n      }\n    }\n\n    this.receivingContext = null\n    this.droppableEvent = null\n  }\n\n  displayDrag(nextContext: CalendarContext | null, state: EventInteractionState) {\n    let prevContext = this.receivingContext\n\n    if (prevContext && prevContext !== nextContext) {\n      prevContext.dispatch({ type: 'UNSET_EVENT_DRAG' })\n    }\n\n    if (nextContext) {\n      nextContext.dispatch({ type: 'SET_EVENT_DRAG', state })\n    }\n  }\n\n  clearDrag() {\n    if (this.receivingContext) {\n      this.receivingContext.dispatch({ type: 'UNSET_EVENT_DRAG' })\n    }\n  }\n\n  canDropElOnCalendar(el: HTMLElement, receivingContext: CalendarContext): boolean {\n    let dropAccept = receivingContext.options.dropAccept\n\n    if (typeof dropAccept === 'function') {\n      return dropAccept.call(receivingContext.calendarApi, el)\n    }\n\n    if (typeof dropAccept === 'string' && dropAccept) {\n      return Boolean(elementMatches(el, dropAccept))\n    }\n\n    return true\n  }\n}\n\n// Utils for computing event store from the DragMeta\n// ----------------------------------------------------------------------------------------------------\n\nfunction computeEventForDateSpan(dateSpan: DateSpan, dragMeta: DragMeta, context: CalendarContext): EventTuple {\n  let defProps = { ...dragMeta.leftoverProps }\n\n  for (let transform of context.pluginHooks.externalDefTransforms) {\n    __assign(defProps, transform(dateSpan, dragMeta))\n  }\n\n  let { refined, extra } = refineEventDef(defProps, context)\n  let def = parseEventDef(\n    refined,\n    extra,\n    dragMeta.sourceId,\n    dateSpan.allDay,\n    context.options.forceEventDuration || Boolean(dragMeta.duration), // hasEnd\n    context,\n  )\n\n  let start = dateSpan.range.start\n\n  // only rely on time info if drop zone is all-day,\n  // otherwise, we already know the time\n  if (dateSpan.allDay && dragMeta.startTime) {\n    start = context.dateEnv.add(start, dragMeta.startTime)\n  }\n\n  let end = dragMeta.duration ?\n    context.dateEnv.add(start, dragMeta.duration) :\n    getDefaultEventEnd(dateSpan.allDay, start, context)\n\n  let instance = createEventInstance(def.defId, { start, end })\n\n  return { def, instance }\n}\n\n// Utils for extracting data from element\n// ----------------------------------------------------------------------------------------------------\n\nfunction getDragMetaFromEl(el: HTMLElement): DragMeta {\n  let str = getEmbeddedElData(el, 'event')\n  let obj = str ?\n    JSON.parse(str) :\n    { create: false } // if no embedded data, assume no event creation\n\n  return parseDragMeta(obj)\n}\n\nconfig.dataAttrPrefix = ''\n\nfunction getEmbeddedElData(el: HTMLElement, name: string): string {\n  let prefix = config.dataAttrPrefix\n  let prefixedName = (prefix ? prefix + '-' : '') + name\n\n  return el.getAttribute('data-' + prefixedName) || ''\n}\n","import { BASE_OPTION_DEFAULTS, PointerDragEvent } from '@fullcalendar/common'\nimport { FeaturefulElementDragging } from '../dnd/FeaturefulElementDragging'\nimport { ExternalElementDragging, DragMetaGenerator } from './ExternalElementDragging'\n\nexport interface ExternalDraggableSettings {\n  eventData?: DragMetaGenerator\n  itemSelector?: string\n  minDistance?: number\n  longPressDelay?: number\n  appendTo?: HTMLElement\n}\n\n/*\nMakes an element (that is *external* to any calendar) draggable.\nCan pass in data that determines how an event will be created when dropped onto a calendar.\nLeverages FullCalendar's internal drag-n-drop functionality WITHOUT a third-party drag system.\n*/\nexport class ExternalDraggable {\n  dragging: FeaturefulElementDragging\n  settings: ExternalDraggableSettings\n\n  constructor(el: HTMLElement, settings: ExternalDraggableSettings = {}) {\n    this.settings = settings\n\n    let dragging = this.dragging = new FeaturefulElementDragging(el)\n    dragging.touchScrollAllowed = false\n\n    if (settings.itemSelector != null) {\n      dragging.pointer.selector = settings.itemSelector\n    }\n\n    if (settings.appendTo != null) {\n      dragging.mirror.parentNode = settings.appendTo // TODO: write tests\n    }\n\n    dragging.emitter.on('pointerdown', this.handlePointerDown)\n    dragging.emitter.on('dragstart', this.handleDragStart)\n\n    new ExternalElementDragging(dragging, settings.eventData) // eslint-disable-line no-new\n  }\n\n  handlePointerDown = (ev: PointerDragEvent) => {\n    let { dragging } = this\n    let { minDistance, longPressDelay } = this.settings\n\n    dragging.minDistance =\n      minDistance != null ?\n        minDistance :\n        (ev.isTouch ? 0 : BASE_OPTION_DEFAULTS.eventDragMinDistance)\n\n    dragging.delay =\n      ev.isTouch ? // TODO: eventually read eventLongPressDelay instead vvv\n        (longPressDelay != null ? longPressDelay : BASE_OPTION_DEFAULTS.longPressDelay) :\n        0\n  }\n\n  handleDragStart = (ev: PointerDragEvent) => {\n    if (\n      ev.isTouch &&\n      this.dragging.delay &&\n      (ev.subjectEl as HTMLElement).classList.contains('fc-event')\n    ) {\n      this.dragging.mirror.getMirrorEl().classList.add('fc-event-selected')\n    }\n  }\n\n  destroy() {\n    this.dragging.destroy()\n  }\n}\n","import { PointerDragEvent, ElementDragging } from '@fullcalendar/common'\nimport { PointerDragging } from '../dnd/PointerDragging'\n\n/*\nDetects when a *THIRD-PARTY* drag-n-drop system interacts with elements.\nThe third-party system is responsible for drawing the visuals effects of the drag.\nThis class simply monitors for pointer movements and fires events.\nIt also has the ability to hide the moving element (the \"mirror\") during the drag.\n*/\nexport class InferredElementDragging extends ElementDragging {\n  pointer: PointerDragging\n  shouldIgnoreMove: boolean = false\n  mirrorSelector: string = ''\n  currentMirrorEl: HTMLElement | null = null\n\n  constructor(containerEl: HTMLElement) {\n    super(containerEl)\n\n    let pointer = this.pointer = new PointerDragging(containerEl)\n    pointer.emitter.on('pointerdown', this.handlePointerDown)\n    pointer.emitter.on('pointermove', this.handlePointerMove)\n    pointer.emitter.on('pointerup', this.handlePointerUp)\n  }\n\n  destroy() {\n    this.pointer.destroy()\n  }\n\n  handlePointerDown = (ev: PointerDragEvent) => {\n    this.emitter.trigger('pointerdown', ev)\n\n    if (!this.shouldIgnoreMove) {\n      // fire dragstart right away. does not support delay or min-distance\n      this.emitter.trigger('dragstart', ev)\n    }\n  }\n\n  handlePointerMove = (ev: PointerDragEvent) => {\n    if (!this.shouldIgnoreMove) {\n      this.emitter.trigger('dragmove', ev)\n    }\n  }\n\n  handlePointerUp = (ev: PointerDragEvent) => {\n    this.emitter.trigger('pointerup', ev)\n\n    if (!this.shouldIgnoreMove) {\n      // fire dragend right away. does not support a revert animation\n      this.emitter.trigger('dragend', ev)\n    }\n  }\n\n  setIgnoreMove(bool: boolean) {\n    this.shouldIgnoreMove = bool\n  }\n\n  setMirrorIsVisible(bool: boolean) {\n    if (bool) {\n      // restore a previously hidden element.\n      // use the reference in case the selector class has already been removed.\n      if (this.currentMirrorEl) {\n        this.currentMirrorEl.style.visibility = ''\n        this.currentMirrorEl = null\n      }\n    } else {\n      let mirrorEl = this.mirrorSelector\n        // TODO: somehow query FullCalendars WITHIN shadow-roots\n        ? document.querySelector(this.mirrorSelector) as HTMLElement\n        : null\n\n      if (mirrorEl) {\n        this.currentMirrorEl = mirrorEl\n        mirrorEl.style.visibility = 'hidden'\n      }\n    }\n  }\n}\n","import { ExternalElementDragging, DragMetaGenerator } from './ExternalElementDragging'\nimport { InferredElementDragging } from './InferredElementDragging'\n\nexport interface ThirdPartyDraggableSettings {\n  eventData?: DragMetaGenerator\n  itemSelector?: string\n  mirrorSelector?: string\n}\n\n/*\nBridges third-party drag-n-drop systems with FullCalendar.\nMust be instantiated and destroyed by caller.\n*/\nexport class ThirdPartyDraggable {\n  dragging: InferredElementDragging\n\n  constructor(\n    containerOrSettings?: EventTarget | ThirdPartyDraggableSettings,\n    settings?: ThirdPartyDraggableSettings,\n  ) {\n    let containerEl: EventTarget = document\n\n    if (\n      // wish we could just test instanceof EventTarget, but doesn't work in IE11\n      containerOrSettings === document ||\n      containerOrSettings instanceof Element\n    ) {\n      containerEl = containerOrSettings as EventTarget\n      settings = settings || {}\n    } else {\n      settings = (containerOrSettings || {}) as ThirdPartyDraggableSettings\n    }\n\n    let dragging = this.dragging = new InferredElementDragging(containerEl as HTMLElement)\n\n    if (typeof settings.itemSelector === 'string') {\n      dragging.pointer.selector = settings.itemSelector\n    } else if (containerEl === document) {\n      dragging.pointer.selector = '[data-event]'\n    }\n\n    if (typeof settings.mirrorSelector === 'string') {\n      dragging.mirrorSelector = settings.mirrorSelector\n    }\n\n    new ExternalElementDragging(dragging, settings.eventData) // eslint-disable-line no-new\n  }\n\n  destroy() {\n    this.dragging.destroy()\n  }\n}\n","var data = {\n\t\"body\": \"<path d=\\\"M3 21h17c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zM20 8H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h17c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zM2 4v1c0 .55.45 1 1 1h17c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path d=\\\"M5.33 20H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2h1.33c1.1 0 2 .9 2 2v12a2 2 0 0 1-2 2zM22 18V6c0-1.1-.9-2-2-2h-1.33c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2H20a2 2 0 0 0 2-2zm-7.33 0V6c0-1.1-.9-2-2-2h-1.33c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h1.33c1.1 0 2-.9 2-2z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path d=\\\"M19 13H5c-1.1 0-2 .9-2 2v4c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-4c0-1.1-.9-2-2-2zm0-10H5c-1.1 0-2 .9-2 2v4c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path d=\\\"M14.67 6v4.5c0 .55-.45 1-1 1h-3.33c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h3.33c.55 0 1 .45 1 1zm2 5.5H20c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1h-3.33c-.55 0-1 .45-1 1v4.5c0 .55.44 1 1 1zm-2 6.5v-4.5c0-.55-.45-1-1-1h-3.33c-.55 0-1 .45-1 1V18c0 .55.45 1 1 1h3.33c.55 0 1-.45 1-1zm1-4.5V18c0 .55.45 1 1 1H20c.55 0 1-.45 1-1v-4.5c0-.55-.45-1-1-1h-3.33c-.56 0-1 .45-1 1zm-8.34-1H4c-.55 0-1 .45-1 1V18c0 .55.45 1 1 1h3.33c.55 0 1-.45 1-1v-4.5c0-.55-.44-1-1-1zm1-2V6c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v4.5c0 .55.45 1 1 1h3.33c.56 0 1-.45 1-1z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { config, isValidDate, addDays, createElement, CalendarContext, Fragment } from '@fullcalendar/common'\n\nconst RELEASE_DATE = '<%= releaseDate %>' // for Scheduler\nconst UPGRADE_WINDOW = 365 + 7 // days. 1 week leeway, for tz shift reasons too\nconst INVALID_LICENSE_URL = 'http://fullcalendar.io/docs/schedulerLicenseKey#invalid'\nconst OUTDATED_LICENSE_URL = 'http://fullcalendar.io/docs/schedulerLicenseKey#outdated'\nconst PRESET_LICENSE_KEYS = [\n  'GPL-My-Project-Is-Open-Source',\n  'CC-Attribution-NonCommercial-NoDerivatives',\n]\nconst CSS = {\n  position: 'absolute' as 'absolute', // for TS+React. ugh.\n  zIndex: 99999,\n  bottom: '1px',\n  left: '1px',\n  background: '#eee',\n  borderColor: '#ddd',\n  borderStyle: 'solid',\n  borderWidth: '1px 1px 0 0',\n  padding: '2px 4px',\n  fontSize: '12px',\n  borderTopRightRadius: '3px',\n}\n\nexport function buildLicenseWarning(context: CalendarContext) {\n  let key = context.options.schedulerLicenseKey\n  let currentUrl = typeof window !== 'undefined' ? window.location.href : ''\n\n  if (!isImmuneUrl(currentUrl)) {\n    let status = processLicenseKey(key)\n\n    if (status !== 'valid') {\n      return (\n        <div className=\"fc-license-message\" style={CSS}>\n          {(status === 'outdated') ? (\n            <Fragment>\n              {'Your license key is too old to work with this version. '}\n              <a href={OUTDATED_LICENSE_URL}>More Info</a>\n            </Fragment>\n          ) : (\n            <Fragment>\n              {'Your license key is invalid. '}\n              <a href={INVALID_LICENSE_URL}>More Info</a>\n            </Fragment>\n          )}\n        </div>\n      )\n    }\n  }\n\n  return null\n}\n\n/*\nThis decryption is not meant to be bulletproof. Just a way to remind about an upgrade.\n*/\nfunction processLicenseKey(key) {\n  if (PRESET_LICENSE_KEYS.indexOf(key) !== -1) {\n    return 'valid'\n  }\n\n  const parts = (key || '').match(/^(\\d+)-fcs-(\\d+)$/)\n\n  if (parts && (parts[1].length === 10)) {\n    const purchaseDate = new Date(parseInt(parts[2], 10) * 1000)\n    const releaseDate = new Date(config.mockSchedulerReleaseDate || RELEASE_DATE)\n\n    if (isValidDate(releaseDate)) { // token won't be replaced in dev mode\n      const minPurchaseDate = addDays(releaseDate, -UPGRADE_WINDOW)\n\n      if (minPurchaseDate < purchaseDate) {\n        return 'valid'\n      }\n\n      return 'outdated'\n    }\n  }\n\n  return 'invalid'\n}\n\nfunction isImmuneUrl(url) {\n  return /\\w+:\\/\\/fullcalendar\\.io\\/|\\/examples\\/[\\w-]+\\.html$/.test(url)\n}\n","import { removeElement, computeEdges } from '@fullcalendar/common'\n\n// TODO: assume the el has no borders?\nexport function getScrollCanvasOrigin(scrollEl: HTMLElement) { // best place for this?\n  let rect = scrollEl.getBoundingClientRect()\n  let edges = computeEdges(scrollEl) // TODO: pass in isRtl?\n\n  return {\n    left: rect.left + edges.borderLeft + edges.scrollbarLeft - getScrollFromLeftEdge(scrollEl),\n    top: rect.top + edges.borderTop - scrollEl.scrollTop,\n  }\n}\n\nexport function getScrollFromLeftEdge(el: HTMLElement) {\n  let scrollLeft = el.scrollLeft\n  let computedStyles = window.getComputedStyle(el) // TODO: pass in isRtl instead?\n\n  if (computedStyles.direction === 'rtl') {\n    switch (getRtlScrollSystem()) {\n      case 'negative':\n        scrollLeft *= -1 // convert to 'reverse'. fall through...\n      case 'reverse': // scrollLeft is distance between scrollframe's right edge scrollcanvas's right edge\n        scrollLeft = el.scrollWidth - scrollLeft - el.clientWidth\n    }\n  }\n\n  return scrollLeft\n}\n\nexport function setScrollFromLeftEdge(el: HTMLElement, scrollLeft: number) {\n  let computedStyles = window.getComputedStyle(el) // TODO: pass in isRtl instead?\n\n  if (computedStyles.direction === 'rtl') {\n    switch (getRtlScrollSystem()) {\n      case 'reverse':\n        scrollLeft = el.scrollWidth - scrollLeft\n        break\n      case 'negative':\n        scrollLeft = -(el.scrollWidth - scrollLeft)\n        break\n    }\n  }\n\n  el.scrollLeft = scrollLeft\n}\n\n// Horizontal Scroll System Detection\n// ----------------------------------------------------------------------------------------------\n\nlet _rtlScrollSystem\n\nfunction getRtlScrollSystem() {\n  return _rtlScrollSystem || (_rtlScrollSystem = detectRtlScrollSystem())\n}\n\nfunction detectRtlScrollSystem() {\n  let el = document.createElement('div')\n  el.style.position = 'absolute'\n  el.style.top = '-1000px'\n  el.style.width = '1px'\n  el.style.height = '1px'\n  el.style.overflow = 'scroll'\n  el.style.direction = 'rtl'\n  el.style.fontSize = '100px'\n  el.innerHTML = 'A'\n\n  document.body.appendChild(el)\n\n  let system\n  if (el.scrollLeft > 0) {\n    system = 'positive' // scroll is a positive number from the left edge\n  } else {\n    el.scrollLeft = 1\n    if (el.scrollLeft > 0) {\n      system = 'reverse' // scroll is a positive number from the right edge\n    } else {\n      system = 'negative' // scroll is a negative number from the right edge\n    }\n  }\n\n  removeElement(el)\n  return system\n}\n","import { Emitter, DelayedRunner } from '@fullcalendar/common'\n\nconst WHEEL_EVENT_NAMES = 'wheel mousewheel DomMouseScroll MozMousePixelScroll'.split(' ')\n\n/*\nALSO, with the ability to disable touch\n*/\nexport class ScrollListener {\n  emitter = new Emitter()\n  private isScrolling = false\n  private isTouching = false // user currently has finger down?\n  private isRecentlyWheeled = false\n  private isRecentlyScrolled = false\n  private wheelWaiter = new DelayedRunner(this._handleWheelWaited.bind(this))\n  private scrollWaiter = new DelayedRunner(this._handleScrollWaited.bind(this))\n\n  constructor(public el: HTMLElement) {\n    el.addEventListener('scroll', this.handleScroll)\n    el.addEventListener('touchstart', this.handleTouchStart, { passive: true })\n    el.addEventListener('touchend', this.handleTouchEnd)\n\n    for (let eventName of WHEEL_EVENT_NAMES) {\n      el.addEventListener(eventName, this.handleWheel)\n    }\n  }\n\n  destroy() {\n    let { el } = this\n    el.removeEventListener('scroll', this.handleScroll)\n    el.removeEventListener('touchstart', this.handleTouchStart, { passive: true } as AddEventListenerOptions)\n    el.removeEventListener('touchend', this.handleTouchEnd)\n\n    for (let eventName of WHEEL_EVENT_NAMES) {\n      el.removeEventListener(eventName, this.handleWheel)\n    }\n  }\n\n  // Start / Stop\n  // ----------------------------------------------------------------------------------------------\n\n  private startScroll() {\n    if (!this.isScrolling) {\n      this.isScrolling = true\n      this.emitter.trigger('scrollStart', this.isRecentlyWheeled, this.isTouching)\n    }\n  }\n\n  endScroll() {\n    if (this.isScrolling) {\n      this.emitter.trigger('scrollEnd')\n      this.isScrolling = false\n      this.isRecentlyScrolled = true\n      this.isRecentlyWheeled = false\n      this.scrollWaiter.clear()\n      this.wheelWaiter.clear()\n    }\n  }\n\n  // Handlers\n  // ----------------------------------------------------------------------------------------------\n\n  handleScroll = () => {\n    this.startScroll()\n    this.emitter.trigger('scroll', this.isRecentlyWheeled, this.isTouching)\n    this.isRecentlyScrolled = true\n    this.scrollWaiter.request(500)\n  }\n\n  _handleScrollWaited() {\n    this.isRecentlyScrolled = false\n\n    // only end the scroll if not currently touching.\n    // if touching, the scrolling will end later, on touchend.\n    if (!this.isTouching) {\n      this.endScroll() // won't fire if already ended\n    }\n  }\n\n  // will fire *before* the scroll event is fired (might not cause a scroll)\n  handleWheel = () => {\n    this.isRecentlyWheeled = true\n    this.wheelWaiter.request(500)\n  }\n\n  _handleWheelWaited() {\n    this.isRecentlyWheeled = false\n  }\n\n  // will fire *before* the scroll event is fired (might not cause a scroll)\n  handleTouchStart = () => {\n    this.isTouching = true\n  }\n\n  handleTouchEnd = () => {\n    this.isTouching = false\n\n    // if the user ended their touch, and the scroll area wasn't moving,\n    // we consider this to be the end of the scroll.\n    if (!this.isRecentlyScrolled) {\n      this.endScroll() // won't fire if already ended\n    }\n  }\n}\n","import {\n  applyStyle,\n  translateRect, Rect, Point,\n  findElements,\n  computeInnerRect,\n  CssDimValue,\n  removeElement,\n} from '@fullcalendar/common'\nimport { ScrollListener } from './ScrollListener'\nimport { getScrollCanvasOrigin, getScrollFromLeftEdge } from './scroll-left-norm'\n\ninterface ElementGeom {\n  parentBound: Rect // relative to the canvas origin\n  naturalBound: Rect | null // of the el itself\n  elWidth: number\n  elHeight: number\n  textAlign: string\n}\n\nconst IS_MS_EDGE = typeof navigator !== 'undefined' && /Edge/.test(navigator.userAgent) // TODO: what about Chromeum-based Edge?\nconst STICKY_SELECTOR = '.fc-sticky'\n\n/*\nuseful beyond the native position:sticky for these reasons:\n- support in IE11\n- nice centering support\n\nREQUIREMENT: fc-sticky elements, if the fc-sticky className is taken away, should NOT have relative or absolute positioning.\nThis is because we attach the coords with JS, and the VDOM might take away the fc-sticky class but doesn't know kill the positioning.\n\nTODO: don't query text-align:center. isn't compatible with flexbox centering. instead, check natural X coord within parent container\n*/\nexport class StickyScrolling {\n  listener?: ScrollListener\n  usingRelative: boolean | null = null\n\n  constructor(\n    private scrollEl: HTMLElement,\n    private isRtl: boolean,\n  ) {\n    this.usingRelative =\n      !getStickySupported() || // IE11\n      // https://stackoverflow.com/questions/56835658/in-microsoft-edge-sticky-positioning-doesnt-work-when-combined-with-dir-rtl\n      (IS_MS_EDGE && isRtl)\n\n    if (this.usingRelative) {\n      this.listener = new ScrollListener(scrollEl)\n      this.listener.emitter.on('scrollEnd', this.updateSize)\n    }\n  }\n\n  destroy() {\n    if (this.listener) {\n      this.listener.destroy()\n    }\n  }\n\n  updateSize = () => {\n    let { scrollEl } = this\n    let els = findElements(scrollEl, STICKY_SELECTOR)\n    let elGeoms = this.queryElGeoms(els)\n    let viewportWidth = scrollEl.clientWidth\n    let viewportHeight = scrollEl.clientHeight\n\n    if (this.usingRelative) {\n      let elDestinations = this.computeElDestinations(elGeoms, viewportWidth) // read before prepPositioning\n\n      assignRelativePositions(els, elGeoms, elDestinations, viewportWidth, viewportHeight)\n    } else {\n      assignStickyPositions(els, elGeoms, viewportWidth)\n    }\n  }\n\n  queryElGeoms(els: HTMLElement[]): ElementGeom[] {\n    let { scrollEl, isRtl } = this\n    let canvasOrigin = getScrollCanvasOrigin(scrollEl)\n    let elGeoms: ElementGeom[] = []\n\n    for (let el of els) {\n      let parentBound = translateRect(\n        computeInnerRect(el.parentNode as HTMLElement, true, true), // weird way to call this!!!\n        -canvasOrigin.left,\n        -canvasOrigin.top,\n      )\n\n      let elRect = el.getBoundingClientRect()\n      let computedStyles = window.getComputedStyle(el)\n      let textAlign = window.getComputedStyle(el.parentNode as HTMLElement).textAlign // ask the parent\n      let naturalBound = null\n\n      if (textAlign === 'start') {\n        textAlign = isRtl ? 'right' : 'left'\n      } else if (textAlign === 'end') {\n        textAlign = isRtl ? 'left' : 'right'\n      }\n\n      if (computedStyles.position !== 'sticky') {\n        naturalBound = translateRect(\n          elRect,\n          -canvasOrigin.left - (parseFloat(computedStyles.left) || 0), // could be 'auto'\n          -canvasOrigin.top - (parseFloat(computedStyles.top) || 0),\n        )\n      }\n\n      elGeoms.push({\n        parentBound,\n        naturalBound,\n        elWidth: elRect.width,\n        elHeight: elRect.height,\n        textAlign,\n      })\n    }\n\n    return elGeoms\n  }\n\n  // only for IE\n  computeElDestinations(elGeoms: ElementGeom[], viewportWidth: number): Point[] {\n    let { scrollEl } = this\n    let viewportTop = scrollEl.scrollTop\n    let viewportLeft = getScrollFromLeftEdge(scrollEl)\n    let viewportRight = viewportLeft + viewportWidth\n\n    return elGeoms.map((elGeom) => {\n      let { elWidth, elHeight, parentBound, naturalBound } = elGeom\n      let destLeft // relative to canvas topleft\n      let destTop // \"\n\n      switch (elGeom.textAlign) {\n        case 'left':\n          destLeft = viewportLeft\n          break\n        case 'right':\n          destLeft = viewportRight - elWidth\n          break\n        case 'center':\n          destLeft = (viewportLeft + viewportRight) / 2 - elWidth / 2 /// noooo, use half-width insteadddddddd\n          break\n      }\n\n      destLeft = Math.min(destLeft, parentBound.right - elWidth)\n      destLeft = Math.max(destLeft, parentBound.left)\n\n      destTop = viewportTop\n      destTop = Math.min(destTop, parentBound.bottom - elHeight)\n      destTop = Math.max(destTop, naturalBound.top) // better to use natural top for upper bound\n\n      return { left: destLeft, top: destTop }\n    })\n  }\n}\n\nfunction assignRelativePositions(\n  els: HTMLElement[],\n  elGeoms: ElementGeom[],\n  elDestinations: Point[],\n  viewportWidth: number,\n  viewportHeight: number,\n) {\n  els.forEach((el, i) => {\n    let { naturalBound, parentBound } = elGeoms[i]\n    let parentWidth = parentBound.right - parentBound.left\n    let parentHeight = parentBound.bottom - parentBound.bottom\n    let left: CssDimValue\n    let top: CssDimValue\n\n    if (\n      parentWidth > viewportWidth ||\n      parentHeight > viewportHeight\n    ) {\n      left = elDestinations[i].left - naturalBound.left\n      top = elDestinations[i].top - naturalBound.top\n    } else { // if parent container can be completely in view, we don't need stickiness\n      left = ''\n      top = ''\n    }\n\n    applyStyle(el, {\n      position: 'relative',\n      left,\n      right: -left, // for rtl\n      top,\n    })\n  })\n}\n\nfunction assignStickyPositions(els: HTMLElement[], elGeoms: ElementGeom[], viewportWidth: number) {\n  els.forEach((el, i) => {\n    let { textAlign, elWidth, parentBound } = elGeoms[i]\n    let parentWidth = parentBound.right - parentBound.left\n    let left: CssDimValue\n\n    if (\n      textAlign === 'center' &&\n      parentWidth > viewportWidth\n    ) {\n      left = (viewportWidth - elWidth) / 2\n    } else { // if parent container can be completely in view, we don't need stickiness\n      left = ''\n    }\n\n    applyStyle(el, { // will already have fc-sticky class which makes it sticky\n      left,\n      right: left, // for when centered\n      top: 0,\n    })\n  })\n}\n\nlet _isStickySupported\n\nfunction getStickySupported() {\n  if (_isStickySupported == null) {\n    _isStickySupported = computeStickySupported()\n  }\n  return _isStickySupported\n}\n\nfunction computeStickySupported() {\n  let el = document.createElement('div')\n  el.style.position = 'sticky'\n  document.body.appendChild(el)\n  let val = window.getComputedStyle(el).position\n  removeElement(el)\n  return val === 'sticky'\n}\n","import {\n  createElement, ComponentChildren, createRef, Ref, BaseComponent, setRef,\n  ScrollerLike,\n  Scroller, OverflowValue,\n  getIsRtlScrollbarOnLeft,\n  isPropsEqual,\n} from '@fullcalendar/common'\n\nexport type ClippedOverflowValue = OverflowValue | 'scroll-hidden'\n\nexport interface ClippedScrollerProps {\n  overflowX: ClippedOverflowValue\n  overflowY: ClippedOverflowValue\n  liquid: boolean\n  maxHeight?: number // incompatible with liquid\n  children?: ComponentChildren\n  scrollerRef?: Ref<Scroller>\n  scrollerElRef?: Ref<HTMLElement>\n}\n\ninterface ClippedScrollerState {\n  yScrollbarWidth?: number\n  xScrollbarWidth?: number\n}\n\nexport class ClippedScroller extends BaseComponent<ClippedScrollerProps, ClippedScrollerState> implements ScrollerLike {\n  private elRef = createRef<HTMLDivElement>()\n  private scroller: Scroller\n\n  state = {\n    xScrollbarWidth: 0,\n    yScrollbarWidth: 0,\n  }\n\n  render() {\n    let { props, state, context } = this\n    let isScrollbarOnLeft = context.isRtl && getIsRtlScrollbarOnLeft()\n    let overcomeLeft = 0\n    let overcomeRight = 0\n    let overcomeBottom = 0\n\n    if (props.overflowX === 'scroll-hidden') {\n      overcomeBottom = state.xScrollbarWidth\n    }\n\n    if (props.overflowY === 'scroll-hidden') {\n      if (state.yScrollbarWidth != null) {\n        if (isScrollbarOnLeft) {\n          overcomeLeft = state.yScrollbarWidth\n        } else {\n          overcomeRight = state.yScrollbarWidth\n        }\n      }\n    }\n\n    return (\n      <div\n        ref={this.elRef}\n        className={'fc-scroller-harness' + (props.liquid ? ' fc-scroller-harness-liquid' : '')}\n      >\n        <Scroller\n          ref={this.handleScroller}\n          elRef={this.props.scrollerElRef}\n          overflowX={props.overflowX === 'scroll-hidden' ? 'scroll' : props.overflowX}\n          overflowY={props.overflowY === 'scroll-hidden' ? 'scroll' : props.overflowY}\n          overcomeLeft={overcomeLeft}\n          overcomeRight={overcomeRight}\n          overcomeBottom={overcomeBottom}\n          maxHeight={\n            typeof props.maxHeight === 'number'\n              ? (props.maxHeight + (props.overflowX === 'scroll-hidden' ? state.xScrollbarWidth : 0))\n              : ''\n          }\n          liquid={props.liquid}\n          liquidIsAbsolute\n        >\n          {props.children}\n        </Scroller>\n      </div>\n    )\n  }\n\n  handleScroller = (scroller: Scroller) => {\n    this.scroller = scroller\n    setRef(this.props.scrollerRef, scroller)\n  }\n\n  componentDidMount() {\n    this.handleSizing()\n    this.context.addResizeHandler(this.handleSizing)\n  }\n\n  componentDidUpdate(prevProps: ClippedScrollerProps) {\n    if (!isPropsEqual(prevProps, this.props)) { // an external change?\n      this.handleSizing()\n    }\n  }\n\n  componentWillUnmount() {\n    this.context.removeResizeHandler(this.handleSizing)\n  }\n\n  handleSizing = () => {\n    let { props } = this\n\n    if (props.overflowY === 'scroll-hidden') {\n      this.setState({ yScrollbarWidth: this.scroller.getYScrollbarWidth() })\n    }\n\n    if (props.overflowX === 'scroll-hidden') {\n      this.setState({ xScrollbarWidth: this.scroller.getXScrollbarWidth() })\n    }\n  }\n\n  needsXScrolling() {\n    return this.scroller.needsXScrolling()\n  }\n\n  needsYScrolling() {\n    return this.scroller.needsYScrolling()\n  }\n}\n","import { ScrollListener } from './ScrollListener'\nimport { setScrollFromLeftEdge } from './scroll-left-norm'\n\nexport class ScrollSyncer {\n  private masterEl: HTMLElement\n  private scrollListeners: ScrollListener[]\n  private isPaused: boolean = false\n\n  constructor(\n    private isVertical: boolean,\n    private scrollEls: HTMLElement[],\n  ) {\n    this.scrollListeners = scrollEls.map((el) => this.bindScroller(el))\n  }\n\n  destroy() {\n    for (let scrollListener of this.scrollListeners) {\n      scrollListener.destroy()\n    }\n  }\n\n  bindScroller(el: HTMLElement) {\n    let { scrollEls, isVertical } = this\n    let scrollListener = new ScrollListener(el)\n\n    const onScroll = (isWheel, isTouch) => {\n      if (!this.isPaused) {\n        if (!this.masterEl || (this.masterEl !== el && (isWheel || isTouch))) {\n          this.assignMaster(el)\n        }\n\n        if (this.masterEl === el) { // dealing with current\n          for (let otherEl of scrollEls) {\n            if (otherEl !== el) {\n              if (isVertical) {\n                otherEl.scrollTop = el.scrollTop\n              } else {\n                otherEl.scrollLeft = el.scrollLeft\n              }\n            }\n          }\n        }\n      }\n    }\n\n    const onScrollEnd = () => {\n      if (this.masterEl === el) {\n        this.masterEl = null\n      }\n    }\n\n    scrollListener.emitter.on('scroll', onScroll)\n    scrollListener.emitter.on('scrollEnd', onScrollEnd)\n\n    return scrollListener\n  }\n\n  assignMaster(el: HTMLElement) {\n    this.masterEl = el\n\n    for (let scrollListener of this.scrollListeners) {\n      if (scrollListener.el !== el) {\n        scrollListener.endScroll() // to prevent residual scrolls from reclaiming master\n      }\n    }\n  }\n\n  /*\n  will normalize the scrollLeft value\n  */\n  forceScrollLeft(scrollLeft: number) {\n    this.isPaused = true\n\n    for (let listener of this.scrollListeners) {\n      setScrollFromLeftEdge(listener.el, scrollLeft)\n    }\n\n    this.isPaused = false\n  }\n\n  forceScrollTop(top: number) {\n    this.isPaused = true\n\n    for (let listener of this.scrollListeners) {\n      listener.el.scrollTop = top\n    }\n\n    this.isPaused = false\n  }\n}\n","import {\n  createElement, VNode, Fragment,\n  BaseComponent,\n  isArraysEqual,\n  findElements,\n  mapHash,\n  RefMap,\n  ColProps, CssDimValue, hasShrinkWidth, renderMicroColGroup,\n  ScrollGridProps, ScrollGridSectionConfig, ColGroupConfig,\n  getScrollGridClassNames, getSectionClassNames, getSectionHasLiquidHeight, getAllowYScrolling, renderChunkContent, computeShrinkWidth,\n  getIsRtlScrollbarOnLeft,\n  setRef,\n  sanitizeShrinkWidth,\n  isPropsEqual,\n  compareObjs,\n  isColPropsEqual,\n  getScrollbarWidths,\n  memoizeArraylike,\n  collectFromHash,\n  memoizeHashlike,\n  ScrollGridChunkConfig,\n  getCanVGrowWithinCell,\n  config,\n} from '@fullcalendar/common'\nimport { StickyScrolling } from './StickyScrolling'\nimport { ClippedScroller, ClippedOverflowValue } from './ClippedScroller'\nimport { ScrollSyncer } from './ScrollSyncer'\n\ninterface ScrollGridState {\n  shrinkWidths: number[] // for only one col within each vertical stack of chunks\n  forceYScrollbars: boolean // null means not computed yet\n  forceXScrollbars: boolean // \"\n  scrollerClientWidths: { [index: string]: number } // why not use array?\n  scrollerClientHeights: { [index: string]: number }\n  sectionRowMaxHeights: number[][][]\n}\n\ninterface ColGroupStat {\n  hasShrinkCol: boolean\n  totalColWidth: number\n  totalColMinWidth: number\n  allowXScrolling: boolean\n  width?: CssDimValue\n  cols: ColProps[]\n}\n\n/*\nTODO: make <ScrollGridSection> subcomponent\nNOTE: doesn't support collapsibleWidth (which is sortof a hack anyway)\n*/\nexport class ScrollGrid extends BaseComponent<ScrollGridProps, ScrollGridState> {\n  private compileColGroupStats = memoizeArraylike(compileColGroupStat, isColGroupStatsEqual)\n  private renderMicroColGroups = memoizeArraylike(renderMicroColGroup) // yucky to memoize VNodes, but much more efficient for consumers\n  private clippedScrollerRefs = new RefMap<ClippedScroller>()\n\n  // doesn't hold non-scrolling els used just for padding\n  private scrollerElRefs = new RefMap<HTMLElement>(this._handleScrollerEl.bind(this))\n\n  private chunkElRefs = new RefMap<HTMLTableCellElement>(this._handleChunkEl.bind(this))\n  private getStickyScrolling = memoizeArraylike(initStickyScrolling, null, destroyStickyScrolling)\n  private getScrollSyncersBySection = memoizeHashlike(initScrollSyncer.bind(this, true), null, destroyScrollSyncer)\n  private getScrollSyncersByColumn = memoizeHashlike(initScrollSyncer.bind(this, false), null, destroyScrollSyncer)\n  private stickyScrollings: StickyScrolling[] = []\n  private scrollSyncersBySection: { [sectionI: string]: ScrollSyncer } = {}\n  private scrollSyncersByColumn: { [columnI: string]: ScrollSyncer } = {}\n\n  // for row-height-syncing\n  private rowUnstableMap = new Map<HTMLTableRowElement, boolean>() // no need to groom. always self-cancels\n  private rowInnerMaxHeightMap = new Map<HTMLTableRowElement, number>()\n  private anyRowHeightsChanged = false\n\n  private lastSizingDate: Date\n  private recentSizingCnt = 0\n\n  state: ScrollGridState = {\n    shrinkWidths: [],\n    forceYScrollbars: false,\n    forceXScrollbars: false,\n    scrollerClientWidths: {},\n    scrollerClientHeights: {},\n    sectionRowMaxHeights: [],\n  }\n\n  render(): VNode {\n    let { props, state, context } = this\n    let { shrinkWidths } = state\n\n    let colGroupStats = this.compileColGroupStats(props.colGroups.map((colGroup) => [colGroup]))\n    let microColGroupNodes = this.renderMicroColGroups(colGroupStats.map((stat, i) => [stat.cols, shrinkWidths[i]]))\n    let classNames = getScrollGridClassNames(props.liquid, context)\n\n    // yuck\n    let indices: [ number, number ][] = []\n    let [sectionCnt, chunksPerSection] = this.getDims()\n    for (let sectionI = 0; sectionI < sectionCnt; sectionI += 1) {\n      for (let chunkI = 0; chunkI < chunksPerSection; chunkI += 1) {\n        indices.push([sectionI, chunkI])\n      }\n    }\n\n    // TODO: make DRY\n    let sectionConfigs = props.sections\n    let configCnt = sectionConfigs.length\n    let configI = 0\n    let currentConfig: ScrollGridSectionConfig\n    let headSectionNodes: VNode[] = []\n    let bodySectionNodes: VNode[] = []\n    let footSectionNodes: VNode[] = []\n\n    while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'header') {\n      headSectionNodes.push(this.renderSection(\n        currentConfig,\n        configI,\n        colGroupStats,\n        microColGroupNodes,\n        state.sectionRowMaxHeights,\n        true,\n      ))\n      configI += 1\n    }\n\n    while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'body') {\n      bodySectionNodes.push(this.renderSection(\n        currentConfig,\n        configI,\n        colGroupStats,\n        microColGroupNodes,\n        state.sectionRowMaxHeights,\n        false,\n      ))\n      configI += 1\n    }\n\n    while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'footer') {\n      footSectionNodes.push(this.renderSection(\n        currentConfig,\n        configI,\n        colGroupStats,\n        microColGroupNodes,\n        state.sectionRowMaxHeights,\n        true,\n      ))\n      configI += 1\n    }\n\n    const isBuggy = !getCanVGrowWithinCell() // see NOTE in SimpleScrollGrid\n    const roleAttrs = { role: 'rowgroup' }\n\n    return createElement(\n      'table',\n      {\n        ref: props.elRef,\n        role: 'grid',\n        className: classNames.join(' '),\n      },\n      renderMacroColGroup(colGroupStats, shrinkWidths),\n      Boolean(!isBuggy && headSectionNodes.length) && createElement('thead', roleAttrs, ...headSectionNodes),\n      Boolean(!isBuggy && bodySectionNodes.length) && createElement('tbody', roleAttrs, ...bodySectionNodes),\n      Boolean(!isBuggy && footSectionNodes.length) && createElement('tfoot', roleAttrs, ...footSectionNodes),\n      isBuggy && createElement('tbody', roleAttrs, ...headSectionNodes, ...bodySectionNodes, ...footSectionNodes),\n    )\n  }\n\n  renderSection(\n    sectionConfig: ScrollGridSectionConfig,\n    sectionIndex: number,\n    colGroupStats: ColGroupStat[],\n    microColGroupNodes: VNode[],\n    sectionRowMaxHeights: number[][][],\n    isHeader: boolean,\n  ): VNode {\n    if ('outerContent' in sectionConfig) {\n      return (\n        <Fragment key={sectionConfig.key}>\n          {sectionConfig.outerContent}\n        </Fragment>\n      )\n    }\n\n    return (\n      <tr\n        key={sectionConfig.key}\n        role=\"presentation\"\n        className={getSectionClassNames(sectionConfig, this.props.liquid).join(' ')}\n      >\n        {sectionConfig.chunks.map((chunkConfig, i) => this.renderChunk(\n          sectionConfig,\n          sectionIndex,\n          colGroupStats[i],\n          microColGroupNodes[i],\n          chunkConfig,\n          i,\n          (sectionRowMaxHeights[sectionIndex] || [])[i] || [],\n          isHeader,\n        ))}\n      </tr>\n    )\n  }\n\n  renderChunk(\n    sectionConfig: ScrollGridSectionConfig,\n    sectionIndex: number,\n    colGroupStat: ColGroupStat | undefined,\n    microColGroupNode: VNode | undefined,\n    chunkConfig: ScrollGridChunkConfig,\n    chunkIndex: number,\n    rowHeights: number[],\n    isHeader: boolean,\n  ): VNode {\n    if ('outerContent' in chunkConfig) {\n      return (\n        <Fragment key={chunkConfig.key}>\n          {chunkConfig.outerContent}\n        </Fragment>\n      )\n    }\n\n    let { state } = this\n    let { scrollerClientWidths, scrollerClientHeights } = state\n\n    let [sectionCnt, chunksPerSection] = this.getDims()\n    let index = sectionIndex * chunksPerSection + chunkIndex\n    let sideScrollIndex = (!this.context.isRtl || getIsRtlScrollbarOnLeft()) ? chunksPerSection - 1 : 0\n    let isVScrollSide = chunkIndex === sideScrollIndex\n    let isLastSection = sectionIndex === sectionCnt - 1\n\n    let forceXScrollbars = isLastSection && state.forceXScrollbars // NOOOO can result in `null`\n    let forceYScrollbars = isVScrollSide && state.forceYScrollbars // NOOOO can result in `null`\n\n    let allowXScrolling = colGroupStat && colGroupStat.allowXScrolling // rename?\n    let allowYScrolling = getAllowYScrolling(this.props, sectionConfig) // rename? do in section func?\n\n    let chunkVGrow = getSectionHasLiquidHeight(this.props, sectionConfig) // do in section func?\n    let expandRows = sectionConfig.expandRows && chunkVGrow\n    let tableMinWidth = (colGroupStat && colGroupStat.totalColMinWidth) || ''\n\n    let content = renderChunkContent(sectionConfig, chunkConfig, {\n      tableColGroupNode: microColGroupNode,\n      tableMinWidth,\n      clientWidth: scrollerClientWidths[index] !== undefined ? scrollerClientWidths[index] : null,\n      clientHeight: scrollerClientHeights[index] !== undefined ? scrollerClientHeights[index] : null,\n      expandRows,\n      syncRowHeights: Boolean(sectionConfig.syncRowHeights),\n      rowSyncHeights: rowHeights,\n      reportRowHeightChange: this.handleRowHeightChange,\n    }, isHeader)\n\n    let overflowX: ClippedOverflowValue =\n      forceXScrollbars ? (isLastSection ? 'scroll' : 'scroll-hidden') :\n        !allowXScrolling ? 'hidden' :\n          (isLastSection ? 'auto' : 'scroll-hidden')\n\n    let overflowY: ClippedOverflowValue =\n      forceYScrollbars ? (isVScrollSide ? 'scroll' : 'scroll-hidden') :\n        !allowYScrolling ? 'hidden' :\n          (isVScrollSide ? 'auto' : 'scroll-hidden')\n\n    // it *could* be possible to reduce DOM wrappers by only doing a ClippedScroller when allowXScrolling or allowYScrolling,\n    // but if these values were to change, the inner components would be unmounted/remounted because of the parent change.\n    content = (\n      <ClippedScroller\n        ref={this.clippedScrollerRefs.createRef(index)}\n        scrollerElRef={this.scrollerElRefs.createRef(index)}\n        overflowX={overflowX}\n        overflowY={overflowY}\n        liquid={chunkVGrow}\n        maxHeight={sectionConfig.maxHeight}\n      >\n        {content}\n      </ClippedScroller>\n    )\n\n    return createElement(\n      isHeader ? 'th' : 'td',\n      {\n        key: chunkConfig.key,\n        ref: this.chunkElRefs.createRef(index) as any,\n        role: 'presentation',\n      },\n      content,\n    )\n  }\n\n  componentDidMount() {\n    this.updateScrollSyncers()\n    this.handleSizing(false)\n\n    this.context.addResizeHandler(this.handleSizing)\n  }\n\n  componentDidUpdate(prevProps: ScrollGridProps, prevState: ScrollGridState) {\n    this.updateScrollSyncers()\n\n    // TODO: need better solution when state contains non-sizing things\n    this.handleSizing(false, prevState.sectionRowMaxHeights !== this.state.sectionRowMaxHeights)\n  }\n\n  componentWillUnmount() {\n    this.context.removeResizeHandler(this.handleSizing)\n\n    this.destroyStickyScrolling()\n    this.destroyScrollSyncers()\n  }\n\n  handleSizing = (isForcedResize: boolean, sectionRowMaxHeightsChanged?: boolean) => {\n    if (!this.allowSizing()) {\n      return\n    }\n\n    if (!sectionRowMaxHeightsChanged) { // something else changed, probably external\n      this.anyRowHeightsChanged = true\n    }\n\n    let otherState: Partial<ScrollGridState> = {}\n\n    // if reacting to self-change of sectionRowMaxHeightsChanged, or not stable, don't do anything\n    if (isForcedResize || (!sectionRowMaxHeightsChanged && !this.rowUnstableMap.size)) {\n      otherState.sectionRowMaxHeights = this.computeSectionRowMaxHeights()\n    }\n\n    this.setState({\n      shrinkWidths: this.computeShrinkWidths(),\n      ...this.computeScrollerDims(),\n      ...(otherState as any), // wtf\n    }, () => {\n      if (!this.rowUnstableMap.size) {\n        this.updateStickyScrolling() // needs to happen AFTER final positioning committed to DOM\n      }\n    })\n  }\n\n  allowSizing() {\n    let now = new Date()\n\n    if (\n      !this.lastSizingDate ||\n      now.valueOf() > this.lastSizingDate.valueOf() + config.SCROLLGRID_RESIZE_INTERVAL\n    ) {\n      this.lastSizingDate = now\n      this.recentSizingCnt = 0\n      return true\n    }\n\n    return (this.recentSizingCnt += 1) <= 10\n  }\n\n  handleRowHeightChange = (rowEl: HTMLTableRowElement, isStable: boolean) => {\n    let { rowUnstableMap, rowInnerMaxHeightMap } = this\n\n    if (!isStable) {\n      rowUnstableMap.set(rowEl, true)\n    } else {\n      rowUnstableMap.delete(rowEl)\n\n      let innerMaxHeight = getRowInnerMaxHeight(rowEl)\n      if (!rowInnerMaxHeightMap.has(rowEl) || rowInnerMaxHeightMap.get(rowEl) !== innerMaxHeight) {\n        rowInnerMaxHeightMap.set(rowEl, innerMaxHeight)\n        this.anyRowHeightsChanged = true\n      }\n\n      if (!rowUnstableMap.size && this.anyRowHeightsChanged) {\n        this.anyRowHeightsChanged = false\n        this.setState({\n          sectionRowMaxHeights: this.computeSectionRowMaxHeights(),\n        })\n      }\n    }\n  }\n\n  computeShrinkWidths() {\n    let colGroupStats = this.compileColGroupStats(this.props.colGroups.map((colGroup) => [colGroup]))\n    let [sectionCnt, chunksPerSection] = this.getDims()\n    let cnt = sectionCnt * chunksPerSection\n    let shrinkWidths: number[] = []\n\n    colGroupStats.forEach((colGroupStat, i) => {\n      if (colGroupStat.hasShrinkCol) {\n        let chunkEls = this.chunkElRefs.collect(i, cnt, chunksPerSection) // in one col\n        shrinkWidths[i] = computeShrinkWidth(chunkEls)\n      }\n    })\n\n    return shrinkWidths\n  }\n\n  // has the side effect of grooming rowInnerMaxHeightMap\n  // TODO: somehow short-circuit if there are no new height changes\n  private computeSectionRowMaxHeights() {\n    let newHeightMap = new Map<HTMLTableRowElement, number>()\n\n    let [sectionCnt, chunksPerSection] = this.getDims()\n    let sectionRowMaxHeights: number[][][] = []\n\n    for (let sectionI = 0; sectionI < sectionCnt; sectionI += 1) {\n      let sectionConfig = this.props.sections[sectionI]\n      let assignableHeights: number[][] = [] // chunk, row\n\n      if (sectionConfig && sectionConfig.syncRowHeights) {\n        let rowHeightsByChunk: number[][] = []\n\n        for (let chunkI = 0; chunkI < chunksPerSection; chunkI += 1) {\n          let index = sectionI * chunksPerSection + chunkI\n          let rowHeights: number[] = []\n\n          let chunkEl = this.chunkElRefs.currentMap[index]\n          if (chunkEl) {\n            rowHeights = findElements(chunkEl, '.fc-scrollgrid-sync-table tr').map((rowEl: HTMLTableRowElement) => {\n              let max = getRowInnerMaxHeight(rowEl)\n              newHeightMap.set(rowEl, max)\n              return max\n            })\n          } else {\n            rowHeights = []\n          }\n\n          rowHeightsByChunk.push(rowHeights)\n        }\n\n        let rowCnt = rowHeightsByChunk[0].length\n        let isEqualRowCnt = true\n\n        for (let chunkI = 1; chunkI < chunksPerSection; chunkI += 1) {\n          let isOuterContent = sectionConfig.chunks[chunkI] && sectionConfig.chunks[chunkI].outerContent !== undefined // can be null\n\n          if (!isOuterContent && rowHeightsByChunk[chunkI].length !== rowCnt) { // skip outer content\n            isEqualRowCnt = false\n            break\n          }\n        }\n\n        if (!isEqualRowCnt) {\n          let chunkHeightSums: number[] = []\n          for (let chunkI = 0; chunkI < chunksPerSection; chunkI += 1) {\n            chunkHeightSums.push(\n              sumNumbers(rowHeightsByChunk[chunkI]) + rowHeightsByChunk[chunkI].length, // add in border\n            )\n          }\n\n          let maxTotalSum = Math.max(...chunkHeightSums)\n\n          for (let chunkI = 0; chunkI < chunksPerSection; chunkI += 1) {\n            let rowInChunkCnt = rowHeightsByChunk[chunkI].length\n            let rowInChunkTotalHeight = maxTotalSum - rowInChunkCnt // subtract border\n\n            // height of non-first row. we do this to avoid rounding, because it's unreliable within a table\n            let rowInChunkHeightOthers = Math.floor(rowInChunkTotalHeight / rowInChunkCnt)\n\n            // whatever is leftover goes to the first row\n            let rowInChunkHeightFirst = rowInChunkTotalHeight - rowInChunkHeightOthers * (rowInChunkCnt - 1)\n\n            let rowInChunkHeights: number[] = []\n            let row = 0\n\n            if (row < rowInChunkCnt) {\n              rowInChunkHeights.push(rowInChunkHeightFirst)\n              row += 1\n            }\n\n            while (row < rowInChunkCnt) {\n              rowInChunkHeights.push(rowInChunkHeightOthers)\n              row += 1\n            }\n\n            assignableHeights.push(rowInChunkHeights)\n          }\n        } else {\n          for (let chunkI = 0; chunkI < chunksPerSection; chunkI += 1) {\n            assignableHeights.push([])\n          }\n\n          for (let row = 0; row < rowCnt; row += 1) {\n            let rowHeightsAcrossChunks: number[] = []\n\n            for (let chunkI = 0; chunkI < chunksPerSection; chunkI += 1) {\n              let h = rowHeightsByChunk[chunkI][row]\n              if (h != null) { // protect against outerContent\n                rowHeightsAcrossChunks.push(h)\n              }\n            }\n\n            let maxHeight = Math.max(...rowHeightsAcrossChunks)\n\n            for (let chunkI = 0; chunkI < chunksPerSection; chunkI += 1) {\n              assignableHeights[chunkI].push(maxHeight)\n            }\n          }\n        }\n      }\n\n      sectionRowMaxHeights.push(assignableHeights)\n    }\n\n    this.rowInnerMaxHeightMap = newHeightMap\n\n    return sectionRowMaxHeights\n  }\n\n  computeScrollerDims() {\n    let scrollbarWidth = getScrollbarWidths()\n    let [sectionCnt, chunksPerSection] = this.getDims()\n    let sideScrollI = (!this.context.isRtl || getIsRtlScrollbarOnLeft()) ? chunksPerSection - 1 : 0\n    let lastSectionI = sectionCnt - 1\n    let currentScrollers = this.clippedScrollerRefs.currentMap\n    let scrollerEls = this.scrollerElRefs.currentMap\n    let forceYScrollbars = false\n    let forceXScrollbars = false\n    let scrollerClientWidths: { [index: string]: number } = {}\n    let scrollerClientHeights: { [index: string]: number } = {}\n\n    for (let sectionI = 0; sectionI < sectionCnt; sectionI += 1) { // along edge\n      let index = sectionI * chunksPerSection + sideScrollI\n      let scroller = currentScrollers[index]\n\n      if (scroller && scroller.needsYScrolling()) {\n        forceYScrollbars = true\n        break\n      }\n    }\n\n    for (let chunkI = 0; chunkI < chunksPerSection; chunkI += 1) { // along last row\n      let index = lastSectionI * chunksPerSection + chunkI\n      let scroller = currentScrollers[index]\n\n      if (scroller && scroller.needsXScrolling()) {\n        forceXScrollbars = true\n        break\n      }\n    }\n\n    for (let sectionI = 0; sectionI < sectionCnt; sectionI += 1) {\n      for (let chunkI = 0; chunkI < chunksPerSection; chunkI += 1) {\n        let index = sectionI * chunksPerSection + chunkI\n        let scrollerEl = scrollerEls[index]\n\n        if (scrollerEl) {\n          // TODO: weird way to get this. need harness b/c doesn't include table borders\n          let harnessEl = scrollerEl.parentNode as HTMLElement\n\n          scrollerClientWidths[index] = Math.floor(\n            harnessEl.getBoundingClientRect().width - (\n              (chunkI === sideScrollI && forceYScrollbars)\n                ? scrollbarWidth.y // use global because scroller might not have scrollbars yet but will need them in future\n                : 0\n            ),\n          )\n\n          scrollerClientHeights[index] = Math.floor(\n            harnessEl.getBoundingClientRect().height - (\n              (sectionI === lastSectionI && forceXScrollbars)\n                ? scrollbarWidth.x // use global because scroller might not have scrollbars yet but will need them in future\n                : 0\n            ),\n          )\n        }\n      }\n    }\n\n    return { forceYScrollbars, forceXScrollbars, scrollerClientWidths, scrollerClientHeights }\n  }\n\n  updateStickyScrolling() {\n    let { isRtl } = this.context\n    let argsByKey = this.scrollerElRefs.getAll().map(\n      (scrollEl) => [scrollEl, isRtl] as [ HTMLElement, boolean ],\n    )\n\n    let stickyScrollings = this.getStickyScrolling(argsByKey)\n\n    stickyScrollings.forEach((stickyScrolling) => stickyScrolling.updateSize())\n\n    this.stickyScrollings = stickyScrollings\n  }\n\n  destroyStickyScrolling() {\n    this.stickyScrollings.forEach(destroyStickyScrolling)\n  }\n\n  updateScrollSyncers() {\n    let [sectionCnt, chunksPerSection] = this.getDims()\n    let cnt = sectionCnt * chunksPerSection\n    let scrollElsBySection: { [sectionI: string]: HTMLElement[] } = {}\n    let scrollElsByColumn: { [colI: string]: HTMLElement[] } = {}\n    let scrollElMap = this.scrollerElRefs.currentMap\n\n    for (let sectionI = 0; sectionI < sectionCnt; sectionI += 1) {\n      let startIndex = sectionI * chunksPerSection\n      let endIndex = startIndex + chunksPerSection\n\n      scrollElsBySection[sectionI] = collectFromHash(scrollElMap, startIndex, endIndex, 1) // use the filtered\n    }\n\n    for (let col = 0; col < chunksPerSection; col += 1) {\n      scrollElsByColumn[col] = this.scrollerElRefs.collect(col, cnt, chunksPerSection) // DON'T use the filtered\n    }\n\n    this.scrollSyncersBySection = this.getScrollSyncersBySection(scrollElsBySection)\n    this.scrollSyncersByColumn = this.getScrollSyncersByColumn(scrollElsByColumn)\n  }\n\n  destroyScrollSyncers() {\n    mapHash(this.scrollSyncersBySection, destroyScrollSyncer)\n    mapHash(this.scrollSyncersByColumn, destroyScrollSyncer)\n  }\n\n  getChunkConfigByIndex(index: number) { // somewhat expensive for something so simple\n    let chunksPerSection = this.getDims()[1]\n    let sectionI = Math.floor(index / chunksPerSection)\n    let chunkI = index % chunksPerSection\n    let sectionConfig = this.props.sections[sectionI]\n\n    return sectionConfig && sectionConfig.chunks[chunkI]\n  }\n\n  forceScrollLeft(col: number, scrollLeft: number) {\n    let scrollSyncer = this.scrollSyncersByColumn[col]\n\n    if (scrollSyncer) {\n      scrollSyncer.forceScrollLeft(scrollLeft)\n    }\n  }\n\n  forceScrollTop(sectionI: number, scrollTop: number) {\n    let scrollSyncer = this.scrollSyncersBySection[sectionI]\n\n    if (scrollSyncer) {\n      scrollSyncer.forceScrollTop(scrollTop)\n    }\n  }\n\n  _handleChunkEl(chunkEl: HTMLTableCellElement | null, key: string) {\n    let chunkConfig = this.getChunkConfigByIndex(parseInt(key, 10))\n\n    if (chunkConfig) { // null if section disappeared. bad, b/c won't null-set the elRef\n      setRef(chunkConfig.elRef, chunkEl)\n    }\n  }\n\n  _handleScrollerEl(scrollerEl: HTMLElement | null, key: string) {\n    let chunkConfig = this.getChunkConfigByIndex(parseInt(key, 10))\n\n    if (chunkConfig) { // null if section disappeared. bad, b/c won't null-set the elRef\n      setRef(chunkConfig.scrollerElRef, scrollerEl)\n    }\n  }\n\n  getDims() {\n    let sectionCnt = this.props.sections.length\n    let chunksPerSection = sectionCnt ? this.props.sections[0].chunks.length : 0\n\n    return [sectionCnt, chunksPerSection]\n  }\n}\n\nScrollGrid.addStateEquality({\n  shrinkWidths: isArraysEqual,\n  scrollerClientWidths: isPropsEqual,\n  scrollerClientHeights: isPropsEqual,\n})\n\nfunction sumNumbers(numbers: number[]) { // TODO: general util\n  let sum = 0\n\n  for (let n of numbers) {\n    sum += n\n  }\n\n  return sum\n}\n\nfunction getRowInnerMaxHeight(rowEl: HTMLElement) {\n  let innerHeights = findElements(rowEl, '.fc-scrollgrid-sync-inner').map(getElHeight)\n\n  if (innerHeights.length) {\n    return Math.max(...innerHeights)\n  }\n\n  return 0\n}\n\nfunction getElHeight(el: HTMLElement) {\n  return el.offsetHeight // better to deal with integers, for rounding, for PureComponent\n}\n\nfunction renderMacroColGroup(colGroupStats: ColGroupStat[], shrinkWidths: number[]) {\n  let children = colGroupStats.map((colGroupStat, i) => {\n    let width = colGroupStat.width\n\n    if (width === 'shrink') {\n      width = colGroupStat.totalColWidth + sanitizeShrinkWidth(shrinkWidths[i]) + 1 // +1 for border :(\n    }\n\n    return ( // eslint-disable-next-line react/jsx-key\n      <col style={{ width }} />\n    )\n  })\n\n  return createElement('colgroup', {}, ...children)\n}\n\nfunction compileColGroupStat(colGroupConfig: ColGroupConfig): ColGroupStat {\n  let totalColWidth = sumColProp(colGroupConfig.cols, 'width') // excludes \"shrink\"\n  let totalColMinWidth = sumColProp(colGroupConfig.cols, 'minWidth')\n  let hasShrinkCol = hasShrinkWidth(colGroupConfig.cols)\n  let allowXScrolling = colGroupConfig.width !== 'shrink' && Boolean(totalColWidth || totalColMinWidth || hasShrinkCol)\n\n  return {\n    hasShrinkCol,\n    totalColWidth,\n    totalColMinWidth,\n    allowXScrolling,\n    cols: colGroupConfig.cols,\n    width: colGroupConfig.width,\n  }\n}\n\nfunction sumColProp(cols: ColProps[], propName: string) {\n  let total = 0\n\n  for (let col of cols) {\n    let val = col[propName]\n\n    if (typeof val === 'number') {\n      total += val * (col.span || 1)\n    }\n  }\n\n  return total\n}\n\nconst COL_GROUP_STAT_EQUALITY = {\n  cols: isColPropsEqual,\n}\n\nfunction isColGroupStatsEqual(stat0: ColGroupStat, stat1: ColGroupStat): boolean {\n  return compareObjs(stat0, stat1, COL_GROUP_STAT_EQUALITY)\n}\n\n// for memoizers...\n\nfunction initScrollSyncer(isVertical: boolean, ...scrollEls: HTMLElement[]) {\n  return new ScrollSyncer(isVertical, scrollEls)\n}\n\nfunction destroyScrollSyncer(scrollSyncer: ScrollSyncer) {\n  scrollSyncer.destroy()\n}\n\nfunction initStickyScrolling(scrollEl: HTMLElement, isRtl: boolean) {\n  return new StickyScrolling(scrollEl, isRtl)\n}\n\nfunction destroyStickyScrolling(stickyScrolling: StickyScrolling) {\n  stickyScrolling.destroy()\n}\n","import {\n  config, computeVisibleDayRange, Duration, DateProfile, asCleanDays, addDays, wholeDivideDurations, DateMarker,\n  startOfDay, createDuration, DateEnv, diffWholeDays, asRoughMs, createFormatter, greatestDurationDenominator,\n  asRoughMinutes, padStart, asRoughSeconds, DateRange, isInt, DateProfileGenerator, BaseOptionsRefined,\n} from '@fullcalendar/common'\n\nexport interface TimelineDateProfile {\n  labelInterval: Duration\n  slotDuration: Duration\n  slotsPerLabel: number\n  headerFormats: any\n  isTimeScale: boolean\n  largeUnit: string\n  emphasizeWeeks: boolean\n  snapDuration: Duration\n  snapsPerSlot: number\n  normalizedRange: DateRange // snaps to unit. adds in slotMinTime/slotMaxTime\n  timeWindowMs: number\n  slotDates: DateMarker[]\n  isWeekStarts: boolean[]\n  snapDiffToIndex: number[]\n  snapIndexToDiff: number[]\n  snapCnt: number\n  slotCnt: number\n  cellRows: TimelineHeaderCell[][]\n}\n\nexport interface TimelineHeaderCell {\n  date: DateMarker\n  text: string\n  rowUnit: string\n  colspan: number\n  isWeekStart: boolean\n}\n\nconst MIN_AUTO_LABELS = 18 // more than `12` months but less that `24` hours\nconst MAX_AUTO_SLOTS_PER_LABEL = 6 // allows 6 10-min slots in an hour\nconst MAX_AUTO_CELLS = 200 // allows 4-days to have a :30 slot duration\nconfig.MAX_TIMELINE_SLOTS = 1000\n\n// potential nice values for slot-duration and interval-duration\nconst STOCK_SUB_DURATIONS = [ // from largest to smallest\n  { years: 1 },\n  { months: 1 },\n  { days: 1 },\n  { hours: 1 },\n  { minutes: 30 },\n  { minutes: 15 },\n  { minutes: 10 },\n  { minutes: 5 },\n  { minutes: 1 },\n  { seconds: 30 },\n  { seconds: 15 },\n  { seconds: 10 },\n  { seconds: 5 },\n  { seconds: 1 },\n  { milliseconds: 500 },\n  { milliseconds: 100 },\n  { milliseconds: 10 },\n  { milliseconds: 1 },\n]\n\nexport function buildTimelineDateProfile(\n  dateProfile: DateProfile,\n  dateEnv: DateEnv,\n  allOptions: BaseOptionsRefined,\n  dateProfileGenerator: DateProfileGenerator,\n): TimelineDateProfile {\n  let tDateProfile = {\n    labelInterval: allOptions.slotLabelInterval,\n    slotDuration: allOptions.slotDuration,\n  } as TimelineDateProfile\n\n  validateLabelAndSlot(tDateProfile, dateProfile, dateEnv) // validate after computed grid duration\n  ensureLabelInterval(tDateProfile, dateProfile, dateEnv)\n  ensureSlotDuration(tDateProfile, dateProfile, dateEnv)\n\n  let input = allOptions.slotLabelFormat\n  let rawFormats =\n    Array.isArray(input) ? input :\n      (input != null) ? [input] :\n        computeHeaderFormats(tDateProfile, dateProfile, dateEnv, allOptions)\n\n  tDateProfile.headerFormats = rawFormats.map((rawFormat) => createFormatter(rawFormat))\n\n  tDateProfile.isTimeScale = Boolean(tDateProfile.slotDuration.milliseconds)\n\n  let largeUnit = null\n  if (!tDateProfile.isTimeScale) {\n    const slotUnit = greatestDurationDenominator(tDateProfile.slotDuration).unit\n    if (/year|month|week/.test(slotUnit)) {\n      largeUnit = slotUnit\n    }\n  }\n\n  tDateProfile.largeUnit = largeUnit\n\n  tDateProfile.emphasizeWeeks =\n    asCleanDays(tDateProfile.slotDuration) === 1 &&\n    currentRangeAs('weeks', dateProfile, dateEnv) >= 2 &&\n    !allOptions.businessHours\n\n  /*\n  console.log('label interval =', timelineView.labelInterval.humanize())\n  console.log('slot duration =', timelineView.slotDuration.humanize())\n  console.log('header formats =', timelineView.headerFormats)\n  console.log('isTimeScale', timelineView.isTimeScale)\n  console.log('largeUnit', timelineView.largeUnit)\n  */\n\n  let rawSnapDuration = allOptions.snapDuration\n  let snapDuration\n  let snapsPerSlot\n\n  if (rawSnapDuration) {\n    snapDuration = createDuration(rawSnapDuration)\n    snapsPerSlot = wholeDivideDurations(tDateProfile.slotDuration, snapDuration)\n    // ^ TODO: warning if not whole?\n  }\n\n  if (snapsPerSlot == null) {\n    snapDuration = tDateProfile.slotDuration\n    snapsPerSlot = 1\n  }\n\n  tDateProfile.snapDuration = snapDuration\n  tDateProfile.snapsPerSlot = snapsPerSlot\n\n  // more...\n\n  let timeWindowMs = asRoughMs(dateProfile.slotMaxTime) - asRoughMs(dateProfile.slotMinTime)\n\n  // TODO: why not use normalizeRange!?\n  let normalizedStart = normalizeDate(dateProfile.renderRange.start, tDateProfile, dateEnv)\n  let normalizedEnd = normalizeDate(dateProfile.renderRange.end, tDateProfile, dateEnv)\n\n  // apply slotMinTime/slotMaxTime\n  // TODO: View should be responsible.\n  if (tDateProfile.isTimeScale) {\n    normalizedStart = dateEnv.add(normalizedStart, dateProfile.slotMinTime)\n    normalizedEnd = dateEnv.add(\n      addDays(normalizedEnd, -1),\n      dateProfile.slotMaxTime,\n    )\n  }\n\n  tDateProfile.timeWindowMs = timeWindowMs\n  tDateProfile.normalizedRange = { start: normalizedStart, end: normalizedEnd }\n\n  let slotDates = []\n  let date = normalizedStart\n  while (date < normalizedEnd) {\n    if (isValidDate(date, tDateProfile, dateProfile, dateProfileGenerator)) {\n      slotDates.push(date)\n    }\n    date = dateEnv.add(date, tDateProfile.slotDuration)\n  }\n\n  tDateProfile.slotDates = slotDates\n\n  // more...\n\n  let snapIndex = -1\n  let snapDiff = 0 // index of the diff :(\n  const snapDiffToIndex = []\n  const snapIndexToDiff = []\n\n  date = normalizedStart\n  while (date < normalizedEnd) {\n    if (isValidDate(date, tDateProfile, dateProfile, dateProfileGenerator)) {\n      snapIndex += 1\n      snapDiffToIndex.push(snapIndex)\n      snapIndexToDiff.push(snapDiff)\n    } else {\n      snapDiffToIndex.push(snapIndex + 0.5)\n    }\n    date = dateEnv.add(date, tDateProfile.snapDuration)\n    snapDiff += 1\n  }\n\n  tDateProfile.snapDiffToIndex = snapDiffToIndex\n  tDateProfile.snapIndexToDiff = snapIndexToDiff\n\n  tDateProfile.snapCnt = snapIndex + 1 // is always one behind\n  tDateProfile.slotCnt = tDateProfile.snapCnt / tDateProfile.snapsPerSlot\n\n  // more...\n\n  tDateProfile.isWeekStarts = buildIsWeekStarts(tDateProfile, dateEnv)\n  tDateProfile.cellRows = buildCellRows(tDateProfile, dateEnv)\n  tDateProfile.slotsPerLabel = wholeDivideDurations(tDateProfile.labelInterval, tDateProfile.slotDuration)\n\n  return tDateProfile\n}\n\n/*\nsnaps to appropriate unit\n*/\nexport function normalizeDate(date: DateMarker, tDateProfile: TimelineDateProfile, dateEnv: DateEnv): DateMarker {\n  let normalDate = date\n\n  if (!tDateProfile.isTimeScale) {\n    normalDate = startOfDay(normalDate)\n\n    if (tDateProfile.largeUnit) {\n      normalDate = dateEnv.startOf(normalDate, tDateProfile.largeUnit)\n    }\n  }\n\n  return normalDate\n}\n\n/*\nsnaps to appropriate unit\n*/\nexport function normalizeRange(range: DateRange, tDateProfile: TimelineDateProfile, dateEnv: DateEnv): DateRange {\n  if (!tDateProfile.isTimeScale) {\n    range = computeVisibleDayRange(range)\n\n    if (tDateProfile.largeUnit) {\n      let dayRange = range // preserve original result\n\n      range = {\n        start: dateEnv.startOf(range.start, tDateProfile.largeUnit),\n        end: dateEnv.startOf(range.end, tDateProfile.largeUnit),\n      }\n\n      // if date is partially through the interval, or is in the same interval as the start,\n      // make the exclusive end be the *next* interval\n      if (range.end.valueOf() !== dayRange.end.valueOf() || range.end <= range.start) {\n        range = {\n          start: range.start,\n          end: dateEnv.add(range.end, tDateProfile.slotDuration),\n        }\n      }\n    }\n  }\n\n  return range\n}\n\nexport function isValidDate(\n  date: DateMarker,\n  tDateProfile: TimelineDateProfile,\n  dateProfile: DateProfile,\n  dateProfileGenerator: DateProfileGenerator,\n) {\n  if (dateProfileGenerator.isHiddenDay(date)) {\n    return false\n  }\n\n  if (tDateProfile.isTimeScale) {\n    // determine if the time is within slotMinTime/slotMaxTime, which may have wacky values\n    let day = startOfDay(date)\n    let timeMs = date.valueOf() - day.valueOf()\n    let ms = timeMs - asRoughMs(dateProfile.slotMinTime) // milliseconds since slotMinTime\n    ms = ((ms % 86400000) + 86400000) % 86400000 // make negative values wrap to 24hr clock\n    return ms < tDateProfile.timeWindowMs // before the slotMaxTime?\n  }\n\n  return true\n}\n\nfunction validateLabelAndSlot(tDateProfile: TimelineDateProfile, dateProfile: DateProfile, dateEnv: DateEnv) {\n  const { currentRange } = dateProfile\n\n  // make sure labelInterval doesn't exceed the max number of cells\n  if (tDateProfile.labelInterval) {\n    const labelCnt = dateEnv.countDurationsBetween(\n      currentRange.start,\n      currentRange.end,\n      tDateProfile.labelInterval,\n    )\n    if (labelCnt > config.MAX_TIMELINE_SLOTS) {\n      console.warn('slotLabelInterval results in too many cells')\n      tDateProfile.labelInterval = null\n    }\n  }\n\n  // make sure slotDuration doesn't exceed the maximum number of cells\n  if (tDateProfile.slotDuration) {\n    const slotCnt = dateEnv.countDurationsBetween(\n      currentRange.start,\n      currentRange.end,\n      tDateProfile.slotDuration,\n    )\n    if (slotCnt > config.MAX_TIMELINE_SLOTS) {\n      console.warn('slotDuration results in too many cells')\n      tDateProfile.slotDuration = null\n    }\n  }\n\n  // make sure labelInterval is a multiple of slotDuration\n  if (tDateProfile.labelInterval && tDateProfile.slotDuration) {\n    const slotsPerLabel = wholeDivideDurations(tDateProfile.labelInterval, tDateProfile.slotDuration)\n    if (slotsPerLabel === null || slotsPerLabel < 1) {\n      console.warn('slotLabelInterval must be a multiple of slotDuration')\n      tDateProfile.slotDuration = null\n    }\n  }\n}\n\nfunction ensureLabelInterval(tDateProfile: TimelineDateProfile, dateProfile: DateProfile, dateEnv: DateEnv) {\n  const { currentRange } = dateProfile\n  let { labelInterval } = tDateProfile\n\n  if (!labelInterval) {\n    // compute based off the slot duration\n    // find the largest label interval with an acceptable slots-per-label\n    let input\n    if (tDateProfile.slotDuration) {\n      for (input of STOCK_SUB_DURATIONS) {\n        const tryLabelInterval = createDuration(input)\n        const slotsPerLabel = wholeDivideDurations(tryLabelInterval, tDateProfile.slotDuration)\n        if (slotsPerLabel !== null && slotsPerLabel <= MAX_AUTO_SLOTS_PER_LABEL) {\n          labelInterval = tryLabelInterval\n          break\n        }\n      }\n\n      // use the slot duration as a last resort\n      if (!labelInterval) {\n        labelInterval = tDateProfile.slotDuration\n      }\n\n    // compute based off the view's duration\n    // find the largest label interval that yields the minimum number of labels\n    } else {\n      for (input of STOCK_SUB_DURATIONS) {\n        labelInterval = createDuration(input)\n        const labelCnt = dateEnv.countDurationsBetween(\n          currentRange.start,\n          currentRange.end,\n          labelInterval,\n        )\n        if (labelCnt >= MIN_AUTO_LABELS) {\n          break\n        }\n      }\n    }\n\n    tDateProfile.labelInterval = labelInterval\n  }\n\n  return labelInterval\n}\n\nfunction ensureSlotDuration(tDateProfile: TimelineDateProfile, dateProfile: DateProfile, dateEnv: DateEnv) {\n  const { currentRange } = dateProfile\n  let { slotDuration } = tDateProfile\n\n  if (!slotDuration) {\n    const labelInterval = ensureLabelInterval(tDateProfile, dateProfile, dateEnv) // will compute if necessary\n\n    // compute based off the label interval\n    // find the largest slot duration that is different from labelInterval, but still acceptable\n    for (let input of STOCK_SUB_DURATIONS) {\n      const trySlotDuration = createDuration(input)\n      const slotsPerLabel = wholeDivideDurations(labelInterval, trySlotDuration)\n      if (slotsPerLabel !== null && slotsPerLabel > 1 && slotsPerLabel <= MAX_AUTO_SLOTS_PER_LABEL) {\n        slotDuration = trySlotDuration\n        break\n      }\n    }\n\n    // only allow the value if it won't exceed the view's # of slots limit\n    if (slotDuration) {\n      const slotCnt = dateEnv.countDurationsBetween(\n        currentRange.start,\n        currentRange.end,\n        slotDuration,\n      )\n      if (slotCnt > MAX_AUTO_CELLS) {\n        slotDuration = null\n      }\n    }\n\n    // use the label interval as a last resort\n    if (!slotDuration) {\n      slotDuration = labelInterval\n    }\n\n    tDateProfile.slotDuration = slotDuration\n  }\n\n  return slotDuration\n}\n\nfunction computeHeaderFormats(\n  tDateProfile: TimelineDateProfile,\n  dateProfile: DateProfile,\n  dateEnv: DateEnv,\n  allOptions: BaseOptionsRefined,\n) {\n  let format1\n  let format2\n  const { labelInterval } = tDateProfile\n  let unit = greatestDurationDenominator(labelInterval).unit\n  const weekNumbersVisible = allOptions.weekNumbers\n  let format0 = (format1 = (format2 = null))\n\n  // NOTE: weekNumber computation function wont work\n\n  if ((unit === 'week') && !weekNumbersVisible) {\n    unit = 'day'\n  }\n\n  switch (unit) {\n    case 'year':\n      format0 = { year: 'numeric' } // '2015'\n      break\n\n    case 'month':\n      if (currentRangeAs('years', dateProfile, dateEnv) > 1) {\n        format0 = { year: 'numeric' } // '2015'\n      }\n\n      format1 = { month: 'short' } // 'Jan'\n      break\n\n    case 'week':\n      if (currentRangeAs('years', dateProfile, dateEnv) > 1) {\n        format0 = { year: 'numeric' } // '2015'\n      }\n\n      format1 = { week: 'narrow' } // 'Wk4'\n      break\n\n    case 'day':\n      if (currentRangeAs('years', dateProfile, dateEnv) > 1) {\n        format0 = { year: 'numeric', month: 'long' } // 'January 2014'\n      } else if (currentRangeAs('months', dateProfile, dateEnv) > 1) {\n        format0 = { month: 'long' } // 'January'\n      }\n\n      if (weekNumbersVisible) {\n        format1 = { week: 'short' } // 'Wk 4'\n      }\n\n      format2 = { weekday: 'narrow', day: 'numeric' } // 'Su 9'\n      break\n\n    case 'hour':\n      if (weekNumbersVisible) {\n        format0 = { week: 'short' } // 'Wk 4'\n      }\n\n      if (currentRangeAs('days', dateProfile, dateEnv) > 1) {\n        format1 = { weekday: 'short', day: 'numeric', month: 'numeric', omitCommas: true } // Sat 4/7\n      }\n\n      format2 = {\n        hour: 'numeric',\n        minute: '2-digit',\n        omitZeroMinute: true,\n        meridiem: 'short',\n      }\n      break\n\n    case 'minute':\n      // sufficiently large number of different minute cells?\n      if ((asRoughMinutes(labelInterval) / 60) >= MAX_AUTO_SLOTS_PER_LABEL) {\n        format0 = {\n          hour: 'numeric',\n          meridiem: 'short',\n        }\n        format1 = (params) => (\n          ':' + padStart(params.date.minute, 2) // ':30'\n        )\n      } else {\n        format0 = {\n          hour: 'numeric',\n          minute: 'numeric',\n          meridiem: 'short',\n        }\n      }\n      break\n\n    case 'second':\n      // sufficiently large number of different second cells?\n      if ((asRoughSeconds(labelInterval) / 60) >= MAX_AUTO_SLOTS_PER_LABEL) {\n        format0 = { hour: 'numeric', minute: '2-digit', meridiem: 'lowercase' } // '8:30 PM'\n        format1 = (params) => (\n          ':' + padStart(params.date.second, 2) // ':30'\n        )\n      } else {\n        format0 = { hour: 'numeric', minute: '2-digit', second: '2-digit', meridiem: 'lowercase' } // '8:30:45 PM'\n      }\n      break\n\n    case 'millisecond':\n      format0 = { hour: 'numeric', minute: '2-digit', second: '2-digit', meridiem: 'lowercase' } // '8:30:45 PM'\n      format1 = (params) => (\n        '.' + padStart(params.millisecond, 3)\n      )\n      break\n  }\n\n  return [].concat(format0 || [], format1 || [], format2 || [])\n}\n\n// Compute the number of the give units in the \"current\" range.\n// Won't go more precise than days.\n// Will return `0` if there's not a clean whole interval.\nfunction currentRangeAs(unit: string, dateProfile: DateProfile, dateEnv: DateEnv) {\n  let range = dateProfile.currentRange\n  let res = null\n\n  if (unit === 'years') {\n    res = dateEnv.diffWholeYears(range.start, range.end)\n  } else if (unit === 'months') {\n    res = dateEnv.diffWholeMonths(range.start, range.end)\n  } else if (unit === 'weeks') {\n    res = dateEnv.diffWholeMonths(range.start, range.end)\n  } else if (unit === 'days') {\n    res = diffWholeDays(range.start, range.end)\n  }\n\n  return res || 0\n}\n\nfunction buildIsWeekStarts(tDateProfile: TimelineDateProfile, dateEnv: DateEnv) {\n  let { slotDates, emphasizeWeeks } = tDateProfile\n  let prevWeekNumber = null\n  let isWeekStarts: boolean[] = []\n\n  for (let slotDate of slotDates) {\n    let weekNumber = dateEnv.computeWeekNumber(slotDate)\n    let isWeekStart = emphasizeWeeks && (prevWeekNumber !== null) && (prevWeekNumber !== weekNumber)\n    prevWeekNumber = weekNumber\n\n    isWeekStarts.push(isWeekStart)\n  }\n\n  return isWeekStarts\n}\n\nfunction buildCellRows(tDateProfile: TimelineDateProfile, dateEnv: DateEnv) {\n  let slotDates = tDateProfile.slotDates\n  let formats = tDateProfile.headerFormats\n  let cellRows = formats.map(() => []) // indexed by row,col\n  let slotAsDays = asCleanDays(tDateProfile.slotDuration)\n  let guessedSlotUnit =\n    slotAsDays === 7 ? 'week' :\n      slotAsDays === 1 ? 'day' :\n        null\n\n  // specifically for navclicks\n  let rowUnitsFromFormats = formats.map(\n    (format) => (format.getLargestUnit ? format.getLargestUnit() : null),\n  )\n\n  // builds cellRows and slotCells\n  for (let i = 0; i < slotDates.length; i += 1) {\n    let date = slotDates[i]\n    let isWeekStart = tDateProfile.isWeekStarts[i]\n\n    for (let row = 0; row < formats.length; row += 1) {\n      let format = formats[row]\n      let rowCells = cellRows[row]\n      let leadingCell = rowCells[rowCells.length - 1]\n      let isLastRow = row === formats.length - 1\n      let isSuperRow = formats.length > 1 && !isLastRow // more than one row and not the last\n      let newCell = null\n      let rowUnit = rowUnitsFromFormats[row] || (isLastRow ? guessedSlotUnit : null)\n\n      if (isSuperRow) {\n        let text = dateEnv.format(date, format)\n        if (!leadingCell || (leadingCell.text !== text)) {\n          newCell = buildCellObject(date, text, rowUnit)\n        } else {\n          leadingCell.colspan += 1\n        }\n      } else if (\n        !leadingCell ||\n        isInt(dateEnv.countDurationsBetween(\n          tDateProfile.normalizedRange.start,\n          date,\n          tDateProfile.labelInterval,\n        ))\n      ) {\n        let text = dateEnv.format(date, format)\n        newCell = buildCellObject(date, text, rowUnit)\n      } else {\n        leadingCell.colspan += 1\n      }\n\n      if (newCell) {\n        newCell.weekStart = isWeekStart\n        rowCells.push(newCell)\n      }\n    }\n  }\n\n  return cellRows\n}\n\nfunction buildCellObject(date: DateMarker, text, rowUnit): TimelineHeaderCell {\n  return { date, text, rowUnit, colspan: 1, isWeekStart: false }\n}\n","import { createElement, BaseComponent, DateMarker, ContentHook, ViewApi, DateEnv } from '@fullcalendar/common'\n\nexport interface TimelineHeaderThInnerProps {\n  hookProps: HookProps\n  isSticky: boolean\n  navLinkAttrs: object | null\n}\n\nexport class TimelineHeaderThInner extends BaseComponent<TimelineHeaderThInnerProps> {\n  render() {\n    let { props, context } = this\n\n    return (\n      <ContentHook hookProps={props.hookProps} content={context.options.slotLabelContent} defaultContent={renderInnerContent}>\n        {(innerElRef, innerContent) => (\n          <a\n            ref={innerElRef}\n            className={'fc-timeline-slot-cushion fc-scrollgrid-sync-inner' + (props.isSticky ? ' fc-sticky' : '')}\n            {...props.navLinkAttrs}\n          >\n            {innerContent}\n          </a>\n        )}\n      </ContentHook>\n    )\n  }\n}\n\nfunction renderInnerContent(props) { // TODO: add types\n  return props.text\n}\n\n// hook props\n// ----------\n\nexport interface HookPropsInput {\n  level: number\n  dateMarker: DateMarker\n  text: string\n  dateEnv: DateEnv\n  viewApi: ViewApi\n}\n\nexport interface HookProps {\n  level: number\n  date: DateMarker // localized\n  view: ViewApi\n  text: string\n}\n\nexport function refineHookProps(input: HookPropsInput): HookProps {\n  return {\n    level: input.level,\n    date: input.dateEnv.toDate(input.dateMarker),\n    view: input.viewApi,\n    text: input.text,\n  }\n}\n","import {\n  createElement, BaseComponent, DateRange, DateMarker, getDateMeta, getSlotClassNames,\n  buildNavLinkAttrs, buildClassNameNormalizer, MountHook,\n  getDayClassNames, DateProfile, memoizeObjArg, ViewContext, memoize,\n} from '@fullcalendar/common'\nimport { TimelineDateProfile, TimelineHeaderCell } from './timeline-date-profile'\nimport { TimelineHeaderThInner, refineHookProps, HookProps } from './TimelineHeaderThInner'\n\nexport interface TimelineHeaderThProps {\n  dateProfile: DateProfile\n  tDateProfile: TimelineDateProfile\n  rowLevel: number\n  cell: TimelineHeaderCell\n  todayRange: DateRange\n  nowDate: DateMarker\n  rowInnerHeight?: number\n  isSticky: boolean\n}\n\nexport class TimelineHeaderTh extends BaseComponent<TimelineHeaderThProps> {\n  refineHookProps = memoizeObjArg(refineHookProps)\n  normalizeClassNames = buildClassNameNormalizer<HookProps>()\n  buildCellNavLinkAttrs = memoize(buildCellNavLinkAttrs)\n\n  render() {\n    let { props, context } = this\n    let { dateEnv, options } = context\n    let { cell, dateProfile, tDateProfile } = props\n\n    // the cell.rowUnit is f'd\n    // giving 'month' for a 3-day view\n    // workaround: to infer day, do NOT time\n\n    let dateMeta = getDateMeta(cell.date, props.todayRange, props.nowDate, dateProfile)\n\n    let classNames = ['fc-timeline-slot', 'fc-timeline-slot-label'].concat(\n      cell.rowUnit === 'time' // TODO: so slot classnames for week/month/bigger. see note above about rowUnit\n        ? getSlotClassNames(dateMeta, context.theme)\n        : getDayClassNames(dateMeta, context.theme),\n    )\n\n    if (cell.isWeekStart) {\n      classNames.push('fc-timeline-slot-em')\n    }\n\n    let hookProps = this.refineHookProps({\n      level: props.rowLevel,\n      dateMarker: cell.date,\n      text: cell.text,\n      dateEnv: context.dateEnv,\n      viewApi: context.viewApi,\n    })\n\n    let customClassNames = this.normalizeClassNames(options.slotLabelClassNames, hookProps)\n\n    return (\n      <MountHook hookProps={hookProps} didMount={options.slotLabelDidMount} willUnmount={options.slotLabelWillUnmount}>\n        {(rootElRef) => (\n          <th\n            ref={rootElRef}\n            className={classNames.concat(customClassNames).join(' ')}\n            data-date={dateEnv.formatIso(cell.date, { omitTime: !tDateProfile.isTimeScale, omitTimeZoneOffset: true })}\n            colSpan={cell.colspan}\n          >\n            <div className=\"fc-timeline-slot-frame\" style={{ height: props.rowInnerHeight }}>\n              <TimelineHeaderThInner\n                hookProps={hookProps}\n                isSticky={props.isSticky}\n                navLinkAttrs={this.buildCellNavLinkAttrs(context, cell.date, cell.rowUnit)}\n              />\n            </div>\n          </th>\n        )}\n      </MountHook>\n    )\n  }\n}\n\nfunction buildCellNavLinkAttrs(context: ViewContext, cellDate: DateMarker, rowUnit: string): object {\n  return (rowUnit && rowUnit !== 'time')\n    ? buildNavLinkAttrs(context, cellDate, rowUnit)\n    : {}\n}\n","import { createElement, BaseComponent, Fragment, DateRange, DateMarker, DateProfile } from '@fullcalendar/common'\nimport { TimelineDateProfile } from './timeline-date-profile'\nimport { TimelineHeaderTh } from './TimelineHeaderTh'\n\nexport interface TimelineHeaderRowsProps {\n  dateProfile: DateProfile\n  tDateProfile: TimelineDateProfile\n  nowDate: DateMarker\n  todayRange: DateRange\n  rowInnerHeights?: number[]\n}\n\nexport class TimelineHeaderRows extends BaseComponent<TimelineHeaderRowsProps> {\n  render() {\n    let { dateProfile, tDateProfile, rowInnerHeights, todayRange, nowDate } = this.props\n    let { cellRows } = tDateProfile\n\n    return (\n      <Fragment>\n        {cellRows.map((rowCells, rowLevel) => {\n          let isLast = rowLevel === cellRows.length - 1\n          let isChrono = tDateProfile.isTimeScale && isLast // the final row, with times?\n          let classNames = [\n            'fc-timeline-header-row',\n            isChrono ? 'fc-timeline-header-row-chrono' : '',\n          ]\n\n          return ( // eslint-disable-next-line react/no-array-index-key\n            <tr key={rowLevel} className={classNames.join(' ')}>\n              {rowCells.map((cell) => (\n                <TimelineHeaderTh\n                  key={cell.date.toISOString()}\n                  cell={cell}\n                  rowLevel={rowLevel}\n                  dateProfile={dateProfile}\n                  tDateProfile={tDateProfile}\n                  todayRange={todayRange}\n                  nowDate={nowDate}\n                  rowInnerHeight={rowInnerHeights && rowInnerHeights[rowLevel]}\n                  isSticky={!isLast}\n                />\n              ))}\n            </tr>\n          )\n        })}\n      </Fragment>\n    )\n  }\n}\n","import {\n  PositionCache, findDirectChildren,\n  isInt, DateProfile,\n  DateMarker, DateEnv, Duration, startOfDay, rangeContainsMarker, CssDimValue, DateRange, SegSpan,\n} from '@fullcalendar/common'\nimport { TimelineDateProfile } from './timeline-date-profile'\n\nexport class TimelineCoords { // TODO: rename to \"slat\" coords?\n  outerCoordCache: PositionCache\n  innerCoordCache: PositionCache\n\n  constructor(\n    public slatRootEl: HTMLElement, // okay to expose?\n    slatEls: HTMLElement[],\n    public dateProfile: DateProfile,\n    private tDateProfile: TimelineDateProfile,\n    private dateEnv: DateEnv,\n    public isRtl: boolean,\n  ) {\n    this.outerCoordCache = new PositionCache(\n      slatRootEl,\n      slatEls,\n      true, // isHorizontal\n      false, // isVertical\n    )\n\n    // for the inner divs within the slats\n    // used for event rendering and scrollTime, to disregard slat border\n    this.innerCoordCache = new PositionCache(\n      slatRootEl,\n      findDirectChildren(slatEls, 'div'),\n      true, // isHorizontal\n      false, // isVertical\n    )\n  }\n\n  isDateInRange(date: DateMarker) {\n    return rangeContainsMarker(this.dateProfile.currentRange, date)\n  }\n\n  // results range from negative width of area to 0\n  dateToCoord(date: DateMarker): number {\n    let { tDateProfile } = this\n    let snapCoverage = this.computeDateSnapCoverage(date)\n    let slotCoverage = snapCoverage / tDateProfile.snapsPerSlot\n    let slotIndex = Math.floor(slotCoverage)\n    slotIndex = Math.min(slotIndex, tDateProfile.slotCnt - 1)\n    let partial = slotCoverage - slotIndex\n    let { innerCoordCache, outerCoordCache } = this\n\n    if (this.isRtl) {\n      return outerCoordCache.originClientRect.width - (\n        outerCoordCache.rights[slotIndex] -\n        (innerCoordCache.getWidth(slotIndex) * partial)\n      )\n    }\n\n    return (\n      outerCoordCache.lefts[slotIndex] +\n      (innerCoordCache.getWidth(slotIndex) * partial)\n    )\n  }\n\n  rangeToCoords(range: DateRange): SegSpan {\n    return {\n      start: this.dateToCoord(range.start),\n      end: this.dateToCoord(range.end),\n    }\n  }\n\n  durationToCoord(duration: Duration): number {\n    let { dateProfile, tDateProfile, dateEnv, isRtl } = this\n    let coord = 0\n\n    if (dateProfile) {\n      let date = dateEnv.add(dateProfile.activeRange.start, duration)\n\n      if (!tDateProfile.isTimeScale) {\n        date = startOfDay(date)\n      }\n\n      coord = this.dateToCoord(date)\n\n      // hack to overcome the left borders of non-first slat\n      if (!isRtl && coord) {\n        coord += 1\n      }\n    }\n\n    return coord\n  }\n\n  coordFromLeft(coord: number) {\n    if (this.isRtl) {\n      return this.outerCoordCache.originClientRect.width - coord\n    }\n    return coord\n  }\n\n  // returned value is between 0 and the number of snaps\n  computeDateSnapCoverage(date: DateMarker): number {\n    return computeDateSnapCoverage(date, this.tDateProfile, this.dateEnv)\n  }\n}\n\n// returned value is between 0 and the number of snaps\nexport function computeDateSnapCoverage(date: DateMarker, tDateProfile: TimelineDateProfile, dateEnv: DateEnv): number {\n  let snapDiff = dateEnv.countDurationsBetween(\n    tDateProfile.normalizedRange.start,\n    date,\n    tDateProfile.snapDuration,\n  )\n\n  if (snapDiff < 0) {\n    return 0\n  }\n\n  if (snapDiff >= tDateProfile.snapDiffToIndex.length) {\n    return tDateProfile.snapCnt\n  }\n\n  let snapDiffInt = Math.floor(snapDiff)\n  let snapCoverage = tDateProfile.snapDiffToIndex[snapDiffInt]\n\n  if (isInt(snapCoverage)) { // not an in-between value\n    snapCoverage += snapDiff - snapDiffInt // add the remainder\n  } else {\n    // a fractional value, meaning the date is not visible\n    // always round up in this case. works for start AND end dates in a range.\n    snapCoverage = Math.ceil(snapCoverage)\n  }\n\n  return snapCoverage\n}\n\nexport function coordToCss(\n  hcoord: number | null,\n  isRtl: boolean,\n): { left: CssDimValue, right: CssDimValue } {\n  if (hcoord === null) {\n    return { left: '', right: '' }\n  }\n  if (isRtl) {\n    return { right: hcoord, left: '' }\n  }\n  return { left: hcoord, right: '' }\n}\n\nexport function coordsToCss(\n  hcoords: SegSpan | null,\n  isRtl: boolean,\n): { left: CssDimValue, right: CssDimValue } {\n  if (!hcoords) {\n    return { left: '', right: '' }\n  }\n  if (isRtl) {\n    return { right: hcoords.start, left: -hcoords.end }\n  }\n  return { left: hcoords.start, right: -hcoords.end }\n}\n","import {\n  createElement, BaseComponent, CssDimValue, VNode, DateMarker, NowTimer,\n  greatestDurationDenominator, DateRange, NowIndicatorRoot, createRef,\n  findElements, RefObject, DateProfile,\n} from '@fullcalendar/common'\nimport { TimelineHeaderRows } from './TimelineHeaderRows'\nimport { coordToCss, TimelineCoords } from './TimelineCoords'\nimport { TimelineDateProfile } from './timeline-date-profile'\n\nexport interface TimelineHeaderProps {\n  dateProfile: DateProfile\n  tDateProfile: TimelineDateProfile\n  clientWidth: number | null\n  clientHeight: number | null\n  tableMinWidth: CssDimValue\n  tableColGroupNode: VNode\n  slatCoords: TimelineCoords\n  rowInnerHeights?: number[]\n  onMaxCushionWidth?: (number) => void\n}\n\nexport class TimelineHeader extends BaseComponent<TimelineHeaderProps> {\n  rootElRef: RefObject<HTMLDivElement> = createRef<HTMLDivElement>()\n\n  render() {\n    let { props, context } = this\n\n    // TODO: very repetitive\n    // TODO: make part of tDateProfile?\n    let timerUnit = greatestDurationDenominator(props.tDateProfile.slotDuration).unit\n\n    // WORKAROUND: make ignore slatCoords when out of sync with dateProfile\n    let slatCoords = props.slatCoords && props.slatCoords.dateProfile === props.dateProfile ? props.slatCoords : null\n\n    return (\n      <NowTimer unit={timerUnit}>\n        {(nowDate: DateMarker, todayRange: DateRange) => (\n          <div className=\"fc-timeline-header\" ref={this.rootElRef}>\n            <table\n              aria-hidden\n              className=\"fc-scrollgrid-sync-table\"\n              style={{ minWidth: props.tableMinWidth, width: props.clientWidth }}\n            >\n              {props.tableColGroupNode}\n              <tbody>\n                <TimelineHeaderRows\n                  dateProfile={props.dateProfile}\n                  tDateProfile={props.tDateProfile}\n                  nowDate={nowDate}\n                  todayRange={todayRange}\n                  rowInnerHeights={props.rowInnerHeights}\n                />\n              </tbody>\n            </table>\n            {context.options.nowIndicator && (\n              // need to have a container regardless of whether the current view has a visible now indicator\n              // because apparently removal of the element resets the scroll for some reasons (issue #5351).\n              // this issue doesn't happen for the timeline body however (\n              <div className=\"fc-timeline-now-indicator-container\">\n                {(slatCoords && slatCoords.isDateInRange(nowDate)) && (\n                  <NowIndicatorRoot isAxis date={nowDate}>\n                    {(rootElRef, classNames, innerElRef, innerContent) => (\n                      <div\n                        ref={rootElRef}\n                        className={['fc-timeline-now-indicator-arrow'].concat(classNames).join(' ')}\n                        style={coordToCss(slatCoords.dateToCoord(nowDate), context.isRtl)}\n                      >\n                        {innerContent}\n                      </div>\n                    )}\n                  </NowIndicatorRoot>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n      </NowTimer>\n    )\n  }\n\n  componentDidMount() {\n    this.updateSize()\n  }\n\n  componentDidUpdate() {\n    this.updateSize()\n  }\n\n  updateSize() {\n    if (this.props.onMaxCushionWidth) {\n      this.props.onMaxCushionWidth(this.computeMaxCushionWidth())\n    }\n  }\n\n  computeMaxCushionWidth() { // TODO: called way too often\n    return Math.max(\n      ...findElements(this.rootElRef.current, '.fc-timeline-header-row:last-child .fc-timeline-slot-cushion').map(\n        (el) => el.getBoundingClientRect().width,\n      ),\n    )\n  }\n}\n","import {\n  createElement, isInt, BaseComponent, DateMarker, Ref, DateRange, getDateMeta, getSlotClassNames,\n  RenderHook, getDayClassNames, SlotLaneContentArg, DateProfile,\n} from '@fullcalendar/common'\nimport { TimelineDateProfile } from './timeline-date-profile'\n\nexport interface TimelineSlatCellProps {\n  date: DateMarker\n  dateProfile: DateProfile\n  tDateProfile: TimelineDateProfile\n  nowDate: DateMarker\n  todayRange: DateRange\n  isDay: boolean\n  isEm: boolean\n  elRef?: Ref<HTMLTableCellElement>\n}\n\nexport class TimelineSlatCell extends BaseComponent<TimelineSlatCellProps> {\n  render() {\n    let { props, context } = this\n    let { dateEnv, options, theme } = context\n    let { date, tDateProfile, isEm } = props\n    let dateMeta = getDateMeta(props.date, props.todayRange, props.nowDate, props.dateProfile)\n    let classNames = ['fc-timeline-slot', 'fc-timeline-slot-lane']\n    let dataAttrs = { 'data-date': dateEnv.formatIso(date, { omitTimeZoneOffset: true, omitTime: !tDateProfile.isTimeScale }) }\n    let hookProps: SlotLaneContentArg = {\n      date: dateEnv.toDate(props.date),\n      ...dateMeta,\n      view: context.viewApi,\n    }\n\n    if (isEm) {\n      classNames.push('fc-timeline-slot-em')\n    }\n\n    if (tDateProfile.isTimeScale) {\n      classNames.push(\n        isInt(dateEnv.countDurationsBetween(\n          tDateProfile.normalizedRange.start,\n          props.date,\n          tDateProfile.labelInterval,\n        )) ?\n          'fc-timeline-slot-major' :\n          'fc-timeline-slot-minor',\n      )\n    }\n\n    classNames.push(...(\n      props.isDay\n        ? getDayClassNames(dateMeta, theme)\n        : getSlotClassNames(dateMeta, theme)\n    ))\n\n    return (\n      <RenderHook\n        hookProps={hookProps}\n        classNames={options.slotLaneClassNames}\n        content={options.slotLaneContent}\n        didMount={options.slotLaneDidMount}\n        willUnmount={options.slotLaneWillUnmount}\n        elRef={props.elRef}\n      >\n        {(rootElRef, customClassNames, innerElRef, innerContent) => (\n          <td\n            ref={rootElRef}\n            className={classNames.concat(customClassNames).join(' ')}\n            {...dataAttrs}\n          >\n            <div ref={innerElRef}>{innerContent}</div>\n          </td>\n        )}\n      </RenderHook>\n    )\n  }\n}\n","import { createElement, BaseComponent, RefMap, DateMarker, DateRange, DateProfile } from '@fullcalendar/common'\nimport { TimelineDateProfile } from './timeline-date-profile'\nimport { TimelineSlatCell } from './TimelineSlatCell'\n\nexport interface TimelineSlatsContentProps {\n  dateProfile: DateProfile\n  tDateProfile: TimelineDateProfile\n  nowDate: DateMarker\n  todayRange: DateRange\n}\n\nexport interface TimelineSlatsBodyProps extends TimelineSlatsContentProps {\n  cellElRefs: RefMap<HTMLTableCellElement>\n}\n\nexport class TimelineSlatsBody extends BaseComponent<TimelineSlatsBodyProps> {\n  render() {\n    let { props } = this\n    let { tDateProfile, cellElRefs } = props\n    let { slotDates, isWeekStarts } = tDateProfile\n    let isDay = !tDateProfile.isTimeScale && !tDateProfile.largeUnit\n\n    return (\n      <tbody>\n        <tr>\n          {slotDates.map((slotDate, i) => {\n            let key = slotDate.toISOString()\n\n            return (\n              <TimelineSlatCell\n                key={key}\n                elRef={cellElRefs.createRef(key)}\n                date={slotDate}\n                dateProfile={props.dateProfile}\n                tDateProfile={tDateProfile}\n                nowDate={props.nowDate}\n                todayRange={props.todayRange}\n                isEm={isWeekStarts[i]}\n                isDay={isDay}\n              />\n            )\n          })}\n        </tr>\n      </tbody>\n    )\n  }\n}\n","import {\n  createElement, BaseComponent, multiplyDuration, RefMap, CssDimValue, VNode,\n  createRef, ScrollResponder, ScrollRequest, DateMarker,\n} from '@fullcalendar/common'\nimport { TimelineCoords } from './TimelineCoords'\nimport { TimelineSlatsBody, TimelineSlatsContentProps } from './TimelineSlatsBody'\n\nexport interface TimelineSlatsProps extends TimelineSlatsContentProps {\n  clientWidth: number | null\n  tableMinWidth: CssDimValue\n  tableColGroupNode: VNode\n  onCoords?: (coord: TimelineCoords | null) => void\n  onScrollLeftRequest?: (scrollLeft: number) => void\n}\n\nexport class TimelineSlats extends BaseComponent<TimelineSlatsProps> {\n  private rootElRef = createRef<HTMLDivElement>()\n  private cellElRefs = new RefMap<HTMLTableCellElement>()\n  private coords: TimelineCoords // for positionToHit\n  private scrollResponder: ScrollResponder\n\n  render() {\n    let { props, context } = this\n\n    return (\n      <div className=\"fc-timeline-slots\" ref={this.rootElRef}>\n        <table\n          aria-hidden\n          className={context.theme.getClass('table')}\n          style={{\n            minWidth: props.tableMinWidth,\n            width: props.clientWidth,\n          }}\n        >\n          {props.tableColGroupNode}\n          <TimelineSlatsBody\n            cellElRefs={this.cellElRefs}\n            dateProfile={props.dateProfile}\n            tDateProfile={props.tDateProfile}\n            nowDate={props.nowDate}\n            todayRange={props.todayRange}\n          />\n        </table>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    this.updateSizing()\n    this.scrollResponder = this.context.createScrollResponder(this.handleScrollRequest)\n  }\n\n  componentDidUpdate(prevProps: TimelineSlatsProps) {\n    this.updateSizing()\n\n    this.scrollResponder.update(prevProps.dateProfile !== this.props.dateProfile)\n  }\n\n  componentWillUnmount() {\n    this.scrollResponder.detach()\n\n    if (this.props.onCoords) {\n      this.props.onCoords(null)\n    }\n  }\n\n  updateSizing() {\n    let { props, context } = this\n\n    if (\n      props.clientWidth !== null && // is sizing stable?\n      this.scrollResponder\n      // ^it's possible to have clientWidth immediately after mount (when returning from print view), but w/o scrollResponder\n    ) {\n      let rootEl = this.rootElRef.current\n\n      if (rootEl.offsetWidth) { // not hidden by css\n        this.coords = new TimelineCoords(\n          this.rootElRef.current,\n          collectCellEls(this.cellElRefs.currentMap, props.tDateProfile.slotDates),\n          props.dateProfile,\n          props.tDateProfile,\n          context.dateEnv,\n          context.isRtl,\n        )\n\n        if (props.onCoords) {\n          props.onCoords(this.coords)\n        }\n\n        this.scrollResponder.update(false) // TODO: wouldn't have to do this if coords were in state\n      }\n    }\n  }\n\n  handleScrollRequest = (request: ScrollRequest) => {\n    let { onScrollLeftRequest } = this.props\n    let { coords } = this\n\n    if (onScrollLeftRequest && coords) {\n      if (request.time) {\n        let scrollLeft = coords.coordFromLeft(coords.durationToCoord(request.time))\n        onScrollLeftRequest(scrollLeft)\n      }\n      return true\n    }\n\n    return null // best?\n  }\n\n  positionToHit(leftPosition) { // TODO: kill somehow\n    let { outerCoordCache } = this.coords\n    let { dateEnv, isRtl } = this.context\n    let { tDateProfile } = this.props\n    let slatIndex = outerCoordCache.leftToIndex(leftPosition)\n\n    if (slatIndex != null) {\n      // somewhat similar to what TimeGrid does. consolidate?\n      let slatWidth = outerCoordCache.getWidth(slatIndex)\n      let partial = isRtl ?\n        (outerCoordCache.rights[slatIndex] - leftPosition) / slatWidth :\n        (leftPosition - outerCoordCache.lefts[slatIndex]) / slatWidth\n      let localSnapIndex = Math.floor(partial * tDateProfile.snapsPerSlot)\n      let start = dateEnv.add(\n        tDateProfile.slotDates[slatIndex],\n        multiplyDuration(tDateProfile.snapDuration, localSnapIndex),\n      )\n      let end = dateEnv.add(start, tDateProfile.snapDuration)\n\n      return {\n        dateSpan: {\n          range: { start, end },\n          allDay: !this.props.tDateProfile.isTimeScale,\n        },\n        dayEl: this.cellElRefs.currentMap[slatIndex],\n        left: outerCoordCache.lefts[slatIndex], // TODO: make aware of snaps?\n        right: outerCoordCache.rights[slatIndex],\n      }\n    }\n\n    return null\n  }\n}\n\nfunction collectCellEls(elMap: { [key: string]: HTMLElement }, slotDates: DateMarker[]) {\n  return slotDates.map((slotDate) => {\n    let key = slotDate.toISOString()\n    return elMap[key]\n  })\n}\n","import {\n  BaseComponent, createElement, Fragment, BgEvent, renderFill,\n  getSegMeta, DateRange, DateMarker, buildEventRangeKey,\n} from '@fullcalendar/common'\nimport { computeSegHCoords } from './event-placement'\nimport { coordsToCss, TimelineCoords } from './TimelineCoords'\nimport { TimelineLaneSeg } from './TimelineLaneSlicer'\n\nexport interface TimelineLaneBgProps {\n  businessHourSegs: TimelineLaneSeg[] | null // can be null :(\n  bgEventSegs: TimelineLaneSeg[] | null // can be null :(\n  dateSelectionSegs: TimelineLaneSeg[]\n  eventResizeSegs: TimelineLaneSeg[]\n  timelineCoords: TimelineCoords | null\n  todayRange: DateRange\n  nowDate: DateMarker\n}\n\nexport class TimelineLaneBg extends BaseComponent<TimelineLaneBgProps> {\n  render() {\n    let { props } = this\n    let highlightSeg = [].concat(props.eventResizeSegs, props.dateSelectionSegs)\n\n    return props.timelineCoords && (\n      <div className=\"fc-timeline-bg\">\n        {/* Fragments contain the keys */}\n        {this.renderSegs(props.businessHourSegs || [], props.timelineCoords, 'non-business')}\n        {this.renderSegs(props.bgEventSegs || [], props.timelineCoords, 'bg-event')}\n        {this.renderSegs(highlightSeg, props.timelineCoords, 'highlight')}\n      </div>\n    )\n  }\n\n  renderSegs(segs: TimelineLaneSeg[], timelineCoords: TimelineCoords | null, fillType: string) {\n    let { todayRange, nowDate } = this.props\n    let { isRtl } = this.context\n    let segHCoords = computeSegHCoords(segs, 0, timelineCoords)\n\n    let children = segs.map((seg, i) => {\n      let hcoords = segHCoords[i]\n      let hStyle = coordsToCss(hcoords, isRtl)\n\n      return (\n        <div\n          key={buildEventRangeKey(seg.eventRange)}\n          className=\"fc-timeline-bg-harness\"\n          style={hStyle}\n        >\n          {fillType === 'bg-event' ?\n            <BgEvent seg={seg} {...getSegMeta(seg, todayRange, nowDate)} /> :\n            renderFill(fillType)}\n        </div>\n      )\n    })\n\n    return <Fragment>{children}</Fragment>\n  }\n}\n","import {\n  DateRange, intersectRanges, addMs, DateProfile, Slicer,\n  DateProfileGenerator, DateEnv, DateMarker, Seg,\n} from '@fullcalendar/common'\nimport { normalizeRange, isValidDate, TimelineDateProfile } from './timeline-date-profile'\nimport { computeDateSnapCoverage } from './TimelineCoords'\n\nexport interface TimelineLaneSeg extends Seg {\n  // the point of this range is because it might be different than seg.eventRange.range\n  // because the date might have been rounded to the start of a week or a month\n  start: DateMarker\n  end: DateMarker\n}\n\nexport class TimelineLaneSlicer extends Slicer<\n  TimelineLaneSeg,\n  [DateProfile, DateProfileGenerator, TimelineDateProfile, DateEnv]\n> {\n  sliceRange(\n    origRange: DateRange,\n    dateProfile: DateProfile,\n    dateProfileGenerator: DateProfileGenerator,\n    tDateProfile: TimelineDateProfile,\n    dateEnv: DateEnv,\n  ): TimelineLaneSeg[] {\n    let normalRange = normalizeRange(origRange, tDateProfile, dateEnv)\n    let segs: TimelineLaneSeg[] = []\n\n    // protect against when the span is entirely in an invalid date region\n    if (\n      computeDateSnapCoverage(normalRange.start, tDateProfile, dateEnv)\n      < computeDateSnapCoverage(normalRange.end, tDateProfile, dateEnv)\n    ) {\n      // intersect the footprint's range with the grid's range\n      let slicedRange = intersectRanges(normalRange, tDateProfile.normalizedRange)\n\n      if (slicedRange) {\n        segs.push({\n          start: slicedRange.start,\n          end: slicedRange.end,\n          isStart: slicedRange.start.valueOf() === normalRange.start.valueOf()\n            && isValidDate(slicedRange.start, tDateProfile, dateProfile, dateProfileGenerator),\n          isEnd: slicedRange.end.valueOf() === normalRange.end.valueOf()\n            && isValidDate(addMs(slicedRange.end, -1), tDateProfile, dateProfile, dateProfileGenerator),\n        })\n      }\n    }\n\n    return segs\n  }\n}\n","import { StandardEvent, MinimalEventProps, createElement, BaseComponent, createFormatter } from '@fullcalendar/common'\n\nexport interface TimelineEventProps extends MinimalEventProps {\n  isTimeScale: boolean\n}\n\nconst DEFAULT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  omitZeroMinute: true,\n  meridiem: 'narrow',\n})\n\nexport class TimelineEvent extends BaseComponent<TimelineEventProps> {\n  render() {\n    let { props } = this\n\n    return (\n      <StandardEvent\n        {...props}\n        extraClassNames={['fc-timeline-event', 'fc-h-event']}\n        defaultTimeFormat={DEFAULT_TIME_FORMAT}\n        defaultDisplayEventTime={!props.isTimeScale}\n      />\n    )\n  }\n}\n","import {\n  createElement, BaseComponent, Ref, createRef, MoreLinkRoot,\n  setRef, DateProfile, DateRange, DateMarker, Fragment, getSegMeta,\n} from '@fullcalendar/common'\nimport { TimelineSegPlacement } from './event-placement'\nimport { coordsToCss } from './TimelineCoords'\nimport { TimelineEvent } from './TimelineEvent'\nimport { TimelineLaneSeg } from './TimelineLaneSlicer'\n\nexport interface TimelineLaneMoreLinkProps {\n  elRef: Ref<HTMLElement>\n  hiddenSegs: TimelineLaneSeg[]\n  placement: TimelineSegPlacement\n  dateProfile: DateProfile\n  nowDate: DateMarker\n  todayRange: DateRange\n  isTimeScale: boolean\n  eventSelection: string\n  resourceId?: string\n  isForcedInvisible: { [instanceId: string]: any }\n}\n\nexport class TimelineLaneMoreLink extends BaseComponent<TimelineLaneMoreLinkProps> {\n  rootElRef = createRef<HTMLElement>()\n\n  render() {\n    let { props, context } = this\n    let { hiddenSegs, elRef, placement, resourceId } = props\n    let { top, hcoords } = placement\n    let isVisible = hcoords && top !== null\n    let hStyle = coordsToCss(hcoords, context.isRtl)\n    let extraDateSpan = resourceId ? { resourceId } : {}\n\n    return (\n      <MoreLinkRoot\n        allDayDate={null}\n        moreCnt={hiddenSegs.length}\n        allSegs={hiddenSegs}\n        hiddenSegs={hiddenSegs}\n        alignmentElRef={this.rootElRef}\n        dateProfile={props.dateProfile}\n        todayRange={props.todayRange}\n        extraDateSpan={extraDateSpan}\n        popoverContent={() => (\n          <Fragment>\n            {hiddenSegs.map((seg) => {\n              let instanceId = seg.eventRange.instance.instanceId\n              return (\n                <div\n                  key={instanceId}\n                  style={{ visibility: props.isForcedInvisible[instanceId] ? 'hidden' : ('' as any) }}\n                >\n                  <TimelineEvent\n                    isTimeScale={props.isTimeScale}\n                    seg={seg}\n                    isDragging={false}\n                    isResizing={false}\n                    isDateSelecting={false}\n                    isSelected={instanceId === props.eventSelection}\n                    {...getSegMeta(seg, props.todayRange, props.nowDate)}\n                  />\n                </div>\n              )\n            })}\n          </Fragment>\n        )}\n      >\n        {(rootElRef, classNames, innerElRef, innerContent, handleClick, title, isExpanded, popoverId) => (\n          <a\n            ref={(el: HTMLElement | null) => {\n              setRef(rootElRef, el) // for MoreLinkRoot\n              setRef(elRef, el) // for props props\n              setRef(this.rootElRef, el) // for this component\n            }}\n            className={['fc-timeline-more-link'].concat(classNames).join(' ')}\n            style={{\n              visibility: isVisible ? ('' as any) : 'hidden',\n              top: top || 0,\n              ...hStyle,\n            }}\n            onClick={handleClick}\n            title={title}\n            aria-expanded={isExpanded}\n            aria-controls={popoverId}\n          >\n            <div ref={innerElRef} className=\"fc-timeline-more-link-inner fc-sticky\">\n              {innerContent}\n            </div>\n          </a>\n        )}\n      </MoreLinkRoot>\n    )\n  }\n}\n","import {\n  Duration, EventStore, EventUiHash, DateSpan, EventInteractionState,\n  BaseComponent, createElement, memoize, Fragment, RefMap, mapHash, createRef,\n  getSegMeta, DateMarker, DateRange, DateProfile, sortEventSegs, isPropsEqual, buildIsoString,\n  computeEarliestSegStart,\n} from '@fullcalendar/common'\nimport { TimelineDateProfile } from './timeline-date-profile'\nimport { coordsToCss, TimelineCoords } from './TimelineCoords'\nimport { TimelineLaneBg } from './TimelineLaneBg'\nimport { TimelineLaneSlicer, TimelineLaneSeg } from './TimelineLaneSlicer'\nimport { TimelineEvent } from './TimelineEvent'\nimport { TimelineLaneMoreLink } from './TimelineLaneMoreLink'\nimport { computeFgSegPlacements, computeSegHCoords, TimelineSegPlacement } from './event-placement'\n\nexport interface TimelineLaneProps extends TimelineLaneCoreProps {\n  onHeightChange?: (innerEl: HTMLElement, isStable: boolean) => void\n}\n\nexport interface TimelineLaneCoreProps {\n  nowDate: DateMarker\n  todayRange: DateRange\n  dateProfile: DateProfile\n  tDateProfile: TimelineDateProfile\n  nextDayThreshold: Duration\n  businessHours: EventStore | null\n  eventStore: EventStore | null\n  eventUiBases: EventUiHash\n  dateSelection: DateSpan | null\n  eventSelection: string\n  eventDrag: EventInteractionState | null\n  eventResize: EventInteractionState | null\n  timelineCoords: TimelineCoords | null // TODO: renamt to SLAT coords?\n  resourceId?: string // hack\n}\n\ninterface TimelineLaneState {\n  eventInstanceHeights: { [instanceId: string]: number } // integers\n  moreLinkHeights: { [isoStr: string]: number } // integers\n}\n\nexport class TimelineLane extends BaseComponent<TimelineLaneProps, TimelineLaneState> {\n  private slicer = new TimelineLaneSlicer()\n  private sortEventSegs = memoize(sortEventSegs)\n  private harnessElRefs = new RefMap<HTMLDivElement>()\n  private moreElRefs = new RefMap<HTMLDivElement>()\n  private innerElRef = createRef<HTMLDivElement>()\n  // TODO: memoize event positioning\n\n  state: TimelineLaneState = {\n    eventInstanceHeights: {},\n    moreLinkHeights: {},\n  }\n\n  render() {\n    let { props, state, context } = this\n    let { options } = context\n    let { dateProfile, tDateProfile } = props\n\n    let slicedProps = this.slicer.sliceProps(\n      props,\n      dateProfile,\n      tDateProfile.isTimeScale ? null : props.nextDayThreshold,\n      context, // wish we didn't have to pass in the rest of the args...\n      dateProfile,\n      context.dateProfileGenerator,\n      tDateProfile,\n      context.dateEnv,\n    )\n\n    let mirrorSegs =\n      (slicedProps.eventDrag ? slicedProps.eventDrag.segs as TimelineLaneSeg[] : null) ||\n      (slicedProps.eventResize ? slicedProps.eventResize.segs as TimelineLaneSeg[] : null) ||\n      []\n\n    let fgSegs = this.sortEventSegs(slicedProps.fgEventSegs, options.eventOrder) as TimelineLaneSeg[]\n    let fgSegHCoords = computeSegHCoords(fgSegs, options.eventMinWidth, props.timelineCoords)\n    let [fgPlacements, fgHeight] = computeFgSegPlacements(\n      fgSegs,\n      fgSegHCoords,\n      state.eventInstanceHeights,\n      state.moreLinkHeights,\n      options.eventOrderStrict,\n      options.eventMaxStack,\n    )\n\n    let isForcedInvisible = // TODO: more convenient\n      (slicedProps.eventDrag ? slicedProps.eventDrag.affectedInstances : null) ||\n      (slicedProps.eventResize ? slicedProps.eventResize.affectedInstances : null) ||\n      {}\n\n    return (\n      <Fragment>\n        <TimelineLaneBg\n          businessHourSegs={slicedProps.businessHourSegs}\n          bgEventSegs={slicedProps.bgEventSegs}\n          timelineCoords={props.timelineCoords}\n          eventResizeSegs={slicedProps.eventResize ? slicedProps.eventResize.segs as TimelineLaneSeg[] : [] /* bad new empty array? */}\n          dateSelectionSegs={slicedProps.dateSelectionSegs}\n          nowDate={props.nowDate}\n          todayRange={props.todayRange}\n        />\n        <div\n          className=\"fc-timeline-events fc-scrollgrid-sync-inner\"\n          ref={this.innerElRef}\n          style={{ height: fgHeight }}\n        >\n          {this.renderFgSegs(\n            fgPlacements,\n            isForcedInvisible,\n            false,\n            false,\n            false,\n          )}\n          {this.renderFgSegs(\n            buildMirrorPlacements(mirrorSegs, props.timelineCoords, fgPlacements),\n            {},\n            Boolean(slicedProps.eventDrag),\n            Boolean(slicedProps.eventResize),\n            false, // because mirror is never drawn for date selection\n          )}\n        </div>\n      </Fragment>\n    )\n  }\n\n  componentDidMount() {\n    this.updateSize()\n  }\n\n  componentDidUpdate(prevProps: TimelineLaneProps, prevState: TimelineLaneState) {\n    if (\n      prevProps.eventStore !== this.props.eventStore || // external thing changed?\n      prevProps.timelineCoords !== this.props.timelineCoords || // external thing changed?\n      prevState.moreLinkHeights !== this.state.moreLinkHeights // HACK. see addStateEquality\n    ) {\n      this.updateSize()\n    }\n  }\n\n  updateSize() {\n    let { props } = this\n    let { timelineCoords } = props\n\n    if (props.onHeightChange) {\n      props.onHeightChange(this.innerElRef.current, false)\n    }\n\n    if (timelineCoords) {\n      this.setState({\n        eventInstanceHeights: mapHash(this.harnessElRefs.currentMap, (harnessEl) => (\n          Math.round(harnessEl.getBoundingClientRect().height)\n        )),\n        moreLinkHeights: mapHash(this.moreElRefs.currentMap, (moreEl) => (\n          Math.round(moreEl.getBoundingClientRect().height)\n        )),\n      }, () => {\n        if (props.onHeightChange) {\n          props.onHeightChange(this.innerElRef.current, true)\n        }\n      })\n    }\n  }\n\n  renderFgSegs(\n    segPlacements: TimelineSegPlacement[],\n    isForcedInvisible: { [instanceId: string]: any },\n    isDragging: boolean,\n    isResizing: boolean,\n    isDateSelecting: boolean,\n  ) {\n    let { harnessElRefs, moreElRefs, props, context } = this\n    let isMirror = isDragging || isResizing || isDateSelecting\n\n    return (\n      <Fragment>\n        {segPlacements.map((segPlacement) => {\n          let { seg, hcoords, top } = segPlacement\n\n          if (Array.isArray(seg)) { // a more-link\n            let isoStr = buildIsoString(computeEarliestSegStart(seg))\n            return (\n              <TimelineLaneMoreLink\n                key={'m:' + isoStr /* \"m\" for \"more\" */}\n                elRef={moreElRefs.createRef(isoStr)}\n                hiddenSegs={seg}\n                placement={segPlacement}\n                dateProfile={props.dateProfile}\n                nowDate={props.nowDate}\n                todayRange={props.todayRange}\n                isTimeScale={props.tDateProfile.isTimeScale}\n                eventSelection={props.eventSelection}\n                resourceId={props.resourceId}\n                isForcedInvisible={isForcedInvisible}\n              />\n            )\n          }\n\n          let instanceId = seg.eventRange.instance.instanceId\n          let isVisible = isMirror || Boolean(!isForcedInvisible[instanceId] && hcoords && top !== null)\n          let hStyle = coordsToCss(hcoords, context.isRtl)\n\n          return (\n            <div\n              key={'e:' + instanceId /* \"e\" for \"event\" */}\n              ref={isMirror ? null : harnessElRefs.createRef(instanceId)}\n              className=\"fc-timeline-event-harness\"\n              style={{\n                visibility: isVisible ? ('' as any) : 'hidden',\n                top: top || 0,\n                ...hStyle,\n              }}\n            >\n              <TimelineEvent\n                isTimeScale={props.tDateProfile.isTimeScale}\n                seg={seg}\n                isDragging={isDragging}\n                isResizing={isResizing}\n                isDateSelecting={isDateSelecting}\n                isSelected={instanceId === props.eventSelection /* TODO: bad for mirror? */}\n                {...getSegMeta(seg, props.todayRange, props.nowDate)}\n              />\n            </div>\n          )\n        })}\n      </Fragment>\n    )\n  }\n}\n\nTimelineLane.addStateEquality({\n  eventInstanceHeights: isPropsEqual,\n  moreLinkHeights: isPropsEqual,\n})\n\nfunction buildMirrorPlacements(\n  mirrorSegs: TimelineLaneSeg[],\n  timelineCoords: TimelineCoords | null,\n  fgPlacements: TimelineSegPlacement[],\n): TimelineSegPlacement[] {\n  if (!mirrorSegs.length || !timelineCoords) {\n    return []\n  }\n  let topsByInstanceId = buildAbsoluteTopHash(fgPlacements) // TODO: cache this at first render?\n  return mirrorSegs.map((seg) => ({\n    seg,\n    hcoords: timelineCoords.rangeToCoords(seg),\n    top: topsByInstanceId[seg.eventRange.instance.instanceId],\n  }))\n}\n\nfunction buildAbsoluteTopHash(placements: TimelineSegPlacement[]) {\n  let topsByInstanceId: { [instanceId: string]: number } = {}\n\n  for (let placement of placements) {\n    let { seg } = placement\n    if (!Array.isArray(seg)) { // doesn't represent a more-link\n      topsByInstanceId[seg.eventRange.instance.instanceId] = placement.top\n    }\n  }\n\n  return topsByInstanceId\n}\n","import {\n  createElement, createRef, ViewProps, Hit, DateComponent, CssDimValue, VNode, DateMarker, NowTimer,\n  greatestDurationDenominator, DateRange, NowIndicatorRoot, Fragment,\n} from '@fullcalendar/common'\nimport { coordToCss, TimelineCoords } from './TimelineCoords'\nimport { TimelineSlats } from './TimelineSlats'\nimport { TimelineLane } from './TimelineLane'\nimport { TimelineDateProfile } from './timeline-date-profile'\n\nexport interface TimelinGridProps extends ViewProps {\n  tDateProfile: TimelineDateProfile\n  clientWidth: number | null\n  clientHeight: number | null\n  tableMinWidth: CssDimValue\n  tableColGroupNode: VNode\n  onSlatCoords?: (coords: TimelineCoords) => void\n  onScrollLeftRequest?: (scrollLeft: number) => void\n}\n\ninterface TimelineGridState {\n  coords: TimelineCoords | null\n}\n\nexport class TimelineGrid extends DateComponent<TimelinGridProps, TimelineGridState> {\n  private slatsRef = createRef<TimelineSlats>()\n\n  state: TimelineGridState = {\n    coords: null,\n  }\n\n  render() {\n    let { props, state, context } = this\n    let { options } = context\n    let { dateProfile, tDateProfile } = props\n    let timerUnit = greatestDurationDenominator(tDateProfile.slotDuration).unit\n\n    return (\n      <div\n        className=\"fc-timeline-body\"\n        ref={this.handeEl}\n        style={{\n          minWidth: props.tableMinWidth,\n          height: props.clientHeight,\n          width: props.clientWidth,\n        }}\n      >\n        <NowTimer unit={timerUnit}>\n          {(nowDate: DateMarker, todayRange: DateRange) => (\n            <Fragment>\n              <TimelineSlats\n                ref={this.slatsRef}\n                dateProfile={dateProfile}\n                tDateProfile={tDateProfile}\n                nowDate={nowDate}\n                todayRange={todayRange}\n                clientWidth={props.clientWidth}\n                tableColGroupNode={props.tableColGroupNode}\n                tableMinWidth={props.tableMinWidth}\n                onCoords={this.handleCoords}\n                onScrollLeftRequest={props.onScrollLeftRequest}\n              />\n              <TimelineLane\n                dateProfile={dateProfile}\n                tDateProfile={props.tDateProfile}\n                nowDate={nowDate}\n                todayRange={todayRange}\n                nextDayThreshold={options.nextDayThreshold}\n                businessHours={props.businessHours}\n                eventStore={props.eventStore}\n                eventUiBases={props.eventUiBases}\n                dateSelection={props.dateSelection}\n                eventSelection={props.eventSelection}\n                eventDrag={props.eventDrag}\n                eventResize={props.eventResize}\n                timelineCoords={state.coords}\n              />\n              {(options.nowIndicator && state.coords && state.coords.isDateInRange(nowDate)) && (\n                <div className=\"fc-timeline-now-indicator-container\">\n                  <NowIndicatorRoot isAxis={false} date={nowDate}>\n                    {(rootElRef, classNames, innerElRef, innerContent) => (\n                      <div\n                        ref={rootElRef}\n                        className={['fc-timeline-now-indicator-line'].concat(classNames).join(' ')}\n                        style={coordToCss(state.coords.dateToCoord(nowDate), context.isRtl)}\n                      >\n                        {innerContent}\n                      </div>\n                    )}\n                  </NowIndicatorRoot>\n                </div>\n              )}\n            </Fragment>\n          )}\n        </NowTimer>\n      </div>\n    )\n  }\n\n  handeEl = (el: HTMLElement | null) => {\n    if (el) {\n      this.context.registerInteractiveComponent(this, { el })\n    } else {\n      this.context.unregisterInteractiveComponent(this)\n    }\n  }\n\n  handleCoords = (coords: TimelineCoords) => {\n    this.setState({ coords })\n\n    if (this.props.onSlatCoords) {\n      this.props.onSlatCoords(coords)\n    }\n  }\n\n  // Hit System\n  // ------------------------------------------------------------------------------------------\n\n  queryHit(positionLeft: number, positionTop: number, elWidth: number, elHeight: number): Hit {\n    let slats = this.slatsRef.current\n    let slatHit = slats.positionToHit(positionLeft)\n\n    if (slatHit) {\n      return {\n        dateProfile: this.props.dateProfile,\n        dateSpan: slatHit.dateSpan,\n        rect: {\n          left: slatHit.left,\n          right: slatHit.right,\n          top: 0,\n          bottom: elHeight,\n        },\n        dayEl: slatHit.dayEl,\n        layer: 0,\n      }\n    }\n\n    return null\n  }\n}\n","import {\n  createElement, ViewProps, memoize, ChunkContentCallbackArgs, createRef, ViewRoot,\n  DateComponent, ScrollGridSectionConfig, renderScrollShim, getStickyHeaderDates, getStickyFooterScrollbar,\n} from '@fullcalendar/common'\nimport { ScrollGrid } from '@fullcalendar/scrollgrid'\nimport { buildTimelineDateProfile, TimelineDateProfile } from './timeline-date-profile'\nimport { TimelineHeader } from './TimelineHeader'\nimport { TimelineGrid } from './TimelineGrid'\nimport { TimelineCoords } from './TimelineCoords'\n\ninterface TimelineViewState {\n  slatCoords: TimelineCoords | null\n  slotCushionMaxWidth: number | null\n}\n\nexport class TimelineView extends DateComponent<ViewProps, TimelineViewState> { // would make this abstract, but TS complains\n  private buildTimelineDateProfile = memoize(buildTimelineDateProfile)\n  private scrollGridRef = createRef<ScrollGrid>()\n\n  state = {\n    slatCoords: null,\n    slotCushionMaxWidth: null,\n  }\n\n  render() {\n    let { props, state, context } = this\n    let { options } = context\n    let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(options)\n    let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(options)\n\n    let tDateProfile = this.buildTimelineDateProfile(\n      props.dateProfile,\n      context.dateEnv,\n      options,\n      context.dateProfileGenerator,\n    )\n\n    let extraClassNames = [\n      'fc-timeline',\n      options.eventOverlap === false ? 'fc-timeline-overlap-disabled' : '',\n    ]\n\n    let { slotMinWidth } = options\n    let slatCols = buildSlatCols(tDateProfile, slotMinWidth || this.computeFallbackSlotMinWidth(tDateProfile))\n\n    let sections: ScrollGridSectionConfig[] = [\n      {\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunks: [{\n          key: 'timeline',\n          content: (contentArg: ChunkContentCallbackArgs) => (\n            <TimelineHeader\n              dateProfile={props.dateProfile}\n              clientWidth={contentArg.clientWidth}\n              clientHeight={contentArg.clientHeight}\n              tableMinWidth={contentArg.tableMinWidth}\n              tableColGroupNode={contentArg.tableColGroupNode}\n              tDateProfile={tDateProfile}\n              slatCoords={state.slatCoords}\n              onMaxCushionWidth={slotMinWidth ? null : this.handleMaxCushionWidth}\n            />\n          ),\n        }],\n      },\n      {\n        type: 'body',\n        key: 'body',\n        liquid: true,\n        chunks: [{\n          key: 'timeline',\n          content: (contentArg: ChunkContentCallbackArgs) => (\n            <TimelineGrid\n              {...props}\n              clientWidth={contentArg.clientWidth}\n              clientHeight={contentArg.clientHeight}\n              tableMinWidth={contentArg.tableMinWidth}\n              tableColGroupNode={contentArg.tableColGroupNode}\n              tDateProfile={tDateProfile}\n              onSlatCoords={this.handleSlatCoords}\n              onScrollLeftRequest={this.handleScrollLeftRequest}\n            />\n          ),\n        }],\n      },\n    ]\n\n    if (stickyFooterScrollbar) {\n      sections.push({\n        type: 'footer',\n        key: 'footer',\n        isSticky: true,\n        chunks: [{\n          key: 'timeline',\n          content: renderScrollShim,\n        }],\n      })\n    }\n\n    return (\n      <ViewRoot viewSpec={context.viewSpec}>\n        {(rootElRef, classNames) => (\n          <div ref={rootElRef} className={extraClassNames.concat(classNames).join(' ')}>\n            <ScrollGrid\n              ref={this.scrollGridRef}\n              liquid={!props.isHeightAuto && !props.forPrint}\n              collapsibleWidth={false}\n              colGroups={[\n                { cols: slatCols },\n              ]}\n              sections={sections}\n            />\n          </div>\n        )}\n      </ViewRoot>\n    )\n  }\n\n  handleSlatCoords = (slatCoords: TimelineCoords | null) => {\n    this.setState({ slatCoords })\n  }\n\n  handleScrollLeftRequest = (scrollLeft: number) => {\n    let scrollGrid = this.scrollGridRef.current\n    scrollGrid.forceScrollLeft(0, scrollLeft)\n  }\n\n  handleMaxCushionWidth = (slotCushionMaxWidth) => {\n    this.setState({\n      slotCushionMaxWidth: Math.ceil(slotCushionMaxWidth), // for less rerendering TODO: DRY\n    })\n  }\n\n  computeFallbackSlotMinWidth(tDateProfile: TimelineDateProfile) { // TODO: duplicate definition\n    return Math.max(30, ((this.state.slotCushionMaxWidth || 0) / tDateProfile.slotsPerLabel))\n  }\n}\n\nexport function buildSlatCols(tDateProfile: TimelineDateProfile, slotMinWidth?: number) {\n  return [{\n    span: tDateProfile.slotCnt,\n    minWidth: slotMinWidth || 1, // needs to be a non-zero number to trigger horizontal scrollbars!??????\n  }]\n}\n","import * as react from 'react';\nimport * as reactDom from 'react-dom';\n(typeof globalThis !== 'undefined' ? globalThis : window).FullCalendarVDom = {\n    Component: react.Component,\n    createElement: react.createElement,\n    render: reactDom.render,\n    createRef: react.createRef,\n    Fragment: react.Fragment,\n    createContext: react.createContext,\n    createPortal: reactDom.createPortal,\n    flushToDom: flushToDom,\n    unmountComponentAtNode: reactDom.unmountComponentAtNode\n};\nexport function flushToDom() {\n    // always sync from top-level\n}\n//# sourceMappingURL=vdom.js.map","import { __assign, __extends } from \"tslib\";\nimport './vdom';\nimport * as React from 'react';\nimport { CalendarApi, CalendarDataProvider, CalendarContent, CalendarRoot } from '@fullcalendar/common';\nvar FullCalendar = /** @class */ (function (_super) {\n    __extends(FullCalendar, _super);\n    function FullCalendar() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._calendarApi = new CalendarApi();\n        return _this;\n    }\n    FullCalendar.prototype.render = function () {\n        return (React.createElement(CalendarDataProvider, { optionOverrides: this.props, calendarApi: this._calendarApi }, function (data) { return (React.createElement(CalendarRoot, { options: data.calendarOptions, theme: data.theme, emitter: data.emitter }, function (classNames, height, isHeightAuto, forPrint) { return (React.createElement(\"div\", { className: classNames.join(' '), style: { height: height } },\n            React.createElement(CalendarContent, __assign({ isHeightAuto: isHeightAuto, forPrint: forPrint }, data)))); })); }));\n    };\n    FullCalendar.prototype.getApi = function () {\n        return this._calendarApi;\n    };\n    return FullCalendar;\n}(React.Component));\nexport default FullCalendar;\n// export all important utils/types\nexport * from '@fullcalendar/common';\n//# sourceMappingURL=main.js.map","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getToggleButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButton', slot);\n}\nconst toggleButtonClasses = generateUtilityClasses('MuiToggleButton', ['root', 'disabled', 'selected', 'standard', 'primary', 'secondary', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default toggleButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"fullWidth\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"];\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha } from '../styles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport toggleButtonClasses, { getToggleButtonUtilityClass } from './toggleButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    fullWidth,\n    selected,\n    disabled,\n    size,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', disabled && 'disabled', fullWidth && 'fullWidth', `size${capitalize(size)}`, color]\n  };\n  return composeClasses(slots, getToggleButtonUtilityClass, classes);\n};\n\nconst ToggleButtonRoot = styled(ButtonBase, {\n  name: 'MuiToggleButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const selectedColor = ownerState.color === 'standard' ? theme.palette.text.primary : theme.palette[ownerState.color].main;\n  return _extends({}, theme.typography.button, {\n    borderRadius: theme.shape.borderRadius,\n    padding: 11,\n    border: `1px solid ${theme.palette.divider}`,\n    color: theme.palette.action.active\n  }, ownerState.fullWidth && {\n    width: '100%'\n  }, {\n    [`&.${toggleButtonClasses.disabled}`]: {\n      color: theme.palette.action.disabled,\n      border: `1px solid ${theme.palette.action.disabledBackground}`\n    },\n    '&:hover': {\n      textDecoration: 'none',\n      // Reset on mouse devices\n      backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${toggleButtonClasses.selected}`]: {\n      color: selectedColor,\n      backgroundColor: alpha(selectedColor, theme.palette.action.selectedOpacity),\n      '&:hover': {\n        backgroundColor: alpha(selectedColor, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: alpha(selectedColor, theme.palette.action.selectedOpacity)\n        }\n      }\n    }\n  }, ownerState.size === 'small' && {\n    padding: 7,\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && {\n    padding: 15,\n    fontSize: theme.typography.pxToRem(15)\n  });\n});\nconst ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButton'\n  });\n\n  const {\n    children,\n    className,\n    color = 'standard',\n    disabled = false,\n    disableFocusRipple = false,\n    fullWidth = false,\n    onChange,\n    onClick,\n    selected,\n    size = 'medium',\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    disabled,\n    disableFocusRipple,\n    fullWidth,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleChange = event => {\n    if (onClick) {\n      onClick(event, value);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(ToggleButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    ownerState: ownerState,\n    \"aria-pressed\": selected\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the button when it is in an active state.\n   * @default 'standard'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * If `true`, the button is rendered in an active state.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * The prop defaults to the value inherited from the parent ToggleButtonGroup component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\nexport default ToggleButton;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","/// <reference types=\"@fullcalendar/core-preact\" />\nif (typeof FullCalendarVDom === 'undefined') {\n    throw new Error('Please import the top-level fullcalendar lib before attempting to import a plugin.');\n}\nvar Component = FullCalendarVDom.Component;\nvar createElement = FullCalendarVDom.createElement;\nvar render = FullCalendarVDom.render;\nvar createRef = FullCalendarVDom.createRef;\nvar Fragment = FullCalendarVDom.Fragment;\nvar createContext = FullCalendarVDom.createContext;\nvar createPortal = FullCalendarVDom.createPortal;\nvar flushToDom = FullCalendarVDom.flushToDom;\nvar unmountComponentAtNode = FullCalendarVDom.unmountComponentAtNode;\n/* eslint-enable */\n\nexport { Component, Fragment, createContext, createElement, createPortal, createRef, flushToDom, render, unmountComponentAtNode };\n","import { EventSource } from '../structs/event-source'\nimport { CalendarContext } from '../CalendarContext'\n\n// no public types yet. when there are, export from:\n// import {} from './api-type-deps'\n\nexport class EventSourceApi {\n  constructor(\n    private context: CalendarContext,\n    public internalEventSource: EventSource<any>, // rename?\n  ) {\n  }\n\n  remove() {\n    this.context.dispatch({\n      type: 'REMOVE_EVENT_SOURCE',\n      sourceId: this.internalEventSource.sourceId,\n    })\n  }\n\n  refetch() {\n    this.context.dispatch({\n      type: 'FETCH_EVENT_SOURCES',\n      sourceIds: [this.internalEventSource.sourceId],\n      isRefetch: true,\n    })\n  }\n\n  get id(): string {\n    return this.internalEventSource.publicId\n  }\n\n  get url(): string {\n    return this.internalEventSource.meta.url\n  }\n\n  get format(): string {\n    return this.internalEventSource.meta.format // TODO: bad. not guaranteed\n  }\n}\n","import { Dictionary } from '../options'\n\nexport function removeElement(el: HTMLElement) { // removes nodes in addition to elements. bad name\n  if (el.parentNode) {\n    el.parentNode.removeChild(el)\n  }\n}\n\n// Querying\n// ----------------------------------------------------------------------------------------------------------------\n\nexport function elementClosest(el: HTMLElement, selector: string): HTMLElement {\n  if (el.closest) {\n    return el.closest(selector)\n\n  // really bad fallback for IE\n  // from https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n  }\n  if (!document.documentElement.contains(el)) {\n    return null\n  }\n  do {\n    if (elementMatches(el, selector)) {\n      return el\n    }\n    el = (el.parentElement || el.parentNode) as HTMLElement\n  } while (el !== null && el.nodeType === 1)\n  return null\n}\n\nexport function elementMatches(el: HTMLElement, selector: string): HTMLElement {\n  let method = el.matches || (el as any).matchesSelector || (el as any).msMatchesSelector\n\n  return method.call(el, selector)\n}\n\n// accepts multiple subject els\n// returns a real array. good for methods like forEach\n// TODO: accept the document\nexport function findElements(container: HTMLElement[] | HTMLElement | NodeListOf<HTMLElement>, selector: string): HTMLElement[] {\n  let containers = container instanceof HTMLElement ? [container] : container\n  let allMatches: HTMLElement[] = []\n\n  for (let i = 0; i < containers.length; i += 1) {\n    let matches = containers[i].querySelectorAll(selector)\n\n    for (let j = 0; j < matches.length; j += 1) {\n      allMatches.push(matches[j] as HTMLElement)\n    }\n  }\n\n  return allMatches\n}\n\n// accepts multiple subject els\n// only queries direct child elements // TODO: rename to findDirectChildren!\nexport function findDirectChildren(parent: HTMLElement[] | HTMLElement, selector?: string): HTMLElement[] {\n  let parents = parent instanceof HTMLElement ? [parent] : parent\n  let allMatches = []\n\n  for (let i = 0; i < parents.length; i += 1) {\n    let childNodes = parents[i].children // only ever elements\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      let childNode = childNodes[j]\n\n      if (!selector || elementMatches(childNode as HTMLElement, selector)) {\n        allMatches.push(childNode)\n      }\n    }\n  }\n\n  return allMatches\n}\n\n// Style\n// ----------------------------------------------------------------------------------------------------------------\n\nconst PIXEL_PROP_RE = /(top|left|right|bottom|width|height)$/i\n\nexport function applyStyle(el: HTMLElement, props: Dictionary) {\n  for (let propName in props) {\n    applyStyleProp(el, propName, props[propName])\n  }\n}\n\nexport function applyStyleProp(el: HTMLElement, name: string, val) {\n  if (val == null) {\n    el.style[name] = ''\n  } else if (typeof val === 'number' && PIXEL_PROP_RE.test(name)) {\n    el.style[name] = `${val}px`\n  } else {\n    el.style[name] = val\n  }\n}\n\n// Event Handling\n// ----------------------------------------------------------------------------------------------------------------\n\n// if intercepting bubbled events at the document/window/body level,\n// and want to see originating element (the 'target'), use this util instead\n// of `ev.target` because it goes within web-component boundaries.\nexport function getEventTargetViaRoot(ev: Event) {\n  return ev.composedPath?.()[0] ?? ev.target\n}\n\n// Shadow DOM consuderations\n// ----------------------------------------------------------------------------------------------------------------\n\nexport function getElRoot(el: HTMLElement): ShadowRoot | Document {\n  return el.getRootNode ? el.getRootNode() as ShadowRoot : document\n}\n\n// Unique ID for DOM attribute\n\nlet guid = 0\n\nexport function getUniqueDomId() {\n  guid += 1\n  return 'fc-dom-' + guid\n}\n","import { elementClosest } from './dom-manip'\nimport { VUIEvent } from '../vdom'\n\n// Stops a mouse/touch event from doing it's native browser action\nexport function preventDefault(ev) {\n  ev.preventDefault()\n}\n\n// Event Delegation\n// ----------------------------------------------------------------------------------------------------------------\n\nexport function buildDelegationHandler<EventType extends (Event | VUIEvent)>(\n  selector: string,\n  handler: (ev: EventType, matchedTarget: HTMLElement) => void,\n) {\n  return (ev: EventType) => {\n    let matchedChild = elementClosest(ev.target as HTMLElement, selector)\n\n    if (matchedChild) {\n      handler.call(matchedChild, ev, matchedChild)\n    }\n  }\n}\n\nexport function listenBySelector(\n  container: HTMLElement,\n  eventType: string,\n  selector: string,\n  handler: (ev: Event, matchedTarget: HTMLElement) => void,\n) {\n  let attachedHandler = buildDelegationHandler(selector, handler)\n\n  container.addEventListener(eventType, attachedHandler)\n\n  return () => {\n    container.removeEventListener(eventType, attachedHandler)\n  }\n}\n\nexport function listenToHoverBySelector(\n  container: HTMLElement,\n  selector: string,\n  onMouseEnter: (ev: Event, matchedTarget: HTMLElement) => void,\n  onMouseLeave: (ev: Event, matchedTarget: HTMLElement) => void,\n) {\n  let currentMatchedChild\n\n  return listenBySelector(container, 'mouseover', selector, (mouseOverEv, matchedChild) => {\n    if (matchedChild !== currentMatchedChild) {\n      currentMatchedChild = matchedChild\n      onMouseEnter(mouseOverEv, matchedChild)\n\n      let realOnMouseLeave = (mouseLeaveEv) => {\n        currentMatchedChild = null\n        onMouseLeave(mouseLeaveEv, matchedChild)\n        matchedChild.removeEventListener('mouseleave', realOnMouseLeave)\n      }\n\n      // listen to the next mouseleave, and then unattach\n      matchedChild.addEventListener('mouseleave', realOnMouseLeave)\n    }\n  })\n}\n\n// Animation\n// ----------------------------------------------------------------------------------------------------------------\n\nconst transitionEventNames = [\n  'webkitTransitionEnd',\n  'otransitionend',\n  'oTransitionEnd',\n  'msTransitionEnd',\n  'transitionend',\n]\n\n// triggered only when the next single subsequent transition finishes\nexport function whenTransitionDone(el: HTMLElement, callback: (ev: Event) => void) {\n  let realCallback = (ev) => {\n    callback(ev)\n    transitionEventNames.forEach((eventName) => {\n      el.removeEventListener(eventName, realCallback)\n    })\n  }\n\n  transitionEventNames.forEach((eventName) => {\n    el.addEventListener(eventName, realCallback) // cross-browser way to determine when the transition finishes\n  })\n}\n\n// ARIA workarounds\n// ----------------------------------------------------------------------------------------------------------------\n\nexport function createAriaClickAttrs(handler: ((ev: UIEvent) => void)) {\n  return {\n    onClick: handler,\n    ...createAriaKeyboardAttrs(handler),\n  }\n}\n\nexport function createAriaKeyboardAttrs(handler: ((ev: UIEvent) => void)) {\n  return {\n    tabIndex: 0,\n    onKeyDown(ev: KeyboardEvent) {\n      if (ev.key === 'Enter' || ev.key === ' ') {\n        handler(ev)\n        ev.preventDefault() // if space, don't scroll down page\n      }\n    },\n  }\n}\n","import { preventDefault } from './dom-event'\n\nexport type GenericHash = { [key: string]: any } // already did this somewhere\n\nlet guidNumber = 0\n\nexport function guid() {\n  guidNumber += 1\n  return String(guidNumber)\n}\n\n/* FullCalendar-specific DOM Utilities\n----------------------------------------------------------------------------------------------------------------------*/\n\n// Make the mouse cursor express that an event is not allowed in the current area\nexport function disableCursor() {\n  document.body.classList.add('fc-not-allowed')\n}\n\n// Returns the mouse cursor to its original look\nexport function enableCursor() {\n  document.body.classList.remove('fc-not-allowed')\n}\n\n/* Selection\n----------------------------------------------------------------------------------------------------------------------*/\n\nexport function preventSelection(el: HTMLElement) {\n  el.classList.add('fc-unselectable')\n  el.addEventListener('selectstart', preventDefault)\n}\n\nexport function allowSelection(el: HTMLElement) {\n  el.classList.remove('fc-unselectable')\n  el.removeEventListener('selectstart', preventDefault)\n}\n\n/* Context Menu\n----------------------------------------------------------------------------------------------------------------------*/\n\nexport function preventContextMenu(el: HTMLElement) {\n  el.addEventListener('contextmenu', preventDefault)\n}\n\nexport function allowContextMenu(el: HTMLElement) {\n  el.removeEventListener('contextmenu', preventDefault)\n}\n\n/* Object Ordering by Field\n----------------------------------------------------------------------------------------------------------------------*/\n\nexport interface OrderSpec<Subject> {\n  field?: string\n  order?: number\n  func?: FieldSpecInputFunc<Subject>\n}\n\nexport type FieldSpecInput<Subject> = string | string[] | FieldSpecInputFunc<Subject> | FieldSpecInputFunc<Subject>[]\nexport type FieldSpecInputFunc<Subject> = (a: Subject, b: Subject) => number\n\nexport function parseFieldSpecs<Subject>(input: FieldSpecInput<Subject>): OrderSpec<Subject>[] {\n  let specs: OrderSpec<Subject>[] = []\n  let tokens = []\n  let i\n  let token\n\n  if (typeof input === 'string') {\n    tokens = input.split(/\\s*,\\s*/)\n  } else if (typeof input === 'function') {\n    tokens = [input]\n  } else if (Array.isArray(input)) {\n    tokens = input\n  }\n\n  for (i = 0; i < tokens.length; i += 1) {\n    token = tokens[i]\n\n    if (typeof token === 'string') {\n      specs.push(\n        token.charAt(0) === '-' ?\n          { field: token.substring(1), order: -1 } :\n          { field: token, order: 1 },\n      )\n    } else if (typeof token === 'function') {\n      specs.push({ func: token })\n    }\n  }\n\n  return specs\n}\n\nexport function compareByFieldSpecs<Subject>(obj0: Subject, obj1: Subject, fieldSpecs: OrderSpec<Subject>[]): number {\n  let i\n  let cmp\n\n  for (i = 0; i < fieldSpecs.length; i += 1) {\n    cmp = compareByFieldSpec(obj0, obj1, fieldSpecs[i])\n    if (cmp) {\n      return cmp\n    }\n  }\n\n  return 0\n}\n\nexport function compareByFieldSpec<Subject>(obj0: Subject, obj1: Subject, fieldSpec: OrderSpec<Subject>): number {\n  if (fieldSpec.func) {\n    return fieldSpec.func(obj0, obj1)\n  }\n\n  return flexibleCompare(obj0[fieldSpec.field], obj1[fieldSpec.field])\n    * (fieldSpec.order || 1)\n}\n\nexport function flexibleCompare(a, b) {\n  if (!a && !b) {\n    return 0\n  }\n  if (b == null) {\n    return -1\n  }\n  if (a == null) {\n    return 1\n  }\n  if (typeof a === 'string' || typeof b === 'string') {\n    return String(a).localeCompare(String(b))\n  }\n  return a - b\n}\n\n/* String Utilities\n----------------------------------------------------------------------------------------------------------------------*/\n\nexport function padStart(val, len) { // doesn't work with total length more than 3\n  let s = String(val)\n  return '000'.substr(0, len - s.length) + s\n}\n\nexport function formatWithOrdinals<Args extends any[]>(\n  formatter: string | ((...formatterArgs: Args) => string),\n  args: Args,\n  fallbackText: string,\n) {\n  if (typeof formatter === 'function') {\n    return formatter(...args)\n  }\n  if (typeof formatter === 'string') { // non-blank string\n    return args.reduce((str, arg, index) => (\n      str.replace('$' + index, arg || '')\n    ), formatter)\n  }\n  return fallbackText\n}\n\n/* Number Utilities\n----------------------------------------------------------------------------------------------------------------------*/\n\nexport function compareNumbers(a, b) { // for .sort()\n  return a - b\n}\n\nexport function isInt(n) {\n  return n % 1 === 0\n}\n\n/* Weird Utilities\n----------------------------------------------------------------------------------------------------------------------*/\n\nexport function firstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (args[i] !== undefined) {\n      return args[i]\n    }\n  }\n  return undefined\n}\n\n/* FC-specific DOM dimension stuff\n----------------------------------------------------------------------------------------------------------------------*/\n\nexport function computeSmallestCellWidth(cellEl: HTMLElement) {\n  let allWidthEl = cellEl.querySelector('.fc-scrollgrid-shrink-frame')\n  let contentWidthEl = cellEl.querySelector('.fc-scrollgrid-shrink-cushion')\n\n  if (!allWidthEl) {\n    throw new Error('needs fc-scrollgrid-shrink-frame className') // TODO: use const\n  }\n  if (!contentWidthEl) {\n    throw new Error('needs fc-scrollgrid-shrink-cushion className')\n  }\n\n  return cellEl.getBoundingClientRect().width - allWidthEl.getBoundingClientRect().width + // the cell padding+border\n    contentWidthEl.getBoundingClientRect().width\n}\n","import { Duration } from './duration'\n\nexport type DateMarker = Date\n\nexport const DAY_IDS = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat']\n\n// Adding\n\nexport function addWeeks(m: DateMarker, n: number) {\n  let a = dateToUtcArray(m)\n  a[2] += n * 7\n  return arrayToUtcDate(a)\n}\n\nexport function addDays(m: DateMarker, n: number) {\n  let a = dateToUtcArray(m)\n  a[2] += n\n  return arrayToUtcDate(a)\n}\n\nexport function addMs(m: DateMarker, n: number) {\n  let a = dateToUtcArray(m)\n  a[6] += n\n  return arrayToUtcDate(a)\n}\n\n// Diffing (all return floats)\n// TODO: why not use ranges?\n\nexport function diffWeeks(m0, m1) {\n  return diffDays(m0, m1) / 7\n}\n\nexport function diffDays(m0, m1) {\n  return (m1.valueOf() - m0.valueOf()) / (1000 * 60 * 60 * 24)\n}\n\nexport function diffHours(m0, m1) {\n  return (m1.valueOf() - m0.valueOf()) / (1000 * 60 * 60)\n}\n\nexport function diffMinutes(m0, m1) {\n  return (m1.valueOf() - m0.valueOf()) / (1000 * 60)\n}\n\nexport function diffSeconds(m0, m1) {\n  return (m1.valueOf() - m0.valueOf()) / 1000\n}\n\nexport function diffDayAndTime(m0: DateMarker, m1: DateMarker): Duration {\n  let m0day = startOfDay(m0)\n  let m1day = startOfDay(m1)\n\n  return {\n    years: 0,\n    months: 0,\n    days: Math.round(diffDays(m0day, m1day)),\n    milliseconds: (m1.valueOf() - m1day.valueOf()) - (m0.valueOf() - m0day.valueOf()),\n  }\n}\n\n// Diffing Whole Units\n\nexport function diffWholeWeeks(m0: DateMarker, m1: DateMarker): number {\n  let d = diffWholeDays(m0, m1)\n\n  if (d !== null && d % 7 === 0) {\n    return d / 7\n  }\n\n  return null\n}\n\nexport function diffWholeDays(m0: DateMarker, m1: DateMarker): number {\n  if (timeAsMs(m0) === timeAsMs(m1)) {\n    return Math.round(diffDays(m0, m1))\n  }\n  return null\n}\n\n// Start-Of\n\nexport function startOfDay(m: DateMarker): DateMarker {\n  return arrayToUtcDate([\n    m.getUTCFullYear(),\n    m.getUTCMonth(),\n    m.getUTCDate(),\n  ])\n}\n\nexport function startOfHour(m: DateMarker) {\n  return arrayToUtcDate([\n    m.getUTCFullYear(),\n    m.getUTCMonth(),\n    m.getUTCDate(),\n    m.getUTCHours(),\n  ])\n}\n\nexport function startOfMinute(m: DateMarker) {\n  return arrayToUtcDate([\n    m.getUTCFullYear(),\n    m.getUTCMonth(),\n    m.getUTCDate(),\n    m.getUTCHours(),\n    m.getUTCMinutes(),\n  ])\n}\n\nexport function startOfSecond(m: DateMarker) {\n  return arrayToUtcDate([\n    m.getUTCFullYear(),\n    m.getUTCMonth(),\n    m.getUTCDate(),\n    m.getUTCHours(),\n    m.getUTCMinutes(),\n    m.getUTCSeconds(),\n  ])\n}\n\n// Week Computation\n\nexport function weekOfYear(marker, dow, doy) {\n  let y = marker.getUTCFullYear()\n  let w = weekOfGivenYear(marker, y, dow, doy)\n\n  if (w < 1) {\n    return weekOfGivenYear(marker, y - 1, dow, doy)\n  }\n\n  let nextW = weekOfGivenYear(marker, y + 1, dow, doy)\n  if (nextW >= 1) {\n    return Math.min(w, nextW)\n  }\n\n  return w\n}\n\nfunction weekOfGivenYear(marker, year, dow, doy) {\n  let firstWeekStart = arrayToUtcDate([year, 0, 1 + firstWeekOffset(year, dow, doy)])\n  let dayStart = startOfDay(marker)\n  let days = Math.round(diffDays(firstWeekStart, dayStart))\n\n  return Math.floor(days / 7) + 1 // zero-indexed\n}\n\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n  // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n  let fwd = 7 + dow - doy\n\n  // first-week day local weekday -- which local weekday is fwd\n  let fwdlw = (7 + arrayToUtcDate([year, 0, fwd]).getUTCDay() - dow) % 7\n\n  return -fwdlw + fwd - 1\n}\n\n// Array Conversion\n\nexport function dateToLocalArray(date) {\n  return [\n    date.getFullYear(),\n    date.getMonth(),\n    date.getDate(),\n    date.getHours(),\n    date.getMinutes(),\n    date.getSeconds(),\n    date.getMilliseconds(),\n  ]\n}\n\nexport function arrayToLocalDate(a) {\n  return new Date(\n    a[0],\n    a[1] || 0,\n    a[2] == null ? 1 : a[2], // day of month\n    a[3] || 0,\n    a[4] || 0,\n    a[5] || 0,\n  )\n}\n\nexport function dateToUtcArray(date) {\n  return [\n    date.getUTCFullYear(),\n    date.getUTCMonth(),\n    date.getUTCDate(),\n    date.getUTCHours(),\n    date.getUTCMinutes(),\n    date.getUTCSeconds(),\n    date.getUTCMilliseconds(),\n  ]\n}\n\nexport function arrayToUtcDate(a) {\n  // according to web standards (and Safari), a month index is required.\n  // massage if only given a year.\n  if (a.length === 1) {\n    a = a.concat([0])\n  }\n\n  return new Date(Date.UTC(...(a as [any, any])))\n}\n\n// Other Utils\n\nexport function isValidDate(m: DateMarker) {\n  return !isNaN(m.valueOf())\n}\n\nexport function timeAsMs(m: DateMarker) {\n  return m.getUTCHours() * 1000 * 60 * 60 +\n    m.getUTCMinutes() * 1000 * 60 +\n    m.getUTCSeconds() * 1000 +\n    m.getUTCMilliseconds()\n}\n","import { DateRange } from '../datelib/date-range'\nimport { guid } from '../util/misc'\n\nexport interface EventInstance {\n  instanceId: string\n  defId: string\n  range: DateRange\n  forcedStartTzo: number | null\n  forcedEndTzo: number | null\n}\n\nexport type EventInstanceHash = { [instanceId: string]: EventInstance }\n\nexport function createEventInstance(\n  defId: string,\n  range: DateRange,\n  forcedStartTzo?: number,\n  forcedEndTzo?: number,\n): EventInstance {\n  return {\n    instanceId: guid(),\n    defId,\n    range,\n    forcedStartTzo: forcedStartTzo == null ? null : forcedStartTzo,\n    forcedEndTzo: forcedEndTzo == null ? null : forcedEndTzo,\n  }\n}\n","const { hasOwnProperty } = Object.prototype\n\n// Merges an array of objects into a single object.\n// The second argument allows for an array of property names who's object values will be merged together.\nexport function mergeProps(propObjs, complexPropsMap?): any {\n  let dest = {}\n\n  if (complexPropsMap) {\n    for (let name in complexPropsMap) {\n      let complexObjs = []\n\n      // collect the trailing object values, stopping when a non-object is discovered\n      for (let i = propObjs.length - 1; i >= 0; i -= 1) {\n        let val = propObjs[i][name]\n\n        if (typeof val === 'object' && val) { // non-null object\n          complexObjs.unshift(val)\n        } else if (val !== undefined) {\n          dest[name] = val // if there were no objects, this value will be used\n          break\n        }\n      }\n\n      // if the trailing values were objects, use the merged value\n      if (complexObjs.length) {\n        dest[name] = mergeProps(complexObjs)\n      }\n    }\n  }\n\n  // copy values into the destination, going from last to first\n  for (let i = propObjs.length - 1; i >= 0; i -= 1) {\n    let props = propObjs[i]\n\n    for (let name in props) {\n      if (!(name in dest)) { // if already assigned by previous props or complex props, don't reassign\n        dest[name] = props[name]\n      }\n    }\n  }\n\n  return dest\n}\n\nexport function filterHash(hash, func) {\n  let filtered = {}\n\n  for (let key in hash) {\n    if (func(hash[key], key)) {\n      filtered[key] = hash[key]\n    }\n  }\n\n  return filtered\n}\n\nexport function mapHash<InputItem, OutputItem>(\n  hash: { [key: string]: InputItem },\n  func: (input: InputItem, key: string) => OutputItem,\n): { [key: string]: OutputItem } {\n  let newHash = {}\n\n  for (let key in hash) {\n    newHash[key] = func(hash[key], key)\n  }\n\n  return newHash\n}\n\nexport function arrayToHash(a): { [key: string]: true } { // TODO: rename to strinArrayToHash or something\n  let hash = {}\n\n  for (let item of a) {\n    hash[item] = true\n  }\n\n  return hash\n}\n\nexport function buildHashFromArray<Item, ItemRes>(a: Item[], func: (item: Item, index: number) => [ string, ItemRes ]) {\n  let hash: { [key: string]: ItemRes } = {}\n\n  for (let i = 0; i < a.length; i += 1) {\n    let tuple = func(a[i], i)\n\n    hash[tuple[0]] = tuple[1]\n  }\n\n  return hash\n}\n\nexport function hashValuesToArray(obj) { // can't use Object.values yet because of no IE support\n  let a = []\n\n  for (let key in obj) {\n    a.push(obj[key])\n  }\n\n  return a\n}\n\nexport function isPropsEqual(obj0, obj1) { // TODO: merge with compareObjs\n  if (obj0 === obj1) {\n    return true\n  }\n\n  for (let key in obj0) {\n    if (hasOwnProperty.call(obj0, key)) {\n      if (!(key in obj1)) {\n        return false\n      }\n    }\n  }\n\n  for (let key in obj1) {\n    if (hasOwnProperty.call(obj1, key)) {\n      if (obj0[key] !== obj1[key]) {\n        return false\n      }\n    }\n  }\n\n  return true\n}\n\nexport function getUnequalProps(obj0, obj1) {\n  let keys: string[] = []\n\n  for (let key in obj0) {\n    if (hasOwnProperty.call(obj0, key)) {\n      if (!(key in obj1)) {\n        keys.push(key)\n      }\n    }\n  }\n\n  for (let key in obj1) {\n    if (hasOwnProperty.call(obj1, key)) {\n      if (obj0[key] !== obj1[key]) {\n        keys.push(key)\n      }\n    }\n  }\n\n  return keys\n}\n\nexport type EqualityFunc<T> = (a: T, b: T) => boolean\nexport type EqualityThing<T> = EqualityFunc<T> | true\n\nexport type EqualityFuncs<ObjType> = { // not really just a \"func\" anymore\n  [K in keyof ObjType]?: EqualityThing<ObjType[K]>\n}\n\nexport function compareObjs(oldProps, newProps, equalityFuncs: EqualityFuncs<any> = {}) {\n  if (oldProps === newProps) {\n    return true\n  }\n\n  for (let key in newProps) {\n    if (key in oldProps && isObjValsEqual(oldProps[key], newProps[key], equalityFuncs[key])) {\n      // equal\n    } else {\n      return false\n    }\n  }\n\n  // check for props that were omitted in the new\n  for (let key in oldProps) {\n    if (!(key in newProps)) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/*\nassumed \"true\" equality for handler names like \"onReceiveSomething\"\n*/\nfunction isObjValsEqual<T>(val0: T, val1: T, comparator: EqualityThing<T>) {\n  if (val0 === val1 || comparator === true) {\n    return true\n  }\n  if (comparator) {\n    return comparator(val0, val1)\n  }\n  return false\n}\n\nexport function collectFromHash<Item>(\n  hash: { [key: string]: Item },\n  startIndex = 0,\n  endIndex?: number,\n  step = 1,\n) {\n  let res: Item[] = []\n\n  if (endIndex == null) {\n    endIndex = Object.keys(hash).length\n  }\n\n  for (let i = startIndex; i < endIndex; i += step) {\n    let val = hash[i]\n\n    if (val !== undefined) { // will disregard undefined for sparse arrays\n      res.push(val)\n    }\n  }\n\n  return res\n}\n","import { EventDef } from './event-def'\nimport { EventInstance, createEventInstance } from './event-instance'\nimport { DateRange } from '../datelib/date-range'\nimport { DateEnv } from '../datelib/env'\nimport { Duration } from '../datelib/duration'\nimport { DateMarker, startOfDay } from '../datelib/marker'\nimport { EventStore } from './event-store'\nimport { CalendarContext } from '../CalendarContext'\nimport { filterHash } from '../util/object'\nimport { EventRefined } from './event-parse'\n\n/*\nThe plugin system for defining how a recurring event is expanded into individual instances.\n*/\n\nexport interface ParsedRecurring<RecurringData> {\n  typeData: RecurringData\n  allDayGuess: boolean | null\n  duration: Duration | null // signals hasEnd\n}\n\nexport interface RecurringType<RecurringData> {\n  parse: (refined: EventRefined, dateEnv: DateEnv) => ParsedRecurring<RecurringData> | null // TODO: rename to post-process or something\n  expand: (typeData: any, framingRange: DateRange, dateEnv: DateEnv) => DateMarker[]\n}\n\nexport function parseRecurring(\n  refined: EventRefined,\n  defaultAllDay: boolean | null,\n  dateEnv: DateEnv,\n  recurringTypes: RecurringType<any>[],\n) {\n  for (let i = 0; i < recurringTypes.length; i += 1) {\n    let parsed = recurringTypes[i].parse(refined, dateEnv)\n\n    if (parsed) {\n      let { allDay } = refined\n      if (allDay == null) {\n        allDay = defaultAllDay\n        if (allDay == null) {\n          allDay = parsed.allDayGuess\n          if (allDay == null) {\n            allDay = false\n          }\n        }\n      }\n\n      return {\n        allDay,\n        duration: parsed.duration,\n        typeData: parsed.typeData,\n        typeId: i,\n      }\n    }\n  }\n\n  return null\n}\n\nexport function expandRecurring(eventStore: EventStore, framingRange: DateRange, context: CalendarContext): EventStore {\n  let { dateEnv, pluginHooks, options } = context\n  let { defs, instances } = eventStore\n\n  // remove existing recurring instances\n  // TODO: bad. always expand events as a second step\n  instances = filterHash(instances, (instance: EventInstance) => !defs[instance.defId].recurringDef)\n\n  for (let defId in defs) {\n    let def = defs[defId]\n\n    if (def.recurringDef) {\n      let { duration } = def.recurringDef\n\n      if (!duration) {\n        duration = def.allDay ?\n          options.defaultAllDayEventDuration :\n          options.defaultTimedEventDuration\n      }\n\n      let starts = expandRecurringRanges(def, duration, framingRange, dateEnv, pluginHooks.recurringTypes)\n\n      for (let start of starts) {\n        let instance = createEventInstance(defId, {\n          start,\n          end: dateEnv.add(start, duration),\n        })\n        instances[instance.instanceId] = instance\n      }\n    }\n  }\n\n  return { defs, instances }\n}\n\n/*\nEvent MUST have a recurringDef\n*/\nfunction expandRecurringRanges(\n  eventDef: EventDef,\n  duration: Duration,\n  framingRange: DateRange,\n  dateEnv: DateEnv,\n  recurringTypes: RecurringType<any>[],\n): DateMarker[] {\n  let typeDef = recurringTypes[eventDef.recurringDef.typeId]\n  let markers = typeDef.expand(\n    eventDef.recurringDef.typeData,\n    {\n      start: dateEnv.subtract(framingRange.start, duration), // for when event starts before framing range and goes into\n      end: framingRange.end,\n    },\n    dateEnv,\n  )\n\n  // the recurrence plugins don't guarantee that all-day events are start-of-day, so we have to\n  if (eventDef.allDay) {\n    markers = markers.map(startOfDay)\n  }\n\n  return markers\n}\n","import { isInt } from '../util/misc'\n\nexport type DurationInput = DurationObjectInput | string | number\n\nexport interface DurationObjectInput {\n  years?: number\n  year?: number\n  months?: number\n  month?: number\n  weeks?: number\n  week?: number\n  days?: number\n  day?: number\n  hours?: number\n  hour?: number\n  minutes?: number\n  minute?: number\n  seconds?: number\n  second?: number\n  milliseconds?: number\n  millisecond?: number\n  ms?: number\n}\n\nexport interface Duration {\n  years: number\n  months: number\n  days: number\n  milliseconds: number\n  specifiedWeeks?: boolean\n}\n\nconst INTERNAL_UNITS = ['years', 'months', 'days', 'milliseconds']\nconst PARSE_RE = /^(-?)(?:(\\d+)\\.)?(\\d+):(\\d\\d)(?::(\\d\\d)(?:\\.(\\d\\d\\d))?)?/\n\n// Parsing and Creation\n\nexport function createDuration(input: DurationInput, unit?: string): Duration | null {\n  if (typeof input === 'string') {\n    return parseString(input)\n  }\n\n  if (typeof input === 'object' && input) { // non-null object\n    return parseObject(input)\n  }\n\n  if (typeof input === 'number') {\n    return parseObject({ [unit || 'milliseconds']: input })\n  }\n  return null\n}\n\nfunction parseString(s: string): Duration {\n  let m = PARSE_RE.exec(s)\n  if (m) {\n    let sign = m[1] ? -1 : 1\n    return {\n      years: 0,\n      months: 0,\n      days: sign * (m[2] ? parseInt(m[2], 10) : 0),\n      milliseconds: sign * (\n        (m[3] ? parseInt(m[3], 10) : 0) * 60 * 60 * 1000 + // hours\n        (m[4] ? parseInt(m[4], 10) : 0) * 60 * 1000 + // minutes\n        (m[5] ? parseInt(m[5], 10) : 0) * 1000 + // seconds\n        (m[6] ? parseInt(m[6], 10) : 0) // ms\n      ),\n    }\n  }\n  return null\n}\n\nfunction parseObject(obj: DurationObjectInput): Duration {\n  let duration: Duration = {\n    years: obj.years || obj.year || 0,\n    months: obj.months || obj.month || 0,\n    days: obj.days || obj.day || 0,\n    milliseconds:\n      (obj.hours || obj.hour || 0) * 60 * 60 * 1000 + // hours\n      (obj.minutes || obj.minute || 0) * 60 * 1000 + // minutes\n      (obj.seconds || obj.second || 0) * 1000 + // seconds\n      (obj.milliseconds || obj.millisecond || obj.ms || 0), // ms\n  }\n\n  let weeks = obj.weeks || obj.week\n  if (weeks) {\n    duration.days += weeks * 7\n    duration.specifiedWeeks = true\n  }\n\n  return duration\n}\n\n// Equality\n\nexport function durationsEqual(d0: Duration, d1: Duration): boolean {\n  return d0.years === d1.years &&\n    d0.months === d1.months &&\n    d0.days === d1.days &&\n    d0.milliseconds === d1.milliseconds\n}\n\nexport function asCleanDays(dur: Duration) {\n  if (!dur.years && !dur.months && !dur.milliseconds) {\n    return dur.days\n  }\n  return 0\n}\n\n// Simple Math\n\nexport function addDurations(d0: Duration, d1: Duration) {\n  return {\n    years: d0.years + d1.years,\n    months: d0.months + d1.months,\n    days: d0.days + d1.days,\n    milliseconds: d0.milliseconds + d1.milliseconds,\n  }\n}\n\nexport function subtractDurations(d1: Duration, d0: Duration): Duration {\n  return {\n    years: d1.years - d0.years,\n    months: d1.months - d0.months,\n    days: d1.days - d0.days,\n    milliseconds: d1.milliseconds - d0.milliseconds,\n  }\n}\n\nexport function multiplyDuration(d: Duration, n: number) {\n  return {\n    years: d.years * n,\n    months: d.months * n,\n    days: d.days * n,\n    milliseconds: d.milliseconds * n,\n  }\n}\n\n// Conversions\n// \"Rough\" because they are based on average-case Gregorian months/years\n\nexport function asRoughYears(dur: Duration) {\n  return asRoughDays(dur) / 365\n}\n\nexport function asRoughMonths(dur: Duration) {\n  return asRoughDays(dur) / 30\n}\n\nexport function asRoughDays(dur: Duration) {\n  return asRoughMs(dur) / 864e5\n}\n\nexport function asRoughHours(dur: Duration) {\n  return asRoughMs(dur) / (1000 * 60 * 60)\n}\n\nexport function asRoughMinutes(dur: Duration) {\n  return asRoughMs(dur) / (1000 * 60)\n}\n\nexport function asRoughSeconds(dur: Duration) {\n  return asRoughMs(dur) / 1000\n}\n\nexport function asRoughMs(dur: Duration) {\n  return dur.years * (365 * 864e5) +\n    dur.months * (30 * 864e5) +\n    dur.days * 864e5 +\n    dur.milliseconds\n}\n\n// Advanced Math\n\nexport function wholeDivideDurations(numerator: Duration, denominator: Duration): number {\n  let res = null\n\n  for (let i = 0; i < INTERNAL_UNITS.length; i += 1) {\n    let unit = INTERNAL_UNITS[i]\n\n    if (denominator[unit]) {\n      let localRes = numerator[unit] / denominator[unit]\n\n      if (!isInt(localRes) || (res !== null && res !== localRes)) {\n        return null\n      }\n\n      res = localRes\n    } else if (numerator[unit]) {\n      // needs to divide by something but can't!\n      return null\n    }\n  }\n\n  return res\n}\n\nexport function greatestDurationDenominator(dur: Duration) {\n  let ms = dur.milliseconds\n  if (ms) {\n    if (ms % 1000 !== 0) {\n      return { unit: 'millisecond', value: ms }\n    }\n    if (ms % (1000 * 60) !== 0) {\n      return { unit: 'second', value: ms / 1000 }\n    }\n    if (ms % (1000 * 60 * 60) !== 0) {\n      return { unit: 'minute', value: ms / (1000 * 60) }\n    }\n    if (ms) {\n      return { unit: 'hour', value: ms / (1000 * 60 * 60) }\n    }\n  }\n  if (dur.days) {\n    if (dur.specifiedWeeks && dur.days % 7 === 0) {\n      return { unit: 'week', value: dur.days / 7 }\n    }\n    return { unit: 'day', value: dur.days }\n  }\n  if (dur.months) {\n    return { unit: 'month', value: dur.months }\n  }\n  if (dur.years) {\n    return { unit: 'year', value: dur.years }\n  }\n  return { unit: 'millisecond', value: 0 }\n}\n","import { DateMarker } from './marker'\nimport { padStart } from '../util/misc'\n\n// timeZoneOffset is in minutes\nexport function buildIsoString(marker: DateMarker, timeZoneOffset?: number, stripZeroTime: boolean = false) {\n  let s = marker.toISOString()\n\n  s = s.replace('.000', '')\n\n  if (stripZeroTime) {\n    s = s.replace('T00:00:00Z', '')\n  }\n\n  if (s.length > 10) { // time part wasn't stripped, can add timezone info\n    if (timeZoneOffset == null) {\n      s = s.replace('Z', '')\n    } else if (timeZoneOffset !== 0) {\n      s = s.replace('Z', formatTimeZoneOffset(timeZoneOffset, true))\n    }\n    // otherwise, its UTC-0 and we want to keep the Z\n  }\n\n  return s\n}\n\n// formats the date, but with no time part\n// TODO: somehow merge with buildIsoString and stripZeroTime\n// TODO: rename. omit \"string\"\nexport function formatDayString(marker: DateMarker) {\n  return marker.toISOString().replace(/T.*$/, '')\n}\n\n// TODO: use Date::toISOString and use everything after the T?\nexport function formatIsoTimeString(marker: DateMarker) {\n  return padStart(marker.getUTCHours(), 2) + ':' +\n    padStart(marker.getUTCMinutes(), 2) + ':' +\n    padStart(marker.getUTCSeconds(), 2)\n}\n\nexport function formatTimeZoneOffset(minutes: number, doIso = false) {\n  let sign = minutes < 0 ? '-' : '+'\n  let abs = Math.abs(minutes)\n  let hours = Math.floor(abs / 60)\n  let mins = Math.round(abs % 60)\n\n  if (doIso) {\n    return `${sign + padStart(hours, 2)}:${padStart(mins, 2)}`\n  }\n  return `GMT${sign}${hours}${mins ? `:${padStart(mins, 2)}` : ''}`\n}\n","// TODO: new util arrayify?\n// Array.prototype.slice.call(\n\nexport function removeMatching(array, testFunc) {\n  let removeCnt = 0\n  let i = 0\n\n  while (i < array.length) {\n    if (testFunc(array[i])) { // truthy value means *remove*\n      array.splice(i, 1)\n      removeCnt += 1\n    } else {\n      i += 1\n    }\n  }\n\n  return removeCnt\n}\n\nexport function removeExact(array, exactVal) {\n  let removeCnt = 0\n  let i = 0\n\n  while (i < array.length) {\n    if (array[i] === exactVal) {\n      array.splice(i, 1)\n      removeCnt += 1\n    } else {\n      i += 1\n    }\n  }\n\n  return removeCnt\n}\n\nexport function isArraysEqual(a0, a1, equalityFunc?: (v0, v1) => boolean) { // TODO: better typing\n  if (a0 === a1) {\n    return true\n  }\n\n  let len = a0.length\n  let i\n\n  if (len !== a1.length) { // not array? or not same length?\n    return false\n  }\n\n  for (i = 0; i < len; i += 1) {\n    if (!(equalityFunc ? equalityFunc(a0[i], a1[i]) : a0[i] === a1[i])) {\n      return false\n    }\n  }\n\n  return true\n}\n","import { isArraysEqual } from './array'\nimport { isPropsEqual } from './object'\nimport { Dictionary } from '../options'\n\nexport function memoize<Args extends any[], Res>(\n  workerFunc: (...args: Args) => Res,\n  resEquality?: (res0: Res, res1: Res) => boolean,\n  teardownFunc?: (res: Res) => void,\n): (...args: Args) => Res {\n  let currentArgs: Args | undefined\n  let currentRes: Res | undefined\n\n  return function (...newArgs: Args) { // eslint-disable-line func-names\n    if (!currentArgs) {\n      currentRes = workerFunc.apply(this, newArgs)\n    } else if (!isArraysEqual(currentArgs, newArgs)) {\n      if (teardownFunc) {\n        teardownFunc(currentRes)\n      }\n\n      let res = workerFunc.apply(this, newArgs)\n\n      if (!resEquality || !resEquality(res, currentRes)) {\n        currentRes = res\n      }\n    }\n\n    currentArgs = newArgs\n\n    return currentRes\n  }\n}\n\nexport function memoizeObjArg<Arg extends Dictionary, Res>(\n  workerFunc: (arg: Arg) => Res,\n  resEquality?: (res0: Res, res1: Res) => boolean,\n  teardownFunc?: (res: Res) => void,\n): (arg: Arg) => Res {\n  let currentArg: Arg | undefined\n  let currentRes: Res | undefined\n\n  return (newArg: Arg) => {\n    if (!currentArg) {\n      currentRes = workerFunc.call(this, newArg)\n    } else if (!isPropsEqual(currentArg, newArg)) {\n      if (teardownFunc) {\n        teardownFunc(currentRes)\n      }\n\n      let res = workerFunc.call(this, newArg)\n\n      if (!resEquality || !resEquality(res, currentRes)) {\n        currentRes = res\n      }\n    }\n\n    currentArg = newArg\n\n    return currentRes\n  }\n}\n\nexport function memoizeArraylike<Args extends any[], Res>( // used at all?\n  workerFunc: (...args: Args) => Res,\n  resEquality?: (res0: Res, res1: Res) => boolean,\n  teardownFunc?: (res: Res) => void,\n): (argSets: Args[]) => Res[] {\n  let currentArgSets: Args[] = []\n  let currentResults: Res[] = []\n\n  return (newArgSets: Args[]) => {\n    let currentLen = currentArgSets.length\n    let newLen = newArgSets.length\n    let i = 0\n\n    for (; i < currentLen; i += 1) {\n      if (!newArgSets[i]) { // one of the old sets no longer exists\n        if (teardownFunc) {\n          teardownFunc(currentResults[i])\n        }\n      } else if (!isArraysEqual(currentArgSets[i], newArgSets[i])) {\n        if (teardownFunc) {\n          teardownFunc(currentResults[i])\n        }\n\n        let res = workerFunc.apply(this, newArgSets[i])\n\n        if (!resEquality || !resEquality(res, currentResults[i])) {\n          currentResults[i] = res\n        }\n      }\n    }\n\n    for (; i < newLen; i += 1) {\n      currentResults[i] = workerFunc.apply(this, newArgSets[i])\n    }\n\n    currentArgSets = newArgSets\n    currentResults.splice(newLen) // remove excess\n\n    return currentResults\n  }\n}\n\nexport function memoizeHashlike<Args extends any[], Res>( // used?\n  workerFunc: (...args: Args) => Res,\n  resEquality?: (res0: Res, res1: Res) => boolean,\n  teardownFunc?: (res: Res) => void, // TODO: change arg order\n): (argHash: { [key: string]: Args }) => { [key: string]: Res } {\n  let currentArgHash: { [key: string]: Args } = {}\n  let currentResHash: { [key: string]: Res } = {}\n\n  return (newArgHash: { [key: string]: Args }) => {\n    let newResHash: { [key: string]: Res } = {}\n\n    for (let key in newArgHash) {\n      if (!currentResHash[key]) {\n        newResHash[key] = workerFunc.apply(this, newArgHash[key])\n      } else if (!isArraysEqual(currentArgHash[key], newArgHash[key])) {\n        if (teardownFunc) {\n          teardownFunc(currentResHash[key])\n        }\n\n        let res = workerFunc.apply(this, newArgHash[key])\n\n        newResHash[key] = (resEquality && resEquality(res, currentResHash[key]))\n          ? currentResHash[key]\n          : res\n      } else {\n        newResHash[key] = currentResHash[key]\n      }\n    }\n\n    currentArgHash = newArgHash\n    currentResHash = newResHash\n\n    return newResHash\n  }\n}\n","import { DateMarker, timeAsMs } from './marker'\nimport { CalendarSystem } from './calendar-system'\nimport { Locale } from './locale'\nimport { DateFormatter, DateFormattingContext } from './DateFormatter'\nimport { ZonedMarker } from './zoned-marker'\nimport { formatTimeZoneOffset } from './formatting-utils'\nimport { memoize } from '../util/memoize'\n\nconst EXTENDED_SETTINGS_AND_SEVERITIES = {\n  week: 3,\n  separator: 0, // 0 = not applicable\n  omitZeroMinute: 0,\n  meridiem: 0, // like am/pm\n  omitCommas: 0,\n}\n\nconst STANDARD_DATE_PROP_SEVERITIES = {\n  timeZoneName: 7,\n  era: 6,\n  year: 5,\n  month: 4,\n  day: 2,\n  weekday: 2,\n  hour: 1,\n  minute: 1,\n  second: 1,\n}\n\nconst MERIDIEM_RE = /\\s*([ap])\\.?m\\.?/i // eats up leading spaces too\nconst COMMA_RE = /,/g // we need re for globalness\nconst MULTI_SPACE_RE = /\\s+/g\nconst LTR_RE = /\\u200e/g // control character\nconst UTC_RE = /UTC|GMT/\n\nexport interface NativeFormatterOptions extends Intl.DateTimeFormatOptions {\n  week?: 'long' | 'short' | 'narrow' | 'numeric'\n  meridiem?: 'lowercase' | 'short' | 'narrow' | boolean\n  omitZeroMinute?: boolean\n  omitCommas?: boolean\n  separator?: string\n}\n\nexport class NativeFormatter implements DateFormatter {\n  standardDateProps: any\n  extendedSettings: any\n  severity: number\n  private buildFormattingFunc: typeof buildFormattingFunc // caching for efficiency with same date env\n\n  constructor(formatSettings: NativeFormatterOptions) {\n    let standardDateProps: any = {}\n    let extendedSettings: any = {}\n    let severity = 0\n\n    for (let name in formatSettings) {\n      if (name in EXTENDED_SETTINGS_AND_SEVERITIES) {\n        extendedSettings[name] = formatSettings[name]\n        severity = Math.max(EXTENDED_SETTINGS_AND_SEVERITIES[name], severity)\n      } else {\n        standardDateProps[name] = formatSettings[name]\n\n        if (name in STANDARD_DATE_PROP_SEVERITIES) { // TODO: what about hour12? no severity\n          severity = Math.max(STANDARD_DATE_PROP_SEVERITIES[name], severity)\n        }\n      }\n    }\n\n    this.standardDateProps = standardDateProps\n    this.extendedSettings = extendedSettings\n    this.severity = severity\n\n    this.buildFormattingFunc = memoize(buildFormattingFunc)\n  }\n\n  format(date: ZonedMarker, context: DateFormattingContext) {\n    return this.buildFormattingFunc(this.standardDateProps, this.extendedSettings, context)(date)\n  }\n\n  formatRange(start: ZonedMarker, end: ZonedMarker, context: DateFormattingContext, betterDefaultSeparator?: string) {\n    let { standardDateProps, extendedSettings } = this\n\n    let diffSeverity = computeMarkerDiffSeverity(start.marker, end.marker, context.calendarSystem)\n    if (!diffSeverity) {\n      return this.format(start, context)\n    }\n\n    let biggestUnitForPartial = diffSeverity\n    if (\n      biggestUnitForPartial > 1 && // the two dates are different in a way that's larger scale than time\n      (standardDateProps.year === 'numeric' || standardDateProps.year === '2-digit') &&\n      (standardDateProps.month === 'numeric' || standardDateProps.month === '2-digit') &&\n      (standardDateProps.day === 'numeric' || standardDateProps.day === '2-digit')\n    ) {\n      biggestUnitForPartial = 1 // make it look like the dates are only different in terms of time\n    }\n\n    let full0 = this.format(start, context)\n    let full1 = this.format(end, context)\n\n    if (full0 === full1) {\n      return full0\n    }\n\n    let partialDateProps = computePartialFormattingOptions(standardDateProps, biggestUnitForPartial)\n    let partialFormattingFunc = buildFormattingFunc(partialDateProps, extendedSettings, context)\n    let partial0 = partialFormattingFunc(start)\n    let partial1 = partialFormattingFunc(end)\n\n    let insertion = findCommonInsertion(full0, partial0, full1, partial1)\n    let separator = extendedSettings.separator || betterDefaultSeparator || context.defaultSeparator || ''\n\n    if (insertion) {\n      return insertion.before + partial0 + separator + partial1 + insertion.after\n    }\n\n    return full0 + separator + full1\n  }\n\n  getLargestUnit() {\n    switch (this.severity) {\n      case 7:\n      case 6:\n      case 5:\n        return 'year'\n      case 4:\n        return 'month'\n      case 3:\n        return 'week'\n      case 2:\n        return 'day'\n      default:\n        return 'time' // really?\n    }\n  }\n}\n\nfunction buildFormattingFunc(\n  standardDateProps,\n  extendedSettings,\n  context: DateFormattingContext,\n): (date: ZonedMarker) => string {\n  let standardDatePropCnt = Object.keys(standardDateProps).length\n\n  if (standardDatePropCnt === 1 && standardDateProps.timeZoneName === 'short') {\n    return (date: ZonedMarker) => (\n      formatTimeZoneOffset(date.timeZoneOffset)\n    )\n  }\n\n  if (standardDatePropCnt === 0 && extendedSettings.week) {\n    return (date: ZonedMarker) => (\n      formatWeekNumber(\n        context.computeWeekNumber(date.marker),\n        context.weekText,\n        context.weekTextLong,\n        context.locale,\n        extendedSettings.week,\n      )\n    )\n  }\n\n  return buildNativeFormattingFunc(standardDateProps, extendedSettings, context)\n}\n\nfunction buildNativeFormattingFunc(\n  standardDateProps,\n  extendedSettings,\n  context: DateFormattingContext,\n): (date: ZonedMarker) => string {\n  standardDateProps = { ...standardDateProps } // copy\n  extendedSettings = { ...extendedSettings } // copy\n\n  sanitizeSettings(standardDateProps, extendedSettings)\n\n  standardDateProps.timeZone = 'UTC' // we leverage the only guaranteed timeZone for our UTC markers\n\n  let normalFormat = new Intl.DateTimeFormat(context.locale.codes, standardDateProps)\n  let zeroFormat // needed?\n\n  if (extendedSettings.omitZeroMinute) {\n    let zeroProps = { ...standardDateProps }\n    delete zeroProps.minute // seconds and ms were already considered in sanitizeSettings\n    zeroFormat = new Intl.DateTimeFormat(context.locale.codes, zeroProps)\n  }\n\n  return (date: ZonedMarker) => {\n    let { marker } = date\n    let format\n\n    if (zeroFormat && !marker.getUTCMinutes()) {\n      format = zeroFormat\n    } else {\n      format = normalFormat\n    }\n\n    let s = format.format(marker)\n\n    return postProcess(s, date, standardDateProps, extendedSettings, context)\n  }\n}\n\nfunction sanitizeSettings(standardDateProps, extendedSettings) {\n  // deal with a browser inconsistency where formatting the timezone\n  // requires that the hour/minute be present.\n  if (standardDateProps.timeZoneName) {\n    if (!standardDateProps.hour) {\n      standardDateProps.hour = '2-digit'\n    }\n    if (!standardDateProps.minute) {\n      standardDateProps.minute = '2-digit'\n    }\n  }\n\n  // only support short timezone names\n  if (standardDateProps.timeZoneName === 'long') {\n    standardDateProps.timeZoneName = 'short'\n  }\n\n  // if requesting to display seconds, MUST display minutes\n  if (extendedSettings.omitZeroMinute && (standardDateProps.second || standardDateProps.millisecond)) {\n    delete extendedSettings.omitZeroMinute\n  }\n}\n\nfunction postProcess(s: string, date: ZonedMarker, standardDateProps, extendedSettings, context: DateFormattingContext): string {\n  s = s.replace(LTR_RE, '') // remove left-to-right control chars. do first. good for other regexes\n\n  if (standardDateProps.timeZoneName === 'short') {\n    s = injectTzoStr(\n      s,\n      (context.timeZone === 'UTC' || date.timeZoneOffset == null) ?\n        'UTC' : // important to normalize for IE, which does \"GMT\"\n        formatTimeZoneOffset(date.timeZoneOffset),\n    )\n  }\n\n  if (extendedSettings.omitCommas) {\n    s = s.replace(COMMA_RE, '').trim()\n  }\n\n  if (extendedSettings.omitZeroMinute) {\n    s = s.replace(':00', '') // zeroFormat doesn't always achieve this\n  }\n\n  // ^ do anything that might create adjacent spaces before this point,\n  // because MERIDIEM_RE likes to eat up loading spaces\n\n  if (extendedSettings.meridiem === false) {\n    s = s.replace(MERIDIEM_RE, '').trim()\n  } else if (extendedSettings.meridiem === 'narrow') { // a/p\n    s = s.replace(MERIDIEM_RE, (m0, m1) => m1.toLocaleLowerCase())\n  } else if (extendedSettings.meridiem === 'short') { // am/pm\n    s = s.replace(MERIDIEM_RE, (m0, m1) => `${m1.toLocaleLowerCase()}m`)\n  } else if (extendedSettings.meridiem === 'lowercase') { // other meridiem transformers already converted to lowercase\n    s = s.replace(MERIDIEM_RE, (m0) => m0.toLocaleLowerCase())\n  }\n\n  s = s.replace(MULTI_SPACE_RE, ' ')\n  s = s.trim()\n\n  return s\n}\n\nfunction injectTzoStr(s: string, tzoStr: string): string {\n  let replaced = false\n\n  s = s.replace(UTC_RE, () => {\n    replaced = true\n    return tzoStr\n  })\n\n  // IE11 doesn't include UTC/GMT in the original string, so append to end\n  if (!replaced) {\n    s += ` ${tzoStr}`\n  }\n\n  return s\n}\n\nfunction formatWeekNumber(\n  num: number,\n  weekText: string,\n  weekTextLong: string,\n  locale: Locale,\n  display?: 'numeric' | 'narrow' | 'short' | 'long',\n): string {\n  let parts = []\n\n  if (display === 'long') {\n    parts.push(weekTextLong)\n  } else if (display === 'short' || display === 'narrow') {\n    parts.push(weekText)\n  }\n\n  if (display === 'long' || display === 'short') {\n    parts.push(' ')\n  }\n\n  parts.push(locale.simpleNumberFormat.format(num))\n\n  if (locale.options.direction === 'rtl') { // TODO: use control characters instead?\n    parts.reverse()\n  }\n\n  return parts.join('')\n}\n\n// Range Formatting Utils\n\n// 0 = exactly the same\n// 1 = different by time\n// and bigger\nfunction computeMarkerDiffSeverity(d0: DateMarker, d1: DateMarker, ca: CalendarSystem) {\n  if (ca.getMarkerYear(d0) !== ca.getMarkerYear(d1)) {\n    return 5\n  }\n  if (ca.getMarkerMonth(d0) !== ca.getMarkerMonth(d1)) {\n    return 4\n  }\n  if (ca.getMarkerDay(d0) !== ca.getMarkerDay(d1)) {\n    return 2\n  }\n  if (timeAsMs(d0) !== timeAsMs(d1)) {\n    return 1\n  }\n  return 0\n}\n\nfunction computePartialFormattingOptions(options, biggestUnit) {\n  let partialOptions = {}\n\n  for (let name in options) {\n    if (\n      !(name in STANDARD_DATE_PROP_SEVERITIES) || // not a date part prop (like timeZone)\n      STANDARD_DATE_PROP_SEVERITIES[name] <= biggestUnit\n    ) {\n      partialOptions[name] = options[name]\n    }\n  }\n\n  return partialOptions\n}\n\nfunction findCommonInsertion(full0, partial0, full1, partial1) {\n  let i0 = 0\n  while (i0 < full0.length) {\n    let found0 = full0.indexOf(partial0, i0)\n    if (found0 === -1) {\n      break\n    }\n\n    let before0 = full0.substr(0, found0)\n    i0 = found0 + partial0.length\n    let after0 = full0.substr(i0)\n\n    let i1 = 0\n    while (i1 < full1.length) {\n      let found1 = full1.indexOf(partial1, i1)\n      if (found1 === -1) {\n        break\n      }\n\n      let before1 = full1.substr(0, found1)\n      i1 = found1 + partial1.length\n      let after1 = full1.substr(i1)\n\n      if (before0 === before1 && after0 === after1) {\n        return {\n          before: before0,\n          after: after0,\n        }\n      }\n    }\n  }\n\n  return null\n}\n","import { DateMarker } from './marker'\nimport { CalendarSystem } from './calendar-system'\n\nexport interface ZonedMarker {\n  marker: DateMarker,\n  timeZoneOffset: number\n}\n\nexport interface ExpandedZonedMarker extends ZonedMarker {\n  array: number[],\n  year: number,\n  month: number,\n  day: number,\n  hour: number,\n  minute: number,\n  second: number,\n  millisecond: number\n}\n\nexport function expandZonedMarker(dateInfo: ZonedMarker, calendarSystem: CalendarSystem): ExpandedZonedMarker {\n  let a = calendarSystem.markerToArray(dateInfo.marker)\n\n  return {\n    marker: dateInfo.marker,\n    timeZoneOffset: dateInfo.timeZoneOffset,\n    array: a,\n    year: a[0],\n    month: a[1],\n    day: a[2],\n    hour: a[3],\n    minute: a[4],\n    second: a[5],\n    millisecond: a[6],\n  }\n}\n","import { DateMarker } from './marker'\nimport { CalendarSystem } from './calendar-system'\nimport { Locale } from './locale'\nimport { ZonedMarker, ExpandedZonedMarker, expandZonedMarker } from './zoned-marker'\n\nexport interface VerboseFormattingArg { // TODO: kill this\n  date: ExpandedZonedMarker\n  start: ExpandedZonedMarker\n  end?: ExpandedZonedMarker\n  timeZone: string\n  localeCodes: string[],\n  defaultSeparator: string\n}\n\nexport function createVerboseFormattingArg(\n  start: ZonedMarker,\n  end: ZonedMarker,\n  context: DateFormattingContext,\n  betterDefaultSeparator?: string,\n): VerboseFormattingArg {\n  let startInfo = expandZonedMarker(start, context.calendarSystem)\n  let endInfo = end ? expandZonedMarker(end, context.calendarSystem) : null\n\n  return {\n    date: startInfo,\n    start: startInfo,\n    end: endInfo,\n    timeZone: context.timeZone,\n    localeCodes: context.locale.codes,\n    defaultSeparator: betterDefaultSeparator || context.defaultSeparator,\n  }\n}\n\nexport type CmdFormatterFunc = (cmd: string, arg: VerboseFormattingArg) => string\n\nexport interface DateFormattingContext {\n  timeZone: string,\n  locale: Locale,\n  calendarSystem: CalendarSystem\n  computeWeekNumber: (d: DateMarker) => number\n  weekText: string\n  weekTextLong: string\n  cmdFormatter?: CmdFormatterFunc\n  defaultSeparator: string\n}\n\nexport interface DateFormatter {\n  format(date: ZonedMarker, context: DateFormattingContext): string\n  formatRange(start: ZonedMarker, end: ZonedMarker, context: DateFormattingContext, betterDefaultSeparator?: string): string\n}\n","import { DateFormatter, DateFormattingContext, createVerboseFormattingArg } from './DateFormatter'\nimport { ZonedMarker } from './zoned-marker'\n\n/*\nTODO: fix the terminology of \"formatter\" vs \"formatting func\"\n*/\n\n/*\nAt the time of instantiation, this object does not know which cmd-formatting system it will use.\nIt receives this at the time of formatting, as a setting.\n*/\nexport class CmdFormatter implements DateFormatter {\n  cmdStr: string\n\n  constructor(cmdStr: string) {\n    this.cmdStr = cmdStr\n  }\n\n  format(date: ZonedMarker, context: DateFormattingContext, betterDefaultSeparator?: string) {\n    return context.cmdFormatter(this.cmdStr, createVerboseFormattingArg(date, null, context, betterDefaultSeparator))\n  }\n\n  formatRange(start: ZonedMarker, end: ZonedMarker, context: DateFormattingContext, betterDefaultSeparator?: string) {\n    return context.cmdFormatter(this.cmdStr, createVerboseFormattingArg(start, end, context, betterDefaultSeparator))\n  }\n}\n","import { DateFormatter, DateFormattingContext, createVerboseFormattingArg, VerboseFormattingArg } from './DateFormatter'\nimport { ZonedMarker } from './zoned-marker'\n\nexport type FuncFormatterFunc = (arg: VerboseFormattingArg) => string\n\nexport class FuncFormatter implements DateFormatter {\n  func: FuncFormatterFunc\n\n  constructor(func: FuncFormatterFunc) {\n    this.func = func\n  }\n\n  format(date: ZonedMarker, context: DateFormattingContext, betterDefaultSeparator?: string) {\n    return this.func(createVerboseFormattingArg(date, null, context, betterDefaultSeparator))\n  }\n\n  formatRange(start: ZonedMarker, end: ZonedMarker, context: DateFormattingContext, betterDefaultSeparator?: string) {\n    return this.func(createVerboseFormattingArg(start, end, context, betterDefaultSeparator))\n  }\n}\n","import { NativeFormatter, NativeFormatterOptions } from './formatting-native'\nimport { CmdFormatter } from './formatting-cmd'\nimport { FuncFormatter, FuncFormatterFunc } from './formatting-func'\nimport { DateFormatter } from './DateFormatter'\n\nexport type FormatterInput = NativeFormatterOptions | string | FuncFormatterFunc\n\nexport function createFormatter(input: FormatterInput): DateFormatter {\n  if (typeof input === 'object' && input) { // non-null object\n    return new NativeFormatter(input)\n  }\n\n  if (typeof input === 'string') {\n    return new CmdFormatter(input)\n  }\n\n  if (typeof input === 'function') {\n    return new FuncFormatter(input as FuncFormatterFunc)\n  }\n\n  return null\n}\n","import { EventDef, EventDefHash } from './event-def'\nimport { EventInstance, EventInstanceHash } from './event-instance'\nimport { EventInput, parseEvent, EventTuple, buildEventRefiners } from './event-parse'\nimport { filterHash } from '../util/object'\nimport { CalendarContext } from '../CalendarContext'\nimport { EventSource } from './event-source'\n\n/*\nA data structure that encapsulates EventDefs and EventInstances.\nUtils for parsing this data from raw EventInputs.\nUtils for manipulating an EventStore.\n*/\n\nexport interface EventStore {\n  defs: EventDefHash\n  instances: EventInstanceHash\n}\n\nexport function parseEvents(\n  rawEvents: EventInput[],\n  eventSource: EventSource<any> | null,\n  context: CalendarContext,\n  allowOpenRange?: boolean,\n): EventStore {\n  let eventStore = createEmptyEventStore()\n  let eventRefiners = buildEventRefiners(context)\n\n  for (let rawEvent of rawEvents) {\n    let tuple = parseEvent(rawEvent, eventSource, context, allowOpenRange, eventRefiners)\n\n    if (tuple) {\n      eventTupleToStore(tuple, eventStore)\n    }\n  }\n\n  return eventStore\n}\n\nexport function eventTupleToStore(tuple: EventTuple, eventStore: EventStore = createEmptyEventStore()) {\n  eventStore.defs[tuple.def.defId] = tuple.def\n\n  if (tuple.instance) {\n    eventStore.instances[tuple.instance.instanceId] = tuple.instance\n  }\n\n  return eventStore\n}\n\n// retrieves events that have the same groupId as the instance specified by `instanceId`\n// or they are the same as the instance.\n// why might instanceId not be in the store? an event from another calendar?\nexport function getRelevantEvents(eventStore: EventStore, instanceId: string): EventStore {\n  let instance = eventStore.instances[instanceId]\n\n  if (instance) {\n    let def = eventStore.defs[instance.defId]\n\n    // get events/instances with same group\n    let newStore = filterEventStoreDefs(eventStore, (lookDef) => isEventDefsGrouped(def, lookDef))\n\n    // add the original\n    // TODO: wish we could use eventTupleToStore or something like it\n    newStore.defs[def.defId] = def\n    newStore.instances[instance.instanceId] = instance\n\n    return newStore\n  }\n\n  return createEmptyEventStore()\n}\n\nfunction isEventDefsGrouped(def0: EventDef, def1: EventDef): boolean {\n  return Boolean(def0.groupId && def0.groupId === def1.groupId)\n}\n\nexport function createEmptyEventStore(): EventStore {\n  return { defs: {}, instances: {} }\n}\n\nexport function mergeEventStores(store0: EventStore, store1: EventStore): EventStore {\n  return {\n    defs: { ...store0.defs, ...store1.defs },\n    instances: { ...store0.instances, ...store1.instances },\n  }\n}\n\nexport function filterEventStoreDefs(eventStore: EventStore, filterFunc: (eventDef: EventDef) => boolean): EventStore {\n  let defs = filterHash(eventStore.defs, filterFunc)\n  let instances = filterHash(eventStore.instances, (instance: EventInstance) => (\n    defs[instance.defId] // still exists?\n  ))\n  return { defs, instances }\n}\n\nexport function excludeSubEventStore(master: EventStore, sub: EventStore): EventStore {\n  let { defs, instances } = master\n  let filteredDefs: { [defId: string]: EventDef } = {}\n  let filteredInstances: { [instanceId: string]: EventInstance } = {}\n\n  for (let defId in defs) {\n    if (!sub.defs[defId]) { // not explicitly excluded\n      filteredDefs[defId] = defs[defId]\n    }\n  }\n\n  for (let instanceId in instances) {\n    if (\n      !sub.instances[instanceId] && // not explicitly excluded\n      filteredDefs[instances[instanceId].defId] // def wasn't filtered away\n    ) {\n      filteredInstances[instanceId] = instances[instanceId]\n    }\n  }\n\n  return {\n    defs: filteredDefs,\n    instances: filteredInstances,\n  }\n}\n","export type ClassNamesInput = string | string[]\n\nexport function parseClassNames(raw: ClassNamesInput) {\n  if (Array.isArray(raw)) {\n    return raw\n  }\n\n  if (typeof raw === 'string') {\n    return raw.split(/\\s+/)\n  }\n\n  return []\n}\n","import { Constraint, AllowFunc, normalizeConstraint } from '../structs/constraint'\nimport { parseClassNames } from '../util/html'\nimport { CalendarContext } from '../CalendarContext'\nimport { RawOptionsFromRefiners, RefinedOptionsFromRefiners, identity, Identity } from '../options'\n\n// TODO: better called \"EventSettings\" or \"EventConfig\"\n// TODO: move this file into structs\n// TODO: separate constraint/overlap/allow, because selection uses only that, not other props\n\nexport const EVENT_UI_REFINERS = {\n  display: String,\n  editable: Boolean,\n  startEditable: Boolean,\n  durationEditable: Boolean,\n  constraint: identity as Identity<any>, // Identity<ConstraintInput>, // circular reference. ts dies. event->constraint->event\n  overlap: identity as Identity<boolean>,\n  allow: identity as Identity<AllowFunc>,\n  className: parseClassNames, // will both end up as array of strings\n  classNames: parseClassNames, // \"\n  color: String,\n  backgroundColor: String,\n  borderColor: String,\n  textColor: String,\n}\n\nconst EMPTY_EVENT_UI: EventUi = {\n  display: null,\n  startEditable: null,\n  durationEditable: null,\n  constraints: [],\n  overlap: null,\n  allows: [],\n  backgroundColor: '',\n  borderColor: '',\n  textColor: '',\n  classNames: [],\n}\n\ntype BuiltInEventUiRefiners = typeof EVENT_UI_REFINERS\n\ninterface EventUiRefiners extends BuiltInEventUiRefiners {\n  // to prevent circular reference (and give is the option for ambient modification for later)\n}\n\nexport type EventUiInput = RawOptionsFromRefiners<Required<EventUiRefiners>> // Required hack\nexport type EventUiRefined = RefinedOptionsFromRefiners<Required<EventUiRefiners>> // Required hack\n\nexport interface EventUi {\n  display: string | null\n  startEditable: boolean | null\n  durationEditable: boolean | null\n  constraints: Constraint[]\n  overlap: boolean | null\n  allows: AllowFunc[] // crappy name to indicate plural\n  backgroundColor: string\n  borderColor: string\n  textColor: string,\n  classNames: string[]\n}\n\nexport type EventUiHash = { [defId: string]: EventUi }\n\nexport function createEventUi(refined: EventUiRefined, context: CalendarContext): EventUi {\n  let constraint = normalizeConstraint(refined.constraint, context)\n\n  return {\n    display: refined.display || null,\n    startEditable: refined.startEditable != null ? refined.startEditable : refined.editable,\n    durationEditable: refined.durationEditable != null ? refined.durationEditable : refined.editable,\n    constraints: constraint != null ? [constraint] : [],\n    overlap: refined.overlap != null ? refined.overlap : null,\n    allows: refined.allow != null ? [refined.allow] : [],\n    backgroundColor: refined.backgroundColor || refined.color || '',\n    borderColor: refined.borderColor || refined.color || '',\n    textColor: refined.textColor || '',\n    classNames: (refined.className || []).concat(refined.classNames || []), // join singular and plural\n  }\n}\n\n// TODO: prevent against problems with <2 args!\nexport function combineEventUis(uis: EventUi[]): EventUi {\n  return uis.reduce(combineTwoEventUis, EMPTY_EVENT_UI)\n}\n\nfunction combineTwoEventUis(item0: EventUi, item1: EventUi): EventUi { // hash1 has higher precedence\n  return {\n    display: item1.display != null ? item1.display : item0.display,\n    startEditable: item1.startEditable != null ? item1.startEditable : item0.startEditable,\n    durationEditable: item1.durationEditable != null ? item1.durationEditable : item0.durationEditable,\n    constraints: item0.constraints.concat(item1.constraints),\n    overlap: typeof item1.overlap === 'boolean' ? item1.overlap : item0.overlap,\n    allows: item0.allows.concat(item1.allows),\n    backgroundColor: item1.backgroundColor || item0.backgroundColor,\n    borderColor: item1.borderColor || item0.borderColor,\n    textColor: item1.textColor || item0.textColor,\n    classNames: item0.classNames.concat(item1.classNames),\n  }\n}\n","import { EventStore, parseEvents } from './event-store'\nimport { EventInput } from './event-parse'\nimport { DateSpanApi } from './date-span'\nimport { EventApi } from '../api/EventApi'\nimport { SplittableProps } from '../component/event-splitting'\nimport { CalendarContext } from '../CalendarContext'\n\n// TODO: rename to \"criteria\" ?\nexport type ConstraintInput = 'businessHours' | string | EventInput | EventInput[]\nexport type Constraint = 'businessHours' | string | EventStore | false // false means won't pass at all\nexport type OverlapFunc = ((stillEvent: EventApi, movingEvent: EventApi | null) => boolean)\nexport type AllowFunc = (span: DateSpanApi, movingEvent: EventApi | null) => boolean\nexport type isPropsValidTester = (props: SplittableProps, context: CalendarContext) => boolean\n\nexport function normalizeConstraint(input: ConstraintInput, context: CalendarContext): Constraint | null {\n  if (Array.isArray(input)) {\n    return parseEvents(input, null, context, true) // allowOpenRange=true\n  } if (typeof input === 'object' && input) { // non-null object\n    return parseEvents([input], null, context, true) // allowOpenRange=true\n  } if (input != null) {\n    return String(input)\n  }\n  return null\n}\n","import { __assign } from 'tslib'\nimport { guid } from '../util/misc'\nimport { DateInput } from '../datelib/env'\nimport { startOfDay } from '../datelib/marker'\nimport { parseRecurring } from './recurring-event'\nimport { CalendarContext } from '../CalendarContext'\nimport { EventDef } from './event-def'\nimport { createEventInstance, EventInstance } from './event-instance'\nimport { EventSource } from './event-source'\nimport { RefinedOptionsFromRefiners, RawOptionsFromRefiners, identity, Identity, Dictionary, refineProps } from '../options'\nimport { EVENT_UI_REFINERS, createEventUi, EventUiInput, EventUiRefined } from '../component/event-ui'\n\nexport const EVENT_NON_DATE_REFINERS = {\n  id: String,\n  groupId: String,\n  title: String,\n  url: String,\n  interactive: Boolean,\n}\n\nexport const EVENT_DATE_REFINERS = {\n  start: identity as Identity<DateInput>,\n  end: identity as Identity<DateInput>,\n  date: identity as Identity<DateInput>,\n  allDay: Boolean,\n}\n\nconst EVENT_REFINERS = { // does NOT include EVENT_UI_REFINERS\n  ...EVENT_NON_DATE_REFINERS,\n  ...EVENT_DATE_REFINERS,\n  extendedProps: identity as Identity<Dictionary>,\n}\n\ntype BuiltInEventRefiners = typeof EVENT_REFINERS\n\nexport interface EventRefiners extends BuiltInEventRefiners {\n  // for ambient\n}\n\nexport type EventInput =\n  EventUiInput &\n  RawOptionsFromRefiners<Required<EventRefiners>> & // Required hack\n  { [extendedProp: string]: any }\n\nexport type EventRefined =\n  EventUiRefined &\n  RefinedOptionsFromRefiners<Required<EventRefiners>> // Required hack\n\nexport interface EventTuple {\n  def: EventDef\n  instance: EventInstance | null\n}\n\nexport type EventInputTransformer = (input: EventInput) => EventInput\nexport type EventDefMemberAdder = (refined: EventRefined) => Partial<EventDef>\n\nexport function parseEvent(\n  raw: EventInput,\n  eventSource: EventSource<any> | null,\n  context: CalendarContext,\n  allowOpenRange: boolean,\n  refiners = buildEventRefiners(context),\n): EventTuple | null {\n  let { refined, extra } = refineEventDef(raw, context, refiners)\n\n  let defaultAllDay = computeIsDefaultAllDay(eventSource, context)\n  let recurringRes = parseRecurring(\n    refined,\n    defaultAllDay,\n    context.dateEnv,\n    context.pluginHooks.recurringTypes,\n  )\n\n  if (recurringRes) {\n    let def = parseEventDef(\n      refined,\n      extra,\n      eventSource ? eventSource.sourceId : '',\n      recurringRes.allDay,\n      Boolean(recurringRes.duration),\n      context,\n    )\n\n    def.recurringDef = { // don't want all the props from recurringRes. TODO: more efficient way to do this\n      typeId: recurringRes.typeId,\n      typeData: recurringRes.typeData,\n      duration: recurringRes.duration,\n    }\n\n    return { def, instance: null }\n  }\n  let singleRes = parseSingle(refined, defaultAllDay, context, allowOpenRange)\n\n  if (singleRes) {\n    let def = parseEventDef(refined, extra, eventSource ? eventSource.sourceId : '', singleRes.allDay, singleRes.hasEnd, context)\n    let instance = createEventInstance(def.defId, singleRes.range, singleRes.forcedStartTzo, singleRes.forcedEndTzo)\n\n    return { def, instance }\n  }\n\n  return null\n}\n\nexport function refineEventDef(raw: EventInput, context: CalendarContext, refiners = buildEventRefiners(context)) {\n  return refineProps(raw, refiners)\n}\n\nexport function buildEventRefiners(context: CalendarContext) {\n  return { ...EVENT_UI_REFINERS, ...EVENT_REFINERS, ...context.pluginHooks.eventRefiners }\n}\n\n/*\nWill NOT populate extendedProps with the leftover properties.\nWill NOT populate date-related props.\n*/\nexport function parseEventDef(\n  refined: EventRefined,\n  extra: Dictionary,\n  sourceId: string,\n  allDay: boolean,\n  hasEnd: boolean,\n  context: CalendarContext,\n): EventDef {\n  let def: EventDef = {\n    title: refined.title || '',\n    groupId: refined.groupId || '',\n    publicId: refined.id || '',\n    url: refined.url || '',\n    recurringDef: null,\n    defId: guid(),\n    sourceId,\n    allDay,\n    hasEnd,\n    interactive: refined.interactive,\n    ui: createEventUi(refined, context),\n    extendedProps: {\n      ...(refined.extendedProps || {}),\n      ...extra,\n    },\n  }\n\n  for (let memberAdder of context.pluginHooks.eventDefMemberAdders) {\n    __assign(def, memberAdder(refined))\n  }\n\n  // help out EventApi from having user modify props\n  Object.freeze(def.ui.classNames)\n  Object.freeze(def.extendedProps)\n\n  return def\n}\n\nfunction parseSingle(refined: EventRefined, defaultAllDay: boolean | null, context: CalendarContext, allowOpenRange?: boolean) {\n  let { allDay } = refined\n  let startMeta\n  let startMarker = null\n  let hasEnd = false\n  let endMeta\n  let endMarker = null\n\n  let startInput = refined.start != null ? refined.start : refined.date\n  startMeta = context.dateEnv.createMarkerMeta(startInput)\n\n  if (startMeta) {\n    startMarker = startMeta.marker\n  } else if (!allowOpenRange) {\n    return null\n  }\n\n  if (refined.end != null) {\n    endMeta = context.dateEnv.createMarkerMeta(refined.end)\n  }\n\n  if (allDay == null) {\n    if (defaultAllDay != null) {\n      allDay = defaultAllDay\n    } else {\n      // fall back to the date props LAST\n      allDay = (!startMeta || startMeta.isTimeUnspecified) &&\n        (!endMeta || endMeta.isTimeUnspecified)\n    }\n  }\n\n  if (allDay && startMarker) {\n    startMarker = startOfDay(startMarker)\n  }\n\n  if (endMeta) {\n    endMarker = endMeta.marker\n\n    if (allDay) {\n      endMarker = startOfDay(endMarker)\n    }\n\n    if (startMarker && endMarker <= startMarker) {\n      endMarker = null\n    }\n  }\n\n  if (endMarker) {\n    hasEnd = true\n  } else if (!allowOpenRange) {\n    hasEnd = context.options.forceEventDuration || false\n\n    endMarker = context.dateEnv.add(\n      startMarker,\n      allDay ?\n        context.options.defaultAllDayEventDuration :\n        context.options.defaultTimedEventDuration,\n    )\n  }\n\n  return {\n    allDay,\n    hasEnd,\n    range: { start: startMarker, end: endMarker },\n    forcedStartTzo: startMeta ? startMeta.forcedTzo : null,\n    forcedEndTzo: endMeta ? endMeta.forcedTzo : null,\n  }\n}\n\nfunction computeIsDefaultAllDay(eventSource: EventSource<any> | null, context: CalendarContext): boolean | null {\n  let res = null\n\n  if (eventSource) {\n    res = eventSource.defaultAllDay\n  }\n\n  if (res == null) {\n    res = context.options.defaultAllDay\n  }\n\n  return res\n}\n","import { DateMarker, startOfDay, addDays, diffDays, diffDayAndTime } from '../datelib/marker'\nimport { Duration, asRoughMs, createDuration } from '../datelib/duration'\nimport { DateEnv } from '../datelib/env'\nimport { DateRange, OpenDateRange } from '../datelib/date-range'\n\n/* Date stuff that doesn't belong in datelib core\n----------------------------------------------------------------------------------------------------------------------*/\n\n// given a timed range, computes an all-day range that has the same exact duration,\n// but whose start time is aligned with the start of the day.\nexport function computeAlignedDayRange(timedRange: DateRange): DateRange {\n  let dayCnt = Math.floor(diffDays(timedRange.start, timedRange.end)) || 1\n  let start = startOfDay(timedRange.start)\n  let end = addDays(start, dayCnt)\n  return { start, end }\n}\n\n// given a timed range, computes an all-day range based on how for the end date bleeds into the next day\n// TODO: give nextDayThreshold a default arg\nexport function computeVisibleDayRange(timedRange: OpenDateRange, nextDayThreshold: Duration = createDuration(0)): OpenDateRange {\n  let startDay: DateMarker = null\n  let endDay: DateMarker = null\n\n  if (timedRange.end) {\n    endDay = startOfDay(timedRange.end)\n\n    let endTimeMS: number = timedRange.end.valueOf() - endDay.valueOf() // # of milliseconds into `endDay`\n\n    // If the end time is actually inclusively part of the next day and is equal to or\n    // beyond the next day threshold, adjust the end to be the exclusive end of `endDay`.\n    // Otherwise, leaving it as inclusive will cause it to exclude `endDay`.\n    if (endTimeMS && endTimeMS >= asRoughMs(nextDayThreshold)) {\n      endDay = addDays(endDay, 1)\n    }\n  }\n\n  if (timedRange.start) {\n    startDay = startOfDay(timedRange.start) // the beginning of the day the range starts\n\n    // If end is within `startDay` but not past nextDayThreshold, assign the default duration of one day.\n    if (endDay && endDay <= startDay) {\n      endDay = addDays(startDay, 1)\n    }\n  }\n\n  return { start: startDay, end: endDay }\n}\n\n// spans from one day into another?\nexport function isMultiDayRange(range: DateRange) {\n  let visibleRange = computeVisibleDayRange(range)\n\n  return diffDays(visibleRange.start, visibleRange.end) > 1\n}\n\nexport function diffDates(date0: DateMarker, date1: DateMarker, dateEnv: DateEnv, largeUnit?: string) {\n  if (largeUnit === 'year') {\n    return createDuration(dateEnv.diffWholeYears(date0, date1), 'year')!\n  }\n\n  if (largeUnit === 'month') {\n    return createDuration(dateEnv.diffWholeMonths(date0, date1), 'month')!\n  }\n\n  return diffDayAndTime(date0, date1) // returns a duration\n}\n","import { DateMarker } from './marker'\nimport { DateEnv, DateInput } from './env'\n\nexport interface DateRangeInput {\n  start?: DateInput\n  end?: DateInput\n}\n\nexport interface OpenDateRange {\n  start: DateMarker | null\n  end: DateMarker | null\n}\n\nexport interface DateRange {\n  start: DateMarker\n  end: DateMarker\n}\n\nexport function parseRange(input: DateRangeInput, dateEnv: DateEnv): OpenDateRange {\n  let start = null\n  let end = null\n\n  if (input.start) {\n    start = dateEnv.createMarker(input.start)\n  }\n\n  if (input.end) {\n    end = dateEnv.createMarker(input.end)\n  }\n\n  if (!start && !end) {\n    return null\n  }\n\n  if (start && end && end < start) {\n    return null\n  }\n\n  return { start, end }\n}\n\n// SIDE-EFFECT: will mutate ranges.\n// Will return a new array result.\nexport function invertRanges(ranges: DateRange[], constraintRange: DateRange): DateRange[] {\n  let invertedRanges: DateRange[] = []\n  let { start } = constraintRange // the end of the previous range. the start of the new range\n  let i\n  let dateRange\n\n  // ranges need to be in order. required for our date-walking algorithm\n  ranges.sort(compareRanges)\n\n  for (i = 0; i < ranges.length; i += 1) {\n    dateRange = ranges[i]\n\n    // add the span of time before the event (if there is any)\n    if (dateRange.start > start) { // compare millisecond time (skip any ambig logic)\n      invertedRanges.push({ start, end: dateRange.start })\n    }\n\n    if (dateRange.end > start) {\n      start = dateRange.end\n    }\n  }\n\n  // add the span of time after the last event (if there is any)\n  if (start < constraintRange.end) { // compare millisecond time (skip any ambig logic)\n    invertedRanges.push({ start, end: constraintRange.end })\n  }\n\n  return invertedRanges\n}\n\nfunction compareRanges(range0: DateRange, range1: DateRange) {\n  return range0.start.valueOf() - range1.start.valueOf() // earlier ranges go first\n}\n\nexport function intersectRanges(range0: OpenDateRange, range1: OpenDateRange): OpenDateRange {\n  let { start, end } = range0\n  let newRange = null\n\n  if (range1.start !== null) {\n    if (start === null) {\n      start = range1.start\n    } else {\n      start = new Date(Math.max(start.valueOf(), range1.start.valueOf()))\n    }\n  }\n\n  if (range1.end != null) {\n    if (end === null) {\n      end = range1.end\n    } else {\n      end = new Date(Math.min(end.valueOf(), range1.end.valueOf()))\n    }\n  }\n\n  if (start === null || end === null || start < end) {\n    newRange = { start, end }\n  }\n\n  return newRange\n}\n\nexport function rangesEqual(range0: OpenDateRange, range1: OpenDateRange): boolean {\n  return (range0.start === null ? null : range0.start.valueOf()) === (range1.start === null ? null : range1.start.valueOf()) &&\n    (range0.end === null ? null : range0.end.valueOf()) === (range1.end === null ? null : range1.end.valueOf())\n}\n\nexport function rangesIntersect(range0: OpenDateRange, range1: OpenDateRange): boolean {\n  return (range0.end === null || range1.start === null || range0.end > range1.start) &&\n    (range0.start === null || range1.end === null || range0.start < range1.end)\n}\n\nexport function rangeContainsRange(outerRange: OpenDateRange, innerRange: OpenDateRange): boolean {\n  return (outerRange.start === null || (innerRange.start !== null && innerRange.start >= outerRange.start)) &&\n    (outerRange.end === null || (innerRange.end !== null && innerRange.end <= outerRange.end))\n}\n\nexport function rangeContainsMarker(range: OpenDateRange, date: DateMarker | number): boolean { // date can be a millisecond time\n  return (range.start === null || date >= range.start) &&\n    (range.end === null || date < range.end)\n}\n\n// If the given date is not within the given range, move it inside.\n// (If it's past the end, make it one millisecond before the end).\nexport function constrainMarkerToRange(date: DateMarker, range: DateRange): DateMarker {\n  if (range.start != null && date < range.start) {\n    return range.start\n  }\n\n  if (range.end != null && date >= range.end) {\n    return new Date(range.end.valueOf() - 1)\n  }\n\n  return date\n}\n","import { EventDef, EventDefHash } from '../structs/event-def'\nimport { EventTuple } from '../structs/event-parse'\nimport { EventStore } from '../structs/event-store'\nimport { DateRange, invertRanges, intersectRanges, rangeContainsMarker } from '../datelib/date-range'\nimport { Duration } from '../datelib/duration'\nimport { compareByFieldSpecs, OrderSpec } from '../util/misc'\nimport { computeVisibleDayRange } from '../util/date'\nimport { Seg } from './DateComponent'\nimport { EventApi } from '../api/EventApi'\nimport { EventUi, EventUiHash, combineEventUis } from './event-ui'\nimport { mapHash } from '../util/object'\nimport { ViewContext } from '../ViewContext'\nimport { DateFormatter } from '../datelib/DateFormatter'\nimport { addMs, DateMarker, startOfDay } from '../datelib/marker'\nimport { ViewApi } from '../ViewApi'\nimport { MountArg } from '../common/render-hook'\nimport { createAriaKeyboardAttrs } from '../util/dom-event'\n\nexport interface EventRenderRange extends EventTuple {\n  ui: EventUi\n  range: DateRange\n  isStart: boolean\n  isEnd: boolean\n}\n\n/*\nSpecifying nextDayThreshold signals that all-day ranges should be sliced.\n*/\nexport function sliceEventStore(eventStore: EventStore, eventUiBases: EventUiHash, framingRange: DateRange, nextDayThreshold?: Duration) {\n  let inverseBgByGroupId: { [groupId: string]: DateRange[] } = {}\n  let inverseBgByDefId: { [defId: string]: DateRange[] } = {}\n  let defByGroupId: { [groupId: string]: EventDef } = {}\n  let bgRanges: EventRenderRange[] = []\n  let fgRanges: EventRenderRange[] = []\n  let eventUis = compileEventUis(eventStore.defs, eventUiBases)\n\n  for (let defId in eventStore.defs) {\n    let def = eventStore.defs[defId]\n    let ui = eventUis[def.defId]\n\n    if (ui.display === 'inverse-background') {\n      if (def.groupId) {\n        inverseBgByGroupId[def.groupId] = []\n\n        if (!defByGroupId[def.groupId]) {\n          defByGroupId[def.groupId] = def\n        }\n      } else {\n        inverseBgByDefId[defId] = []\n      }\n    }\n  }\n\n  for (let instanceId in eventStore.instances) {\n    let instance = eventStore.instances[instanceId]\n    let def = eventStore.defs[instance.defId]\n    let ui = eventUis[def.defId]\n    let origRange = instance.range\n\n    let normalRange = (!def.allDay && nextDayThreshold) ?\n      computeVisibleDayRange(origRange, nextDayThreshold) :\n      origRange\n\n    let slicedRange = intersectRanges(normalRange, framingRange)\n\n    if (slicedRange) {\n      if (ui.display === 'inverse-background') {\n        if (def.groupId) {\n          inverseBgByGroupId[def.groupId].push(slicedRange)\n        } else {\n          inverseBgByDefId[instance.defId].push(slicedRange)\n        }\n      } else if (ui.display !== 'none') {\n        (ui.display === 'background' ? bgRanges : fgRanges).push({\n          def,\n          ui,\n          instance,\n          range: slicedRange,\n          isStart: normalRange.start && normalRange.start.valueOf() === slicedRange.start.valueOf(),\n          isEnd: normalRange.end && normalRange.end.valueOf() === slicedRange.end.valueOf(),\n        })\n      }\n    }\n  }\n\n  for (let groupId in inverseBgByGroupId) { // BY GROUP\n    let ranges = inverseBgByGroupId[groupId]\n    let invertedRanges = invertRanges(ranges, framingRange)\n\n    for (let invertedRange of invertedRanges) {\n      let def = defByGroupId[groupId]\n      let ui = eventUis[def.defId]\n\n      bgRanges.push({\n        def,\n        ui,\n        instance: null,\n        range: invertedRange,\n        isStart: false,\n        isEnd: false,\n      })\n    }\n  }\n\n  for (let defId in inverseBgByDefId) {\n    let ranges = inverseBgByDefId[defId]\n    let invertedRanges = invertRanges(ranges, framingRange)\n\n    for (let invertedRange of invertedRanges) {\n      bgRanges.push({\n        def: eventStore.defs[defId],\n        ui: eventUis[defId],\n        instance: null,\n        range: invertedRange,\n        isStart: false,\n        isEnd: false,\n      })\n    }\n  }\n\n  return { bg: bgRanges, fg: fgRanges }\n}\n\nexport function hasBgRendering(def: EventDef) {\n  return def.ui.display === 'background' || def.ui.display === 'inverse-background'\n}\n\nexport function setElSeg(el: HTMLElement, seg: Seg) {\n  (el as any).fcSeg = seg\n}\n\nexport function getElSeg(el: HTMLElement): Seg | null {\n  return (el as any).fcSeg ||\n    (el.parentNode as any).fcSeg || // for the harness\n    null\n}\n\n// event ui computation\n\nexport function compileEventUis(eventDefs: EventDefHash, eventUiBases: EventUiHash) {\n  return mapHash(eventDefs, (eventDef: EventDef) => compileEventUi(eventDef, eventUiBases))\n}\n\nexport function compileEventUi(eventDef: EventDef, eventUiBases: EventUiHash) {\n  let uis = []\n\n  if (eventUiBases['']) {\n    uis.push(eventUiBases[''])\n  }\n\n  if (eventUiBases[eventDef.defId]) {\n    uis.push(eventUiBases[eventDef.defId])\n  }\n\n  uis.push(eventDef.ui)\n\n  return combineEventUis(uis)\n}\n\nexport function sortEventSegs(segs, eventOrderSpecs: OrderSpec<EventApi>[]): Seg[] {\n  let objs = segs.map(buildSegCompareObj)\n\n  objs.sort((obj0, obj1) => compareByFieldSpecs(obj0, obj1, eventOrderSpecs))\n\n  return objs.map((c) => c._seg)\n}\n\n// returns a object with all primitive props that can be compared\nexport function buildSegCompareObj(seg: Seg) {\n  let { eventRange } = seg\n  let eventDef = eventRange.def\n  let range = eventRange.instance ? eventRange.instance.range : eventRange.range\n  let start = range.start ? range.start.valueOf() : 0 // TODO: better support for open-range events\n  let end = range.end ? range.end.valueOf() : 0 // \"\n\n  return {\n    ...eventDef.extendedProps,\n    ...eventDef,\n    id: eventDef.publicId,\n    start,\n    end,\n    duration: end - start,\n    allDay: Number(eventDef.allDay),\n    _seg: seg, // for later retrieval\n  }\n}\n\n// other stuff\n\nexport interface EventContentArg { // for *Content handlers\n  event: EventApi\n  timeText: string\n  backgroundColor: string // TODO: add other EventUi props?\n  borderColor: string //\n  textColor: string //\n  isDraggable: boolean\n  isStartResizable: boolean\n  isEndResizable: boolean\n  isMirror: boolean\n  isStart: boolean\n  isEnd: boolean\n  isPast: boolean\n  isFuture: boolean\n  isToday: boolean\n  isSelected: boolean\n  isDragging: boolean\n  isResizing: boolean\n  view: ViewApi // specifically for the API\n}\n\nexport type EventMountArg = MountArg<EventContentArg>\n\nexport function computeSegDraggable(seg: Seg, context: ViewContext) {\n  let { pluginHooks } = context\n  let transformers = pluginHooks.isDraggableTransformers\n  let { def, ui } = seg.eventRange\n  let val = ui.startEditable\n\n  for (let transformer of transformers) {\n    val = transformer(val, def, ui, context)\n  }\n\n  return val\n}\n\nexport function computeSegStartResizable(seg: Seg, context: ViewContext) {\n  return seg.isStart && seg.eventRange.ui.durationEditable && context.options.eventResizableFromStart\n}\n\nexport function computeSegEndResizable(seg: Seg, context: ViewContext) {\n  return seg.isEnd && seg.eventRange.ui.durationEditable\n}\n\nexport function buildSegTimeText(\n  seg: Seg,\n  timeFormat: DateFormatter,\n  context: ViewContext,\n  defaultDisplayEventTime?: boolean, // defaults to true\n  defaultDisplayEventEnd?: boolean, // defaults to true\n  startOverride?: DateMarker,\n  endOverride?: DateMarker,\n) {\n  let { dateEnv, options } = context\n  let { displayEventTime, displayEventEnd } = options\n  let eventDef = seg.eventRange.def\n  let eventInstance = seg.eventRange.instance\n\n  if (displayEventTime == null) { displayEventTime = defaultDisplayEventTime !== false }\n  if (displayEventEnd == null) { displayEventEnd = defaultDisplayEventEnd !== false }\n\n  let wholeEventStart = eventInstance.range.start\n  let wholeEventEnd = eventInstance.range.end\n  let segStart = startOverride || seg.start || seg.eventRange.range.start\n  let segEnd = endOverride || seg.end || seg.eventRange.range.end\n  let isStartDay = startOfDay(wholeEventStart).valueOf() === startOfDay(segStart).valueOf()\n  let isEndDay = startOfDay(addMs(wholeEventEnd, -1)).valueOf() === startOfDay(addMs(segEnd, -1)).valueOf()\n\n  if (displayEventTime && !eventDef.allDay && (isStartDay || isEndDay)) {\n    segStart = isStartDay ? wholeEventStart : segStart\n    segEnd = isEndDay ? wholeEventEnd : segEnd\n\n    if (displayEventEnd && eventDef.hasEnd) {\n      return dateEnv.formatRange(segStart, segEnd, timeFormat, {\n        forcedStartTzo: startOverride ? null : eventInstance.forcedStartTzo, // nooooooooooooo, give tzo if same date\n        forcedEndTzo: endOverride ? null : eventInstance.forcedEndTzo,\n      })\n    }\n    return dateEnv.format(segStart, timeFormat, {\n      forcedTzo: startOverride ? null : eventInstance.forcedStartTzo, // nooooo, same\n    })\n  }\n\n  return ''\n}\n\nexport function getSegMeta(seg: Seg, todayRange: DateRange, nowDate?: DateMarker) { // TODO: make arg order consistent with date util\n  let segRange = seg.eventRange.range\n\n  return {\n    isPast: segRange.end < (nowDate || todayRange.start),\n    isFuture: segRange.start >= (nowDate || todayRange.end),\n    isToday: todayRange && rangeContainsMarker(todayRange, segRange.start),\n  }\n}\n\nexport function getEventClassNames(props: EventContentArg) { // weird that we use this interface, but convenient\n  let classNames: string[] = ['fc-event']\n\n  if (props.isMirror) {\n    classNames.push('fc-event-mirror')\n  }\n\n  if (props.isDraggable) {\n    classNames.push('fc-event-draggable')\n  }\n\n  if (props.isStartResizable || props.isEndResizable) {\n    classNames.push('fc-event-resizable')\n  }\n\n  if (props.isDragging) {\n    classNames.push('fc-event-dragging')\n  }\n\n  if (props.isResizing) {\n    classNames.push('fc-event-resizing')\n  }\n\n  if (props.isSelected) {\n    classNames.push('fc-event-selected')\n  }\n\n  if (props.isStart) {\n    classNames.push('fc-event-start')\n  }\n\n  if (props.isEnd) {\n    classNames.push('fc-event-end')\n  }\n\n  if (props.isPast) {\n    classNames.push('fc-event-past')\n  }\n\n  if (props.isToday) {\n    classNames.push('fc-event-today')\n  }\n\n  if (props.isFuture) {\n    classNames.push('fc-event-future')\n  }\n\n  return classNames\n}\n\nexport function buildEventRangeKey(eventRange: EventRenderRange) {\n  return eventRange.instance\n    ? eventRange.instance.instanceId\n    : `${eventRange.def.defId}:${eventRange.range.start.toISOString()}`\n  // inverse-background events don't have specific instances. TODO: better solution\n}\n\nexport function getSegAnchorAttrs(seg: Seg, context: ViewContext) {\n  let { def, instance } = seg.eventRange\n  let { url } = def\n\n  if (url) {\n    return { href: url }\n  }\n\n  let { emitter, options } = context\n  let { eventInteractive } = options\n\n  if (eventInteractive == null) {\n    eventInteractive = def.interactive\n    if (eventInteractive == null) {\n      eventInteractive = Boolean(emitter.hasHandlers('eventClick'))\n    }\n  }\n\n  // mock what happens in EventClicking\n  if (eventInteractive) {\n    // only attach keyboard-related handlers because click handler is already done in EventClicking\n    return createAriaKeyboardAttrs((ev: UIEvent) => {\n      emitter.trigger('eventClick', {\n        el: ev.target as HTMLElement,\n        event: new EventApi(context, def, instance),\n        jsEvent: ev as MouseEvent,\n        view: context.viewApi,\n      })\n    })\n  }\n\n  return {}\n}\n","import { DateRange, rangesEqual, OpenDateRange } from '../datelib/date-range'\nimport { DateInput, DateEnv } from '../datelib/env'\nimport { Duration } from '../datelib/duration'\nimport { createEventInstance } from './event-instance'\nimport { parseEventDef, refineEventDef } from './event-parse'\nimport { EventRenderRange, compileEventUi } from '../component/event-rendering'\nimport { EventUiHash } from '../component/event-ui'\nimport { CalendarContext } from '../CalendarContext'\nimport { refineProps, identity, Identity } from '../options'\n\n/*\nA data-structure for a date-range that will be visually displayed.\nContains other metadata like allDay, and anything else Components might like to store.\n\nTODO: in future, put otherProps in own object.\n*/\n\nexport interface OpenDateSpanInput {\n  start?: DateInput\n  end?: DateInput\n  allDay?: boolean\n  [otherProp: string]: any\n}\n\nexport interface DateSpanInput extends OpenDateSpanInput {\n  start: DateInput\n  end: DateInput\n}\n\nexport interface OpenDateSpan {\n  range: OpenDateRange\n  allDay: boolean\n  [otherProp: string]: any\n}\n\nexport interface DateSpan extends OpenDateSpan {\n  range: DateRange\n}\n\nexport interface RangeApi {\n  start: Date\n  end: Date\n  startStr: string\n  endStr: string\n}\n\nexport interface DateSpanApi extends RangeApi {\n  allDay: boolean\n}\n\nexport interface RangeApiWithTimeZone extends RangeApi {\n  timeZone: string\n}\n\nexport interface DatePointApi {\n  date: Date\n  dateStr: string\n  allDay: boolean\n}\n\nconst STANDARD_PROPS = {\n  start: identity as Identity<DateInput>,\n  end: identity as Identity<DateInput>,\n  allDay: Boolean,\n}\n\nexport function parseDateSpan(raw: DateSpanInput, dateEnv: DateEnv, defaultDuration?: Duration): DateSpan | null {\n  let span = parseOpenDateSpan(raw, dateEnv)\n  let { range } = span\n\n  if (!range.start) {\n    return null\n  }\n\n  if (!range.end) {\n    if (defaultDuration == null) {\n      return null\n    }\n    range.end = dateEnv.add(range.start, defaultDuration)\n  }\n\n  return span as DateSpan\n}\n\n/*\nTODO: somehow combine with parseRange?\nWill return null if the start/end props were present but parsed invalidly.\n*/\nexport function parseOpenDateSpan(raw: OpenDateSpanInput, dateEnv: DateEnv): OpenDateSpan | null {\n  let { refined: standardProps, extra } = refineProps(raw, STANDARD_PROPS)\n  let startMeta = standardProps.start ? dateEnv.createMarkerMeta(standardProps.start) : null\n  let endMeta = standardProps.end ? dateEnv.createMarkerMeta(standardProps.end) : null\n  let { allDay } = standardProps\n\n  if (allDay == null) {\n    allDay = (startMeta && startMeta.isTimeUnspecified) &&\n      (!endMeta || endMeta.isTimeUnspecified)\n  }\n\n  return {\n    range: {\n      start: startMeta ? startMeta.marker : null,\n      end: endMeta ? endMeta.marker : null,\n    },\n    allDay,\n    ...extra,\n  }\n}\n\nexport function isDateSpansEqual(span0: DateSpan, span1: DateSpan): boolean {\n  return rangesEqual(span0.range, span1.range) &&\n    span0.allDay === span1.allDay &&\n    isSpanPropsEqual(span0, span1)\n}\n\n// the NON-DATE-RELATED props\nfunction isSpanPropsEqual(span0: DateSpan, span1: DateSpan): boolean {\n  for (let propName in span1) {\n    if (propName !== 'range' && propName !== 'allDay') {\n      if (span0[propName] !== span1[propName]) {\n        return false\n      }\n    }\n  }\n\n  // are there any props that span0 has that span1 DOESN'T have?\n  // both have range/allDay, so no need to special-case.\n  for (let propName in span0) {\n    if (!(propName in span1)) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function buildDateSpanApi(span: DateSpan, dateEnv: DateEnv): DateSpanApi {\n  return {\n    ...buildRangeApi(span.range, dateEnv, span.allDay),\n    allDay: span.allDay,\n  }\n}\n\nexport function buildRangeApiWithTimeZone(range: DateRange, dateEnv: DateEnv, omitTime?: boolean): RangeApiWithTimeZone {\n  return {\n    ...buildRangeApi(range, dateEnv, omitTime),\n    timeZone: dateEnv.timeZone,\n  }\n}\n\nexport function buildRangeApi(range: DateRange, dateEnv: DateEnv, omitTime?: boolean): RangeApi {\n  return {\n    start: dateEnv.toDate(range.start),\n    end: dateEnv.toDate(range.end),\n    startStr: dateEnv.formatIso(range.start, { omitTime }),\n    endStr: dateEnv.formatIso(range.end, { omitTime }),\n  }\n}\n\nexport function fabricateEventRange(dateSpan: DateSpan, eventUiBases: EventUiHash, context: CalendarContext): EventRenderRange {\n  let res = refineEventDef({ editable: false }, context)\n  let def = parseEventDef(\n    res.refined,\n    res.extra,\n    '', // sourceId\n    dateSpan.allDay,\n    true, // hasEnd\n    context,\n  )\n\n  return {\n    def,\n    ui: compileEventUi(def, eventUiBases),\n    instance: createEventInstance(def.defId, dateSpan.range),\n    range: dateSpan.range,\n    isStart: true,\n    isEnd: true,\n  }\n}\n","import { __assign } from 'tslib'\nimport { PointerDragEvent } from './interactions/pointer'\nimport { buildDateSpanApi, DateSpanApi, DatePointApi, DateSpan } from './structs/date-span'\nimport { CalendarContext } from './CalendarContext'\nimport { ViewApi } from './ViewApi'\nimport { DateMarker, startOfDay } from './datelib/marker'\n\nexport interface DateClickApi extends DatePointApi {\n  dayEl: HTMLElement\n  jsEvent: UIEvent\n  view: ViewApi\n}\n\nexport interface DateSelectionApi extends DateSpanApi {\n  jsEvent: UIEvent\n  view: ViewApi\n}\n\nexport type DatePointTransform = (dateSpan: DateSpan, context: CalendarContext) => any\nexport type DateSpanTransform = (dateSpan: DateSpan, context: CalendarContext) => any\n\nexport type CalendarInteraction = { destroy: () => void }\nexport type CalendarInteractionClass = { new(context: CalendarContext): CalendarInteraction }\n\nexport type OptionChangeHandler = (propValue: any, context: CalendarContext) => void\nexport type OptionChangeHandlerMap = { [propName: string]: OptionChangeHandler }\n\nexport interface DateSelectArg extends DateSpanApi {\n  jsEvent: MouseEvent | null\n  view: ViewApi\n}\n\nexport function triggerDateSelect(selection: DateSpan, pev: PointerDragEvent | null, context: CalendarContext & { viewApi?: ViewApi }) {\n  context.emitter.trigger('select', {\n    ...buildDateSpanApiWithContext(selection, context),\n    jsEvent: pev ? pev.origEvent as MouseEvent : null, // Is this always a mouse event? See #4655\n    view: context.viewApi || context.calendarApi.view,\n  } as DateSelectArg)\n}\n\nexport interface DateUnselectArg {\n  jsEvent: MouseEvent\n  view: ViewApi\n}\n\nexport function triggerDateUnselect(pev: PointerDragEvent | null, context: CalendarContext & { viewApi?: ViewApi }) {\n  context.emitter.trigger('unselect', {\n    jsEvent: pev ? pev.origEvent : null,\n    view: context.viewApi || context.calendarApi.view,\n  } as DateUnselectArg)\n}\n\nexport function buildDateSpanApiWithContext(dateSpan: DateSpan, context: CalendarContext) {\n  let props = {} as DateSpanApi\n\n  for (let transform of context.pluginHooks.dateSpanTransforms) {\n    __assign(props, transform(dateSpan, context))\n  }\n\n  __assign(props, buildDateSpanApi(dateSpan, context.dateEnv))\n\n  return props\n}\n\n// Given an event's allDay status and start date, return what its fallback end date should be.\n// TODO: rename to computeDefaultEventEnd\nexport function getDefaultEventEnd(allDay: boolean, marker: DateMarker, context: CalendarContext): DateMarker {\n  let { dateEnv, options } = context\n  let end = marker\n\n  if (allDay) {\n    end = startOfDay(end)\n    end = dateEnv.add(end, options.defaultAllDayEventDuration)\n  } else {\n    end = dateEnv.add(end, options.defaultTimedEventDuration)\n  }\n\n  return end\n}\n","import { Duration } from '../datelib/duration'\nimport { EventStore, createEmptyEventStore } from './event-store'\nimport { EventDef } from './event-def'\nimport { EventInstance } from './event-instance'\nimport { computeAlignedDayRange } from '../util/date'\nimport { startOfDay } from '../datelib/marker'\nimport { EventUiHash, EventUi } from '../component/event-ui'\nimport { compileEventUis } from '../component/event-rendering'\nimport { CalendarContext } from '../CalendarContext'\nimport { getDefaultEventEnd } from '../calendar-utils'\n\n/*\nA data structure for how to modify an EventDef/EventInstance within an EventStore\n*/\n\nexport interface EventMutation {\n  datesDelta?: Duration // body start+end moving together. for dragging\n  startDelta?: Duration // for resizing\n  endDelta?: Duration // for resizing\n  standardProps?: any // for the def. should not include extendedProps\n  extendedProps?: any // for the def\n}\n\n// applies the mutation to ALL defs/instances within the event store\nexport function applyMutationToEventStore(\n  eventStore: EventStore,\n  eventConfigBase: EventUiHash,\n  mutation: EventMutation,\n  context: CalendarContext,\n): EventStore {\n  let eventConfigs = compileEventUis(eventStore.defs, eventConfigBase)\n  let dest = createEmptyEventStore()\n\n  for (let defId in eventStore.defs) {\n    let def = eventStore.defs[defId]\n\n    dest.defs[defId] = applyMutationToEventDef(def, eventConfigs[defId], mutation, context)\n  }\n\n  for (let instanceId in eventStore.instances) {\n    let instance = eventStore.instances[instanceId]\n    let def = dest.defs[instance.defId] // important to grab the newly modified def\n\n    dest.instances[instanceId] = applyMutationToEventInstance(instance, def, eventConfigs[instance.defId], mutation, context)\n  }\n\n  return dest\n}\n\nexport type eventDefMutationApplier = (eventDef: EventDef, mutation: EventMutation, context: CalendarContext) => void\n\nfunction applyMutationToEventDef(eventDef: EventDef, eventConfig: EventUi, mutation: EventMutation, context: CalendarContext): EventDef {\n  let standardProps = mutation.standardProps || {}\n\n  // if hasEnd has not been specified, guess a good value based on deltas.\n  // if duration will change, there's no way the default duration will persist,\n  // and thus, we need to mark the event as having a real end\n  if (\n    standardProps.hasEnd == null &&\n    eventConfig.durationEditable &&\n    (mutation.startDelta || mutation.endDelta)\n  ) {\n    standardProps.hasEnd = true // TODO: is this mutation okay?\n  }\n\n  let copy: EventDef = {\n    ...eventDef,\n    ...standardProps,\n    ui: { ...eventDef.ui, ...standardProps.ui }, // the only prop we want to recursively overlay\n  }\n\n  if (mutation.extendedProps) {\n    copy.extendedProps = { ...copy.extendedProps, ...mutation.extendedProps }\n  }\n\n  for (let applier of context.pluginHooks.eventDefMutationAppliers) {\n    applier(copy, mutation, context)\n  }\n\n  if (!copy.hasEnd && context.options.forceEventDuration) {\n    copy.hasEnd = true\n  }\n\n  return copy\n}\n\nfunction applyMutationToEventInstance(\n  eventInstance: EventInstance,\n  eventDef: EventDef, // must first be modified by applyMutationToEventDef\n  eventConfig: EventUi,\n  mutation: EventMutation,\n  context: CalendarContext,\n): EventInstance {\n  let { dateEnv } = context\n  let forceAllDay = mutation.standardProps && mutation.standardProps.allDay === true\n  let clearEnd = mutation.standardProps && mutation.standardProps.hasEnd === false\n  let copy = { ...eventInstance } as EventInstance\n\n  if (forceAllDay) {\n    copy.range = computeAlignedDayRange(copy.range)\n  }\n\n  if (mutation.datesDelta && eventConfig.startEditable) {\n    copy.range = {\n      start: dateEnv.add(copy.range.start, mutation.datesDelta),\n      end: dateEnv.add(copy.range.end, mutation.datesDelta),\n    }\n  }\n\n  if (mutation.startDelta && eventConfig.durationEditable) {\n    copy.range = {\n      start: dateEnv.add(copy.range.start, mutation.startDelta),\n      end: copy.range.end,\n    }\n  }\n\n  if (mutation.endDelta && eventConfig.durationEditable) {\n    copy.range = {\n      start: copy.range.start,\n      end: dateEnv.add(copy.range.end, mutation.endDelta),\n    }\n  }\n\n  if (clearEnd) {\n    copy.range = {\n      start: copy.range.start,\n      end: getDefaultEventEnd(eventDef.allDay, copy.range.start, context),\n    }\n  }\n\n  // in case event was all-day but the supplied deltas were not\n  // better util for this?\n  if (eventDef.allDay) {\n    copy.range = {\n      start: startOfDay(copy.range.start),\n      end: startOfDay(copy.range.end),\n    }\n  }\n\n  // handle invalid durations\n  if (copy.range.end < copy.range.start) {\n    copy.range.end = getDefaultEventEnd(eventDef.allDay, copy.range.start, context)\n  }\n\n  return copy\n}\n","import { DateEnv } from './datelib/env'\nimport { CalendarData } from './reducers/data-types'\n\n// no public types yet. when there are, export from:\n// import {} from './api-type-deps'\n\nexport class ViewApi { // always represents the current view. otherwise, it'd need to change value every time date changes\n  constructor(\n    public type: string,\n    private getCurrentData: () => CalendarData,\n    private dateEnv: DateEnv,\n  ) {\n  }\n\n  get calendar() {\n    return this.getCurrentData().calendarApi\n  }\n\n  get title() {\n    return this.getCurrentData().viewTitle\n  }\n\n  get activeStart() {\n    return this.dateEnv.toDate(this.getCurrentData().dateProfile.activeRange.start)\n  }\n\n  get activeEnd() {\n    return this.dateEnv.toDate(this.getCurrentData().dateProfile.activeRange.end)\n  }\n\n  get currentStart() {\n    return this.dateEnv.toDate(this.getCurrentData().dateProfile.currentRange.start)\n  }\n\n  get currentEnd() {\n    return this.dateEnv.toDate(this.getCurrentData().dateProfile.currentRange.end)\n  }\n\n  getOption(name: string) {\n    return this.getCurrentData().options[name] // are the view-specific options\n  }\n}\n","import { EventInput, EventInputTransformer } from './event-parse'\nimport { EventSourceFunc } from '../event-sources/func-event-source'\nimport { EventSource, EventSourceSuccessResponseHandler, EventSourceErrorResponseHandler } from './event-source'\nimport { JSON_FEED_EVENT_SOURCE_REFINERS } from '../event-sources/json-feed-event-source-refiners'\nimport { CalendarContext } from '../CalendarContext'\nimport { guid } from '../util/misc'\nimport { EVENT_UI_REFINERS, createEventUi, EventUiInput, EventUiRefined } from '../component/event-ui'\nimport { identity, Identity, RawOptionsFromRefiners, refineProps, RefinedOptionsFromRefiners } from '../options'\n\nconst EVENT_SOURCE_REFINERS = { // does NOT include EVENT_UI_REFINERS\n  id: String,\n  defaultAllDay: Boolean,\n  url: String,\n  format: String,\n  events: identity as Identity<EventInput[] | EventSourceFunc>, // array or function\n  eventDataTransform: identity as Identity<EventInputTransformer>,\n\n  // for any network-related sources\n  success: identity as Identity<EventSourceSuccessResponseHandler>,\n  failure: identity as Identity<EventSourceErrorResponseHandler>,\n}\n\ntype BuiltInEventSourceRefiners = typeof EVENT_SOURCE_REFINERS &\n  typeof JSON_FEED_EVENT_SOURCE_REFINERS\n\nexport interface EventSourceRefiners extends BuiltInEventSourceRefiners {\n  // for extending\n}\n\nexport type EventSourceInputObject =\n  EventUiInput &\n  RawOptionsFromRefiners<Required<EventSourceRefiners>> // Required hack\n\nexport type EventSourceInput =\n  EventSourceInputObject | // object in extended form\n  EventInput[] |\n  EventSourceFunc | // just a function\n  string // a URL for a JSON feed\n\nexport type EventSourceRefined =\n  EventUiRefined &\n  RefinedOptionsFromRefiners<Required<EventSourceRefiners>> // Required hack\n\nexport function parseEventSource(\n  raw: EventSourceInput,\n  context: CalendarContext,\n  refiners = buildEventSourceRefiners(context),\n): EventSource<any> | null {\n  let rawObj: EventSourceInputObject\n\n  if (typeof raw === 'string') {\n    rawObj = { url: raw }\n  } else if (typeof raw === 'function' || Array.isArray(raw)) {\n    rawObj = { events: raw }\n  } else if (typeof raw === 'object' && raw) { // not null\n    rawObj = raw\n  }\n\n  if (rawObj) {\n    let { refined, extra } = refineProps(rawObj, refiners)\n    let metaRes = buildEventSourceMeta(refined, context)\n\n    if (metaRes) {\n      return {\n        _raw: raw,\n        isFetching: false,\n        latestFetchId: '',\n        fetchRange: null,\n        defaultAllDay: refined.defaultAllDay,\n        eventDataTransform: refined.eventDataTransform,\n        success: refined.success,\n        failure: refined.failure,\n        publicId: refined.id || '',\n        sourceId: guid(),\n        sourceDefId: metaRes.sourceDefId,\n        meta: metaRes.meta,\n        ui: createEventUi(refined, context),\n        extendedProps: extra,\n      }\n    }\n  }\n\n  return null\n}\n\nexport function buildEventSourceRefiners(context: CalendarContext) {\n  return { ...EVENT_UI_REFINERS, ...EVENT_SOURCE_REFINERS, ...context.pluginHooks.eventSourceRefiners }\n}\n\nfunction buildEventSourceMeta(raw: EventSourceRefined, context: CalendarContext) {\n  let defs = context.pluginHooks.eventSourceDefs\n\n  for (let i = defs.length - 1; i >= 0; i -= 1) { // later-added plugins take precedence\n    let def = defs[i]\n    let meta = def.parseMeta(raw)\n\n    if (meta) {\n      return { sourceDefId: i, meta }\n    }\n  }\n\n  return null\n}\n","import { DateEnv, DateInput } from '../datelib/env'\nimport { DateMarker } from '../datelib/marker'\nimport { Action } from './Action'\nimport { BaseOptionsRefined } from '../options'\n\nexport function reduceCurrentDate(currentDate: DateMarker, action: Action) {\n  switch (action.type) {\n    case 'CHANGE_DATE':\n      return action.dateMarker\n    default:\n      return currentDate\n  }\n}\n\nexport function getInitialDate(options: BaseOptionsRefined, dateEnv: DateEnv) {\n  let initialDateInput = options.initialDate\n\n  // compute the initial ambig-timezone date\n  if (initialDateInput != null) {\n    return dateEnv.createMarker(initialDateInput)\n  }\n  return getNow(options.now, dateEnv) // getNow already returns unzoned\n}\n\nexport function getNow(nowInput: DateInput | (() => DateInput), dateEnv: DateEnv) {\n  if (typeof nowInput === 'function') {\n    nowInput = nowInput()\n  }\n\n  if (nowInput == null) {\n    return dateEnv.createNowMarker()\n  }\n\n  return dateEnv.createMarker(nowInput)\n}\n","import { DateMarker } from './datelib/marker'\nimport { createFormatter } from './datelib/formatting'\nimport { createDuration } from './datelib/duration'\nimport { parseDateSpan } from './structs/date-span'\nimport { parseEventSource } from './structs/event-source-parse'\nimport { parseEvent } from './structs/event-parse'\nimport { eventTupleToStore } from './structs/event-store'\nimport { ViewSpec } from './structs/view-spec'\nimport { PointerDragEvent } from './interactions/pointer'\nimport { getNow } from './reducers/current-date'\nimport { triggerDateSelect, triggerDateUnselect } from './calendar-utils'\nimport { hashValuesToArray } from './util/object'\nimport { CalendarDataManager } from './reducers/CalendarDataManager'\nimport { Action } from './reducers/Action'\nimport { EventSource } from './structs/event-source'\nimport { eventApiToStore, buildEventApis } from './api/EventApi'\n\n// public\nimport {\n  CalendarOptions,\n  CalendarListeners,\n  DateInput,\n  DurationInput,\n  DateSpanInput,\n  DateRangeInput,\n  EventSourceInput,\n  EventInput,\n  EventSourceApi,\n  EventApi,\n  ViewApi,\n} from './api-type-deps'\n\nexport class CalendarApi {\n  currentDataManager?: CalendarDataManager // will be set by CalendarDataManager\n\n  getCurrentData() {\n    return this.currentDataManager!.getCurrentData()\n  }\n\n  dispatch(action: Action) {\n    return this.currentDataManager!.dispatch(action)\n  }\n\n  get view(): ViewApi { return this.getCurrentData().viewApi } // for public API\n\n  batchRendering(callback: () => void) { // subclasses should implement\n    callback()\n  }\n\n  updateSize() { // public\n    this.trigger('_resize', true)\n  }\n\n  // Options\n  // -----------------------------------------------------------------------------------------------------------------\n\n  setOption<OptionName extends keyof CalendarOptions>(name: OptionName, val: CalendarOptions[OptionName]) {\n    this.dispatch({\n      type: 'SET_OPTION',\n      optionName: name,\n      rawOptionValue: val,\n    })\n  }\n\n  getOption<OptionName extends keyof CalendarOptions>(name: OptionName): CalendarOptions[OptionName] { // getter, used externally. WTF TS\n    return this.currentDataManager!.currentCalendarOptionsInput[name]\n  }\n\n  getAvailableLocaleCodes() {\n    return Object.keys(this.getCurrentData().availableRawLocales)\n  }\n\n  // Trigger\n  // -----------------------------------------------------------------------------------------------------------------\n\n  on<ListenerName extends keyof CalendarListeners>(handlerName: ListenerName, handler: CalendarListeners[ListenerName]) {\n    let { currentDataManager } = this\n\n    if (currentDataManager.currentCalendarOptionsRefiners[handlerName]) {\n      currentDataManager.emitter.on(handlerName, handler)\n    } else {\n      console.warn(`Unknown listener name '${handlerName}'`)\n    }\n  }\n\n  off<ListenerName extends keyof CalendarListeners>(handlerName: ListenerName, handler: CalendarListeners[ListenerName]) {\n    this.currentDataManager!.emitter.off(handlerName, handler)\n  }\n\n  // not meant for public use\n  trigger<ListenerName extends keyof CalendarListeners>(handlerName: ListenerName, ...args: Parameters<CalendarListeners[ListenerName]>) {\n    this.currentDataManager!.emitter.trigger(handlerName, ...args)\n  }\n\n  // View\n  // -----------------------------------------------------------------------------------------------------------------\n\n  changeView(viewType: string, dateOrRange?: DateRangeInput | DateInput) {\n    this.batchRendering(() => {\n      this.unselect()\n\n      if (dateOrRange) {\n        if ((dateOrRange as DateRangeInput).start && (dateOrRange as DateRangeInput).end) { // a range\n          this.dispatch({\n            type: 'CHANGE_VIEW_TYPE',\n            viewType,\n          })\n          this.dispatch({ // not very efficient to do two dispatches\n            type: 'SET_OPTION',\n            optionName: 'visibleRange',\n            rawOptionValue: dateOrRange,\n          })\n        } else {\n          let { dateEnv } = this.getCurrentData()\n\n          this.dispatch({\n            type: 'CHANGE_VIEW_TYPE',\n            viewType,\n            dateMarker: dateEnv.createMarker(dateOrRange as DateInput),\n          })\n        }\n      } else {\n        this.dispatch({\n          type: 'CHANGE_VIEW_TYPE',\n          viewType,\n        })\n      }\n    })\n  }\n\n  // Forces navigation to a view for the given date.\n  // `viewType` can be a specific view name or a generic one like \"week\" or \"day\".\n  // needs to change\n  zoomTo(dateMarker: DateMarker, viewType?: string) {\n    let state = this.getCurrentData()\n    let spec\n\n    viewType = viewType || 'day' // day is default zoom\n    spec = state.viewSpecs[viewType] || this.getUnitViewSpec(viewType)\n\n    this.unselect()\n\n    if (spec) {\n      this.dispatch({\n        type: 'CHANGE_VIEW_TYPE',\n        viewType: spec.type,\n        dateMarker,\n      })\n    } else {\n      this.dispatch({\n        type: 'CHANGE_DATE',\n        dateMarker,\n      })\n    }\n  }\n\n  // Given a duration singular unit, like \"week\" or \"day\", finds a matching view spec.\n  // Preference is given to views that have corresponding buttons.\n  private getUnitViewSpec(unit: string): ViewSpec | null {\n    let { viewSpecs, toolbarConfig } = this.getCurrentData()\n    let viewTypes = [].concat(\n      toolbarConfig.header ? toolbarConfig.header.viewsWithButtons : [],\n      toolbarConfig.footer ? toolbarConfig.footer.viewsWithButtons : [],\n    )\n    let i\n    let spec\n\n    for (let viewType in viewSpecs) {\n      viewTypes.push(viewType)\n    }\n\n    for (i = 0; i < viewTypes.length; i += 1) {\n      spec = viewSpecs[viewTypes[i]]\n      if (spec) {\n        if (spec.singleUnit === unit) {\n          return spec\n        }\n      }\n    }\n\n    return null\n  }\n\n  // Current Date\n  // -----------------------------------------------------------------------------------------------------------------\n\n  prev() {\n    this.unselect()\n    this.dispatch({ type: 'PREV' })\n  }\n\n  next() {\n    this.unselect()\n    this.dispatch({ type: 'NEXT' })\n  }\n\n  prevYear() {\n    let state = this.getCurrentData()\n    this.unselect()\n    this.dispatch({\n      type: 'CHANGE_DATE',\n      dateMarker: state.dateEnv.addYears(state.currentDate, -1),\n    })\n  }\n\n  nextYear() {\n    let state = this.getCurrentData()\n\n    this.unselect()\n    this.dispatch({\n      type: 'CHANGE_DATE',\n      dateMarker: state.dateEnv.addYears(state.currentDate, 1),\n    })\n  }\n\n  today() {\n    let state = this.getCurrentData()\n\n    this.unselect()\n    this.dispatch({\n      type: 'CHANGE_DATE',\n      dateMarker: getNow(state.calendarOptions.now, state.dateEnv),\n    })\n  }\n\n  gotoDate(zonedDateInput) {\n    let state = this.getCurrentData()\n\n    this.unselect()\n    this.dispatch({\n      type: 'CHANGE_DATE',\n      dateMarker: state.dateEnv.createMarker(zonedDateInput),\n    })\n  }\n\n  incrementDate(deltaInput) { // is public facing\n    let state = this.getCurrentData()\n    let delta = createDuration(deltaInput)\n\n    if (delta) { // else, warn about invalid input?\n      this.unselect()\n      this.dispatch({\n        type: 'CHANGE_DATE',\n        dateMarker: state.dateEnv.add(state.currentDate, delta),\n      })\n    }\n  }\n\n  // for external API\n  getDate(): Date {\n    let state = this.getCurrentData()\n    return state.dateEnv.toDate(state.currentDate)\n  }\n\n  // Date Formatting Utils\n  // -----------------------------------------------------------------------------------------------------------------\n\n  formatDate(d: DateInput, formatter): string {\n    let { dateEnv } = this.getCurrentData()\n\n    return dateEnv.format(\n      dateEnv.createMarker(d),\n      createFormatter(formatter),\n    )\n  }\n\n  // `settings` is for formatter AND isEndExclusive\n  formatRange(d0: DateInput, d1: DateInput, settings) {\n    let { dateEnv } = this.getCurrentData()\n\n    return dateEnv.formatRange(\n      dateEnv.createMarker(d0),\n      dateEnv.createMarker(d1),\n      createFormatter(settings),\n      settings,\n    )\n  }\n\n  formatIso(d: DateInput, omitTime?: boolean) {\n    let { dateEnv } = this.getCurrentData()\n\n    return dateEnv.formatIso(dateEnv.createMarker(d), { omitTime })\n  }\n\n  // Date Selection / Event Selection / DayClick\n  // -----------------------------------------------------------------------------------------------------------------\n\n  // this public method receives start/end dates in any format, with any timezone\n  // NOTE: args were changed from v3\n  select(dateOrObj: DateInput | any, endDate?: DateInput) {\n    let selectionInput: DateSpanInput\n\n    if (endDate == null) {\n      if (dateOrObj.start != null) {\n        selectionInput = dateOrObj as DateSpanInput\n      } else {\n        selectionInput = {\n          start: dateOrObj,\n          end: null,\n        }\n      }\n    } else {\n      selectionInput = {\n        start: dateOrObj,\n        end: endDate,\n      } as DateSpanInput\n    }\n\n    let state = this.getCurrentData()\n    let selection = parseDateSpan(\n      selectionInput,\n      state.dateEnv,\n      createDuration({ days: 1 }), // TODO: cache this?\n    )\n\n    if (selection) { // throw parse error otherwise?\n      this.dispatch({ type: 'SELECT_DATES', selection })\n      triggerDateSelect(selection, null, state)\n    }\n  }\n\n  // public method\n  unselect(pev?: PointerDragEvent) {\n    let state = this.getCurrentData()\n\n    if (state.dateSelection) {\n      this.dispatch({ type: 'UNSELECT_DATES' })\n      triggerDateUnselect(pev, state)\n    }\n  }\n\n  // Public Events API\n  // -----------------------------------------------------------------------------------------------------------------\n\n  addEvent(eventInput: EventInput, sourceInput?: EventSourceApi | string | boolean): EventApi | null {\n    if (eventInput instanceof EventApi) {\n      let def = eventInput._def\n      let instance = eventInput._instance\n      let currentData = this.getCurrentData()\n\n      // not already present? don't want to add an old snapshot\n      if (!currentData.eventStore.defs[def.defId]) {\n        this.dispatch({\n          type: 'ADD_EVENTS',\n          eventStore: eventTupleToStore({ def, instance }), // TODO: better util for two args?\n        })\n        this.triggerEventAdd(eventInput)\n      }\n\n      return eventInput\n    }\n\n    let state = this.getCurrentData()\n    let eventSource: EventSource<any>\n\n    if (sourceInput instanceof EventSourceApi) {\n      eventSource = sourceInput.internalEventSource\n    } else if (typeof sourceInput === 'boolean') {\n      if (sourceInput) { // true. part of the first event source\n        [eventSource] = hashValuesToArray(state.eventSources)\n      }\n    } else if (sourceInput != null) { // an ID. accepts a number too\n      let sourceApi = this.getEventSourceById(sourceInput) // TODO: use an internal function\n\n      if (!sourceApi) {\n        console.warn(`Could not find an event source with ID \"${sourceInput}\"`) // TODO: test\n        return null\n      }\n      eventSource = sourceApi.internalEventSource\n    }\n\n    let tuple = parseEvent(eventInput, eventSource, state, false)\n\n    if (tuple) {\n      let newEventApi = new EventApi(\n        state,\n        tuple.def,\n        tuple.def.recurringDef ? null : tuple.instance,\n      )\n      this.dispatch({\n        type: 'ADD_EVENTS',\n        eventStore: eventTupleToStore(tuple),\n      })\n      this.triggerEventAdd(newEventApi)\n\n      return newEventApi\n    }\n\n    return null\n  }\n\n  private triggerEventAdd(eventApi: EventApi) {\n    let { emitter } = this.getCurrentData()\n\n    emitter.trigger('eventAdd', {\n      event: eventApi,\n      relatedEvents: [],\n      revert: () => {\n        this.dispatch({\n          type: 'REMOVE_EVENTS',\n          eventStore: eventApiToStore(eventApi),\n        })\n      },\n    })\n  }\n\n  // TODO: optimize\n  getEventById(id: string): EventApi | null {\n    let state = this.getCurrentData()\n    let { defs, instances } = state.eventStore\n    id = String(id)\n\n    for (let defId in defs) {\n      let def = defs[defId]\n\n      if (def.publicId === id) {\n        if (def.recurringDef) {\n          return new EventApi(state, def, null)\n        }\n\n        for (let instanceId in instances) {\n          let instance = instances[instanceId]\n\n          if (instance.defId === def.defId) {\n            return new EventApi(state, def, instance)\n          }\n        }\n      }\n    }\n\n    return null\n  }\n\n  getEvents(): EventApi[] {\n    let currentData = this.getCurrentData()\n\n    return buildEventApis(currentData.eventStore, currentData)\n  }\n\n  removeAllEvents() {\n    this.dispatch({ type: 'REMOVE_ALL_EVENTS' })\n  }\n\n  // Public Event Sources API\n  // -----------------------------------------------------------------------------------------------------------------\n\n  getEventSources(): EventSourceApi[] {\n    let state = this.getCurrentData()\n    let sourceHash = state.eventSources\n    let sourceApis: EventSourceApi[] = []\n\n    for (let internalId in sourceHash) {\n      sourceApis.push(new EventSourceApi(state, sourceHash[internalId]))\n    }\n\n    return sourceApis\n  }\n\n  getEventSourceById(id: string): EventSourceApi | null {\n    let state = this.getCurrentData()\n    let sourceHash = state.eventSources\n    id = String(id)\n\n    for (let sourceId in sourceHash) {\n      if (sourceHash[sourceId].publicId === id) {\n        return new EventSourceApi(state, sourceHash[sourceId])\n      }\n    }\n\n    return null\n  }\n\n  addEventSource(sourceInput: EventSourceInput): EventSourceApi {\n    let state = this.getCurrentData()\n\n    if (sourceInput instanceof EventSourceApi) {\n      // not already present? don't want to add an old snapshot\n      if (!state.eventSources[sourceInput.internalEventSource.sourceId]) {\n        this.dispatch({\n          type: 'ADD_EVENT_SOURCES',\n          sources: [sourceInput.internalEventSource],\n        })\n      }\n\n      return sourceInput\n    }\n\n    let eventSource = parseEventSource(sourceInput, state)\n\n    if (eventSource) { // TODO: error otherwise?\n      this.dispatch({ type: 'ADD_EVENT_SOURCES', sources: [eventSource] })\n\n      return new EventSourceApi(state, eventSource)\n    }\n\n    return null\n  }\n\n  removeAllEventSources() {\n    this.dispatch({ type: 'REMOVE_ALL_EVENT_SOURCES' })\n  }\n\n  refetchEvents() {\n    this.dispatch({ type: 'FETCH_EVENT_SOURCES', isRefetch: true })\n  }\n\n  // Scroll\n  // -----------------------------------------------------------------------------------------------------------------\n\n  scrollToTime(timeInput: DurationInput) {\n    let time = createDuration(timeInput)\n\n    if (time) {\n      this.trigger('_scrollRequest', { time })\n    }\n  }\n}\n","import { __assign } from 'tslib'\nimport { EventDef } from '../structs/event-def'\nimport { EVENT_NON_DATE_REFINERS, EVENT_DATE_REFINERS } from '../structs/event-parse'\nimport { EventInstance } from '../structs/event-instance'\nimport { EVENT_UI_REFINERS, EventUiHash } from '../component/event-ui'\nimport { EventMutation, applyMutationToEventStore } from '../structs/event-mutation'\nimport { diffDates, computeAlignedDayRange } from '../util/date'\nimport { createDuration, durationsEqual } from '../datelib/duration'\nimport { createFormatter } from '../datelib/formatting'\nimport { CalendarContext } from '../CalendarContext'\nimport { getRelevantEvents, EventStore } from '../structs/event-store'\nimport { Dictionary } from '../options'\n\n// public\nimport {\n  DateInput,\n  DurationInput,\n  FormatterInput,\n  EventSourceApi,\n} from '../api-type-deps'\n\nexport class EventApi {\n  _context: CalendarContext\n  _def: EventDef\n  _instance: EventInstance | null\n  // instance will be null if expressing a recurring event that has no current instances,\n  // OR if trying to validate an incoming external event that has no dates assigned\n\n  constructor(context: CalendarContext, def: EventDef, instance?: EventInstance) {\n    this._context = context\n    this._def = def\n    this._instance = instance || null\n  }\n\n  /*\n  TODO: make event struct more responsible for this\n  */\n  setProp(name: string, val: any) {\n    if (name in EVENT_DATE_REFINERS) {\n      console.warn('Could not set date-related prop \\'name\\'. Use one of the date-related methods instead.')\n    // TODO: make proper aliasing system?\n    } else if (name === 'id') {\n      val = EVENT_NON_DATE_REFINERS[name](val)\n\n      this.mutate({\n        standardProps: { publicId: val }, // hardcoded internal name\n      })\n    } else if (name in EVENT_NON_DATE_REFINERS) {\n      val = EVENT_NON_DATE_REFINERS[name](val)\n\n      this.mutate({\n        standardProps: { [name]: val },\n      })\n    } else if (name in EVENT_UI_REFINERS) {\n      let ui = EVENT_UI_REFINERS[name](val)\n\n      if (name === 'color') {\n        ui = { backgroundColor: val, borderColor: val }\n      } else if (name === 'editable') {\n        ui = { startEditable: val, durationEditable: val }\n      } else {\n        ui = { [name]: val }\n      }\n\n      this.mutate({\n        standardProps: { ui },\n      })\n    } else {\n      console.warn(`Could not set prop '${name}'. Use setExtendedProp instead.`)\n    }\n  }\n\n  setExtendedProp(name: string, val: any) {\n    this.mutate({\n      extendedProps: { [name]: val },\n    })\n  }\n\n  setStart(startInput: DateInput, options: { granularity?: string, maintainDuration?: boolean } = {}) {\n    let { dateEnv } = this._context\n    let start = dateEnv.createMarker(startInput)\n\n    if (start && this._instance) { // TODO: warning if parsed bad\n      let instanceRange = this._instance.range\n      let startDelta = diffDates(instanceRange.start, start, dateEnv, options.granularity) // what if parsed bad!?\n\n      if (options.maintainDuration) {\n        this.mutate({ datesDelta: startDelta })\n      } else {\n        this.mutate({ startDelta })\n      }\n    }\n  }\n\n  setEnd(endInput: DateInput | null, options: { granularity?: string } = {}) {\n    let { dateEnv } = this._context\n    let end\n\n    if (endInput != null) {\n      end = dateEnv.createMarker(endInput)\n\n      if (!end) {\n        return // TODO: warning if parsed bad\n      }\n    }\n\n    if (this._instance) {\n      if (end) {\n        let endDelta = diffDates(this._instance.range.end, end, dateEnv, options.granularity)\n        this.mutate({ endDelta })\n      } else {\n        this.mutate({ standardProps: { hasEnd: false } })\n      }\n    }\n  }\n\n  setDates(startInput: DateInput, endInput: DateInput | null, options: { allDay?: boolean, granularity?: string } = {}) {\n    let { dateEnv } = this._context\n    let standardProps = { allDay: options.allDay } as any\n    let start = dateEnv.createMarker(startInput)\n    let end\n\n    if (!start) {\n      return // TODO: warning if parsed bad\n    }\n\n    if (endInput != null) {\n      end = dateEnv.createMarker(endInput)\n\n      if (!end) { // TODO: warning if parsed bad\n        return\n      }\n    }\n\n    if (this._instance) {\n      let instanceRange = this._instance.range\n\n      // when computing the diff for an event being converted to all-day,\n      // compute diff off of the all-day values the way event-mutation does.\n      if (options.allDay === true) {\n        instanceRange = computeAlignedDayRange(instanceRange)\n      }\n\n      let startDelta = diffDates(instanceRange.start, start, dateEnv, options.granularity)\n\n      if (end) {\n        let endDelta = diffDates(instanceRange.end, end, dateEnv, options.granularity)\n\n        if (durationsEqual(startDelta, endDelta)) {\n          this.mutate({ datesDelta: startDelta, standardProps })\n        } else {\n          this.mutate({ startDelta, endDelta, standardProps })\n        }\n      } else { // means \"clear the end\"\n        standardProps.hasEnd = false\n        this.mutate({ datesDelta: startDelta, standardProps })\n      }\n    }\n  }\n\n  moveStart(deltaInput: DurationInput) {\n    let delta = createDuration(deltaInput)\n\n    if (delta) { // TODO: warning if parsed bad\n      this.mutate({ startDelta: delta })\n    }\n  }\n\n  moveEnd(deltaInput: DurationInput) {\n    let delta = createDuration(deltaInput)\n\n    if (delta) { // TODO: warning if parsed bad\n      this.mutate({ endDelta: delta })\n    }\n  }\n\n  moveDates(deltaInput: DurationInput) {\n    let delta = createDuration(deltaInput)\n\n    if (delta) { // TODO: warning if parsed bad\n      this.mutate({ datesDelta: delta })\n    }\n  }\n\n  setAllDay(allDay: boolean, options: { maintainDuration?: boolean } = {}) {\n    let standardProps = { allDay } as any\n    let { maintainDuration } = options\n\n    if (maintainDuration == null) {\n      maintainDuration = this._context.options.allDayMaintainDuration\n    }\n\n    if (this._def.allDay !== allDay) {\n      standardProps.hasEnd = maintainDuration\n    }\n\n    this.mutate({ standardProps })\n  }\n\n  formatRange(formatInput: FormatterInput) {\n    let { dateEnv } = this._context\n    let instance = this._instance\n    let formatter = createFormatter(formatInput)\n\n    if (this._def.hasEnd) {\n      return dateEnv.formatRange(instance.range.start, instance.range.end, formatter, {\n        forcedStartTzo: instance.forcedStartTzo,\n        forcedEndTzo: instance.forcedEndTzo,\n      })\n    }\n    return dateEnv.format(instance.range.start, formatter, {\n      forcedTzo: instance.forcedStartTzo,\n    })\n  }\n\n  mutate(mutation: EventMutation) { // meant to be private. but plugins need access\n    let instance = this._instance\n\n    if (instance) {\n      let def = this._def\n      let context = this._context\n      let { eventStore } = context.getCurrentData()\n      let relevantEvents = getRelevantEvents(eventStore, instance.instanceId)\n      let eventConfigBase = {\n        '': { // HACK. always allow API to mutate events\n          display: '',\n          startEditable: true,\n          durationEditable: true,\n          constraints: [],\n          overlap: null,\n          allows: [],\n          backgroundColor: '',\n          borderColor: '',\n          textColor: '',\n          classNames: [],\n        },\n      } as EventUiHash\n\n      relevantEvents = applyMutationToEventStore(relevantEvents, eventConfigBase, mutation, context)\n\n      let oldEvent = new EventApi(context, def, instance) // snapshot\n      this._def = relevantEvents.defs[def.defId]\n      this._instance = relevantEvents.instances[instance.instanceId]\n\n      context.dispatch({\n        type: 'MERGE_EVENTS',\n        eventStore: relevantEvents,\n      })\n\n      context.emitter.trigger('eventChange', {\n        oldEvent,\n        event: this,\n        relatedEvents: buildEventApis(relevantEvents, context, instance),\n        revert() {\n          context.dispatch({\n            type: 'RESET_EVENTS',\n            eventStore, // the ORIGINAL store\n          })\n        },\n      })\n    }\n  }\n\n  remove() {\n    let context = this._context\n    let asStore = eventApiToStore(this)\n\n    context.dispatch({\n      type: 'REMOVE_EVENTS',\n      eventStore: asStore,\n    })\n\n    context.emitter.trigger('eventRemove', {\n      event: this,\n      relatedEvents: [],\n      revert() {\n        context.dispatch({\n          type: 'MERGE_EVENTS',\n          eventStore: asStore,\n        })\n      },\n    })\n  }\n\n  get source(): EventSourceApi | null {\n    let { sourceId } = this._def\n\n    if (sourceId) {\n      return new EventSourceApi(\n        this._context,\n        this._context.getCurrentData().eventSources[sourceId],\n      )\n    }\n    return null\n  }\n\n  get start(): Date | null {\n    return this._instance ?\n      this._context.dateEnv.toDate(this._instance.range.start) :\n      null\n  }\n\n  get end(): Date | null {\n    return (this._instance && this._def.hasEnd) ?\n      this._context.dateEnv.toDate(this._instance.range.end) :\n      null\n  }\n\n  get startStr(): string {\n    let instance = this._instance\n    if (instance) {\n      return this._context.dateEnv.formatIso(instance.range.start, {\n        omitTime: this._def.allDay,\n        forcedTzo: instance.forcedStartTzo,\n      })\n    }\n    return ''\n  }\n\n  get endStr(): string {\n    let instance = this._instance\n    if (instance && this._def.hasEnd) {\n      return this._context.dateEnv.formatIso(instance.range.end, {\n        omitTime: this._def.allDay,\n        forcedTzo: instance.forcedEndTzo,\n      })\n    }\n    return ''\n  }\n\n  // computable props that all access the def\n  // TODO: find a TypeScript-compatible way to do this at scale\n  get id() { return this._def.publicId }\n  get groupId() { return this._def.groupId }\n  get allDay() { return this._def.allDay }\n  get title() { return this._def.title }\n  get url() { return this._def.url }\n  get display() { return this._def.ui.display || 'auto' } // bad. just normalize the type earlier\n  get startEditable() { return this._def.ui.startEditable }\n  get durationEditable() { return this._def.ui.durationEditable }\n  get constraint() { return this._def.ui.constraints[0] || null }\n  get overlap() { return this._def.ui.overlap }\n  get allow() { return this._def.ui.allows[0] || null }\n  get backgroundColor() { return this._def.ui.backgroundColor }\n  get borderColor() { return this._def.ui.borderColor }\n  get textColor() { return this._def.ui.textColor }\n\n  // NOTE: user can't modify these because Object.freeze was called in event-def parsing\n  get classNames() { return this._def.ui.classNames }\n  get extendedProps() { return this._def.extendedProps }\n\n  toPlainObject(settings: { collapseExtendedProps?: boolean, collapseColor?: boolean } = {}): Dictionary {\n    let def = this._def\n    let { ui } = def\n    let { startStr, endStr } = this\n    let res: Dictionary = {}\n\n    if (def.title) {\n      res.title = def.title\n    }\n\n    if (startStr) {\n      res.start = startStr\n    }\n\n    if (endStr) {\n      res.end = endStr\n    }\n\n    if (def.publicId) {\n      res.id = def.publicId\n    }\n\n    if (def.groupId) {\n      res.groupId = def.groupId\n    }\n\n    if (def.url) {\n      res.url = def.url\n    }\n\n    if (ui.display && ui.display !== 'auto') {\n      res.display = ui.display\n    }\n\n    // TODO: what about recurring-event properties???\n    // TODO: include startEditable/durationEditable/constraint/overlap/allow\n\n    if (settings.collapseColor && ui.backgroundColor && ui.backgroundColor === ui.borderColor) {\n      res.color = ui.backgroundColor\n    } else {\n      if (ui.backgroundColor) {\n        res.backgroundColor = ui.backgroundColor\n      }\n      if (ui.borderColor) {\n        res.borderColor = ui.borderColor\n      }\n    }\n\n    if (ui.textColor) {\n      res.textColor = ui.textColor\n    }\n\n    if (ui.classNames.length) {\n      res.classNames = ui.classNames\n    }\n\n    if (Object.keys(def.extendedProps).length) {\n      if (settings.collapseExtendedProps) {\n        __assign(res, def.extendedProps)\n      } else {\n        res.extendedProps = def.extendedProps\n      }\n    }\n\n    return res\n  }\n\n  toJSON() {\n    return this.toPlainObject()\n  }\n}\n\nexport function eventApiToStore(eventApi: EventApi): EventStore {\n  let def = eventApi._def\n  let instance = eventApi._instance\n\n  return {\n    defs: { [def.defId]: def },\n    instances: instance\n      ? { [instance.instanceId]: instance }\n      : {},\n  }\n}\n\nexport function buildEventApis(eventStore: EventStore, context: CalendarContext, excludeInstance?: EventInstance): EventApi[] {\n  let { defs, instances } = eventStore\n  let eventApis: EventApi[] = []\n  let excludeInstanceId = excludeInstance ? excludeInstance.instanceId : ''\n\n  for (let id in instances) {\n    let instance = instances[id]\n    let def = defs[instance.defId]\n\n    if (instance.instanceId !== excludeInstanceId) {\n      eventApis.push(new EventApi(context, def, instance))\n    }\n  }\n\n  return eventApis\n}\n","import { DateMarker, arrayToUtcDate, dateToUtcArray } from './marker'\n\nexport interface CalendarSystem {\n  getMarkerYear(d: DateMarker): number\n  getMarkerMonth(d: DateMarker): number\n  getMarkerDay(d: DateMarker): number\n  arrayToMarker(arr: number[]): DateMarker\n  markerToArray(d: DateMarker): number[]\n}\n\nlet calendarSystemClassMap = {}\n\nexport function registerCalendarSystem(name, theClass) {\n  calendarSystemClassMap[name] = theClass\n}\n\nexport function createCalendarSystem(name) {\n  return new calendarSystemClassMap[name]()\n}\n\nclass GregorianCalendarSystem implements CalendarSystem {\n  getMarkerYear(d: DateMarker) {\n    return d.getUTCFullYear()\n  }\n\n  getMarkerMonth(d: DateMarker) {\n    return d.getUTCMonth()\n  }\n\n  getMarkerDay(d: DateMarker) {\n    return d.getUTCDate()\n  }\n\n  arrayToMarker(arr) {\n    return arrayToUtcDate(arr)\n  }\n\n  markerToArray(marker) {\n    return dateToUtcArray(marker)\n  }\n}\n\nregisterCalendarSystem('gregory', GregorianCalendarSystem)\n","import { isValidDate } from './marker'\n\nconst ISO_RE = /^\\s*(\\d{4})(-?(\\d{2})(-?(\\d{2})([T ](\\d{2}):?(\\d{2})(:?(\\d{2})(\\.(\\d+))?)?(Z|(([-+])(\\d{2})(:?(\\d{2}))?))?)?)?)?$/\n\nexport function parse(str) {\n  let m = ISO_RE.exec(str)\n\n  if (m) {\n    let marker = new Date(Date.UTC(\n      Number(m[1]),\n      m[3] ? Number(m[3]) - 1 : 0,\n      Number(m[5] || 1),\n      Number(m[7] || 0),\n      Number(m[8] || 0),\n      Number(m[10] || 0),\n      m[12] ? Number(`0.${m[12]}`) * 1000 : 0,\n    ))\n\n    if (isValidDate(marker)) {\n      let timeZoneOffset = null\n\n      if (m[13]) {\n        timeZoneOffset = (m[15] === '-' ? -1 : 1) * (\n          Number(m[16] || 0) * 60 +\n          Number(m[18] || 0)\n        )\n      }\n\n      return {\n        marker,\n        isTimeUnspecified: !m[6],\n        timeZoneOffset,\n      }\n    }\n  }\n\n  return null\n}\n","import {\n  DateMarker, addMs,\n  diffHours, diffMinutes, diffSeconds, diffWholeWeeks, diffWholeDays,\n  startOfDay, startOfHour, startOfMinute, startOfSecond,\n  weekOfYear, arrayToUtcDate, dateToUtcArray, dateToLocalArray, arrayToLocalDate, timeAsMs, isValidDate,\n} from './marker'\nimport { CalendarSystem, createCalendarSystem } from './calendar-system'\nimport { Locale } from './locale'\nimport { NamedTimeZoneImpl, NamedTimeZoneImplClass } from './timezone'\nimport { Duration, asRoughYears, asRoughMonths, asRoughDays, asRoughMs } from './duration'\nimport { DateFormatter, CmdFormatterFunc } from './DateFormatter'\nimport { buildIsoString } from './formatting-utils'\nimport { parse } from './parsing'\nimport { isInt } from '../util/misc'\n\nexport type WeekNumberCalculation = 'local' | 'ISO' | ((m: Date) => number)\n\nexport interface DateEnvSettings {\n  timeZone: string\n  namedTimeZoneImpl?: NamedTimeZoneImplClass\n  calendarSystem: string\n  locale: Locale\n  weekNumberCalculation?: WeekNumberCalculation\n  firstDay?: number, // will override what the locale wants\n  weekText?: string,\n  weekTextLong?: string\n  cmdFormatter?: CmdFormatterFunc\n  defaultSeparator?: string\n}\n\nexport type DateInput = Date | string | number | number[]\n\nexport interface DateMarkerMeta {\n  marker: DateMarker\n  isTimeUnspecified: boolean\n  forcedTzo: number | null\n}\n\nexport class DateEnv {\n  timeZone: string\n  namedTimeZoneImpl: NamedTimeZoneImpl\n  canComputeOffset: boolean\n\n  calendarSystem: CalendarSystem\n  locale: Locale\n  weekDow: number // which day begins the week\n  weekDoy: number // which day must be within the year, for computing the first week number\n  weekNumberFunc: any\n  weekText: string // DON'T LIKE how options are confused with local\n  weekTextLong: string\n  cmdFormatter?: CmdFormatterFunc\n  defaultSeparator: string\n\n  constructor(settings: DateEnvSettings) {\n    let timeZone = this.timeZone = settings.timeZone\n    let isNamedTimeZone = timeZone !== 'local' && timeZone !== 'UTC'\n\n    if (settings.namedTimeZoneImpl && isNamedTimeZone) {\n      this.namedTimeZoneImpl = new settings.namedTimeZoneImpl(timeZone)\n    }\n\n    this.canComputeOffset = Boolean(!isNamedTimeZone || this.namedTimeZoneImpl)\n\n    this.calendarSystem = createCalendarSystem(settings.calendarSystem)\n    this.locale = settings.locale\n    this.weekDow = settings.locale.week.dow\n    this.weekDoy = settings.locale.week.doy\n\n    if (settings.weekNumberCalculation === 'ISO') {\n      this.weekDow = 1\n      this.weekDoy = 4\n    }\n\n    if (typeof settings.firstDay === 'number') {\n      this.weekDow = settings.firstDay\n    }\n\n    if (typeof settings.weekNumberCalculation === 'function') {\n      this.weekNumberFunc = settings.weekNumberCalculation\n    }\n\n    this.weekText = settings.weekText != null ? settings.weekText : settings.locale.options.weekText\n    this.weekTextLong = (settings.weekTextLong != null ? settings.weekTextLong : settings.locale.options.weekTextLong) || this.weekText\n\n    this.cmdFormatter = settings.cmdFormatter\n    this.defaultSeparator = settings.defaultSeparator\n  }\n\n  // Creating / Parsing\n\n  createMarker(input: DateInput): DateMarker {\n    let meta = this.createMarkerMeta(input)\n    if (meta === null) {\n      return null\n    }\n    return meta.marker\n  }\n\n  createNowMarker(): DateMarker {\n    if (this.canComputeOffset) {\n      return this.timestampToMarker(new Date().valueOf())\n    }\n    // if we can't compute the current date val for a timezone,\n    // better to give the current local date vals than UTC\n    return arrayToUtcDate(dateToLocalArray(new Date()))\n  }\n\n  createMarkerMeta(input: DateInput): DateMarkerMeta {\n    if (typeof input === 'string') {\n      return this.parse(input)\n    }\n\n    let marker = null\n\n    if (typeof input === 'number') {\n      marker = this.timestampToMarker(input)\n    } else if (input instanceof Date) {\n      input = input.valueOf()\n\n      if (!isNaN(input)) {\n        marker = this.timestampToMarker(input)\n      }\n    } else if (Array.isArray(input)) {\n      marker = arrayToUtcDate(input)\n    }\n\n    if (marker === null || !isValidDate(marker)) {\n      return null\n    }\n\n    return { marker, isTimeUnspecified: false, forcedTzo: null }\n  }\n\n  parse(s: string) {\n    let parts = parse(s)\n    if (parts === null) {\n      return null\n    }\n\n    let { marker } = parts\n    let forcedTzo = null\n\n    if (parts.timeZoneOffset !== null) {\n      if (this.canComputeOffset) {\n        marker = this.timestampToMarker(marker.valueOf() - parts.timeZoneOffset * 60 * 1000)\n      } else {\n        forcedTzo = parts.timeZoneOffset\n      }\n    }\n\n    return { marker, isTimeUnspecified: parts.isTimeUnspecified, forcedTzo }\n  }\n\n  // Accessors\n\n  getYear(marker: DateMarker): number {\n    return this.calendarSystem.getMarkerYear(marker)\n  }\n\n  getMonth(marker: DateMarker): number {\n    return this.calendarSystem.getMarkerMonth(marker)\n  }\n\n  // Adding / Subtracting\n\n  add(marker: DateMarker, dur: Duration): DateMarker {\n    let a = this.calendarSystem.markerToArray(marker)\n    a[0] += dur.years\n    a[1] += dur.months\n    a[2] += dur.days\n    a[6] += dur.milliseconds\n    return this.calendarSystem.arrayToMarker(a)\n  }\n\n  subtract(marker: DateMarker, dur: Duration): DateMarker {\n    let a = this.calendarSystem.markerToArray(marker)\n    a[0] -= dur.years\n    a[1] -= dur.months\n    a[2] -= dur.days\n    a[6] -= dur.milliseconds\n    return this.calendarSystem.arrayToMarker(a)\n  }\n\n  addYears(marker: DateMarker, n: number) {\n    let a = this.calendarSystem.markerToArray(marker)\n    a[0] += n\n    return this.calendarSystem.arrayToMarker(a)\n  }\n\n  addMonths(marker: DateMarker, n: number) {\n    let a = this.calendarSystem.markerToArray(marker)\n    a[1] += n\n    return this.calendarSystem.arrayToMarker(a)\n  }\n\n  // Diffing Whole Units\n\n  diffWholeYears(m0: DateMarker, m1: DateMarker): number {\n    let { calendarSystem } = this\n\n    if (\n      timeAsMs(m0) === timeAsMs(m1) &&\n      calendarSystem.getMarkerDay(m0) === calendarSystem.getMarkerDay(m1) &&\n      calendarSystem.getMarkerMonth(m0) === calendarSystem.getMarkerMonth(m1)\n    ) {\n      return calendarSystem.getMarkerYear(m1) - calendarSystem.getMarkerYear(m0)\n    }\n    return null\n  }\n\n  diffWholeMonths(m0: DateMarker, m1: DateMarker): number {\n    let { calendarSystem } = this\n\n    if (\n      timeAsMs(m0) === timeAsMs(m1) &&\n      calendarSystem.getMarkerDay(m0) === calendarSystem.getMarkerDay(m1)\n    ) {\n      return (calendarSystem.getMarkerMonth(m1) - calendarSystem.getMarkerMonth(m0)) +\n          (calendarSystem.getMarkerYear(m1) - calendarSystem.getMarkerYear(m0)) * 12\n    }\n    return null\n  }\n\n  // Range / Duration\n\n  greatestWholeUnit(m0: DateMarker, m1: DateMarker) {\n    let n = this.diffWholeYears(m0, m1)\n\n    if (n !== null) {\n      return { unit: 'year', value: n }\n    }\n\n    n = this.diffWholeMonths(m0, m1)\n\n    if (n !== null) {\n      return { unit: 'month', value: n }\n    }\n\n    n = diffWholeWeeks(m0, m1)\n\n    if (n !== null) {\n      return { unit: 'week', value: n }\n    }\n\n    n = diffWholeDays(m0, m1)\n\n    if (n !== null) {\n      return { unit: 'day', value: n }\n    }\n\n    n = diffHours(m0, m1)\n\n    if (isInt(n)) {\n      return { unit: 'hour', value: n }\n    }\n\n    n = diffMinutes(m0, m1)\n\n    if (isInt(n)) {\n      return { unit: 'minute', value: n }\n    }\n\n    n = diffSeconds(m0, m1)\n\n    if (isInt(n)) {\n      return { unit: 'second', value: n }\n    }\n\n    return { unit: 'millisecond', value: m1.valueOf() - m0.valueOf() }\n  }\n\n  countDurationsBetween(m0: DateMarker, m1: DateMarker, d: Duration) {\n    // TODO: can use greatestWholeUnit\n    let diff\n\n    if (d.years) {\n      diff = this.diffWholeYears(m0, m1)\n      if (diff !== null) {\n        return diff / asRoughYears(d)\n      }\n    }\n\n    if (d.months) {\n      diff = this.diffWholeMonths(m0, m1)\n      if (diff !== null) {\n        return diff / asRoughMonths(d)\n      }\n    }\n\n    if (d.days) {\n      diff = diffWholeDays(m0, m1)\n      if (diff !== null) {\n        return diff / asRoughDays(d)\n      }\n    }\n\n    return (m1.valueOf() - m0.valueOf()) / asRoughMs(d)\n  }\n\n  // Start-Of\n  // these DON'T return zoned-dates. only UTC start-of dates\n\n  startOf(m: DateMarker, unit: string) {\n    if (unit === 'year') {\n      return this.startOfYear(m)\n    }\n    if (unit === 'month') {\n      return this.startOfMonth(m)\n    }\n    if (unit === 'week') {\n      return this.startOfWeek(m)\n    }\n    if (unit === 'day') {\n      return startOfDay(m)\n    }\n    if (unit === 'hour') {\n      return startOfHour(m)\n    }\n    if (unit === 'minute') {\n      return startOfMinute(m)\n    }\n    if (unit === 'second') {\n      return startOfSecond(m)\n    }\n    return null\n  }\n\n  startOfYear(m: DateMarker): DateMarker {\n    return this.calendarSystem.arrayToMarker([\n      this.calendarSystem.getMarkerYear(m),\n    ])\n  }\n\n  startOfMonth(m: DateMarker): DateMarker {\n    return this.calendarSystem.arrayToMarker([\n      this.calendarSystem.getMarkerYear(m),\n      this.calendarSystem.getMarkerMonth(m),\n    ])\n  }\n\n  startOfWeek(m: DateMarker): DateMarker {\n    return this.calendarSystem.arrayToMarker([\n      this.calendarSystem.getMarkerYear(m),\n      this.calendarSystem.getMarkerMonth(m),\n      m.getUTCDate() - ((m.getUTCDay() - this.weekDow + 7) % 7),\n    ])\n  }\n\n  // Week Number\n\n  computeWeekNumber(marker: DateMarker): number {\n    if (this.weekNumberFunc) {\n      return this.weekNumberFunc(this.toDate(marker))\n    }\n    return weekOfYear(marker, this.weekDow, this.weekDoy)\n  }\n\n  // TODO: choke on timeZoneName: long\n  format(marker: DateMarker, formatter: DateFormatter, dateOptions: { forcedTzo?: number } = {}) {\n    return formatter.format(\n      {\n        marker,\n        timeZoneOffset: dateOptions.forcedTzo != null ?\n          dateOptions.forcedTzo :\n          this.offsetForMarker(marker),\n      },\n      this,\n    )\n  }\n\n  formatRange(\n    start: DateMarker,\n    end: DateMarker,\n    formatter: DateFormatter,\n    dateOptions: { forcedStartTzo?: number, forcedEndTzo?: number, isEndExclusive?: boolean, defaultSeparator?: string } = {},\n  ) {\n    if (dateOptions.isEndExclusive) {\n      end = addMs(end, -1)\n    }\n\n    return formatter.formatRange(\n      {\n        marker: start,\n        timeZoneOffset: dateOptions.forcedStartTzo != null ?\n          dateOptions.forcedStartTzo :\n          this.offsetForMarker(start),\n      },\n      {\n        marker: end,\n        timeZoneOffset: dateOptions.forcedEndTzo != null ?\n          dateOptions.forcedEndTzo :\n          this.offsetForMarker(end),\n      },\n      this,\n      dateOptions.defaultSeparator,\n    )\n  }\n\n  /*\n  DUMB: the omitTime arg is dumb. if we omit the time, we want to omit the timezone offset. and if we do that,\n  might as well use buildIsoString or some other util directly\n  */\n  formatIso(marker: DateMarker, extraOptions: any = {}) {\n    let timeZoneOffset = null\n\n    if (!extraOptions.omitTimeZoneOffset) {\n      if (extraOptions.forcedTzo != null) {\n        timeZoneOffset = extraOptions.forcedTzo\n      } else {\n        timeZoneOffset = this.offsetForMarker(marker)\n      }\n    }\n\n    return buildIsoString(marker, timeZoneOffset, extraOptions.omitTime)\n  }\n\n  // TimeZone\n\n  timestampToMarker(ms: number) {\n    if (this.timeZone === 'local') {\n      return arrayToUtcDate(dateToLocalArray(new Date(ms)))\n    } if (this.timeZone === 'UTC' || !this.namedTimeZoneImpl) {\n      return new Date(ms)\n    }\n    return arrayToUtcDate(this.namedTimeZoneImpl.timestampToArray(ms))\n  }\n\n  offsetForMarker(m: DateMarker) {\n    if (this.timeZone === 'local') {\n      return -arrayToLocalDate(dateToUtcArray(m)).getTimezoneOffset() // convert \"inverse\" offset to \"normal\" offset\n    } if (this.timeZone === 'UTC') {\n      return 0\n    } if (this.namedTimeZoneImpl) {\n      return this.namedTimeZoneImpl.offsetForArray(dateToUtcArray(m))\n    }\n    return null\n  }\n\n  // Conversion\n\n  toDate(m: DateMarker, forcedTzo?: number): Date {\n    if (this.timeZone === 'local') {\n      return arrayToLocalDate(dateToUtcArray(m))\n    }\n\n    if (this.timeZone === 'UTC') {\n      return new Date(m.valueOf()) // make sure it's a copy\n    }\n\n    if (!this.namedTimeZoneImpl) {\n      return new Date(m.valueOf() - (forcedTzo || 0))\n    }\n\n    return new Date(\n      m.valueOf() -\n        this.namedTimeZoneImpl.offsetForArray(dateToUtcArray(m)) * 1000 * 60, // convert minutes -> ms\n    )\n  }\n}\n","import { LocaleInput } from './datelib/locale'\n\nexport const globalLocales: LocaleInput[] = []\n","import { mergeProps } from '../util/object'\nimport { globalLocales } from '../global-locales' // weird to be importing this\nimport { CalendarOptions, CalendarOptionsRefined } from '../options'\n\nexport type LocaleCodeArg = string | string[]\nexport type LocaleSingularArg = LocaleCodeArg | LocaleInput\n\nexport interface Locale {\n  codeArg: LocaleCodeArg\n  codes: string[]\n  week: { dow: number, doy: number }\n  simpleNumberFormat: Intl.NumberFormat\n  options: CalendarOptionsRefined\n}\n\nexport interface LocaleInput extends CalendarOptions {\n  code: string\n}\n\nexport type LocaleInputMap = { [code: string]: LocaleInput }\n\nexport interface RawLocaleInfo {\n  map: LocaleInputMap\n  defaultCode: string\n}\n\nconst MINIMAL_RAW_EN_LOCALE = {\n  code: 'en',\n  week: {\n    dow: 0, // Sunday is the first day of the week\n    doy: 4, // 4 days need to be within the year to be considered the first week\n  },\n  direction: 'ltr' as ('ltr' | 'rtl'), // TODO: make a real type for this\n  buttonText: {\n    prev: 'prev',\n    next: 'next',\n    prevYear: 'prev year',\n    nextYear: 'next year',\n    year: 'year',\n    today: 'today',\n    month: 'month',\n    week: 'week',\n    day: 'day',\n    list: 'list',\n  },\n  weekText: 'W',\n  weekTextLong: 'Week',\n  closeHint: 'Close',\n  timeHint: 'Time',\n  eventHint: 'Event',\n  allDayText: 'all-day',\n  moreLinkText: 'more',\n  noEventsText: 'No events to display',\n}\n\nconst RAW_EN_LOCALE = {\n  ...MINIMAL_RAW_EN_LOCALE,\n  // Includes things we don't want other locales to inherit,\n  // things that derive from other translatable strings.\n  buttonHints: {\n    prev: 'Previous $0',\n    next: 'Next $0',\n    today(buttonText, unit) {\n      return (unit === 'day')\n        ? 'Today'\n        : `This ${buttonText}`\n    },\n  },\n  viewHint: '$0 view',\n  navLinkHint: 'Go to $0',\n  moreLinkHint(eventCnt: number) {\n    return `Show ${eventCnt} more event${eventCnt === 1 ? '' : 's'}`\n  },\n}\n\nexport function organizeRawLocales(explicitRawLocales: LocaleInput[]): RawLocaleInfo {\n  let defaultCode = explicitRawLocales.length > 0 ? explicitRawLocales[0].code : 'en'\n  let allRawLocales = globalLocales.concat(explicitRawLocales)\n  let rawLocaleMap: LocaleInputMap = {\n    en: RAW_EN_LOCALE,\n  }\n\n  for (let rawLocale of allRawLocales) {\n    rawLocaleMap[rawLocale.code] = rawLocale\n  }\n\n  return {\n    map: rawLocaleMap,\n    defaultCode,\n  }\n}\n\nexport function buildLocale(inputSingular: LocaleSingularArg, available: LocaleInputMap) {\n  if (typeof inputSingular === 'object' && !Array.isArray(inputSingular)) {\n    return parseLocale(\n      inputSingular.code,\n      [inputSingular.code],\n      inputSingular,\n    )\n  }\n  return queryLocale(inputSingular, available)\n}\n\nfunction queryLocale(codeArg: LocaleCodeArg, available: LocaleInputMap): Locale {\n  let codes = [].concat(codeArg || []) // will convert to array\n  let raw = queryRawLocale(codes, available) || RAW_EN_LOCALE\n\n  return parseLocale(codeArg, codes, raw)\n}\n\nfunction queryRawLocale(codes: string[], available: LocaleInputMap): LocaleInput {\n  for (let i = 0; i < codes.length; i += 1) {\n    let parts = codes[i].toLocaleLowerCase().split('-')\n\n    for (let j = parts.length; j > 0; j -= 1) {\n      let simpleId = parts.slice(0, j).join('-')\n\n      if (available[simpleId]) {\n        return available[simpleId]\n      }\n    }\n  }\n  return null\n}\n\nfunction parseLocale(codeArg: LocaleCodeArg, codes: string[], raw: LocaleInput): Locale {\n  let merged = mergeProps([MINIMAL_RAW_EN_LOCALE, raw], ['buttonText'])\n\n  delete merged.code // don't want this part of the options\n  let { week } = merged\n  delete merged.week\n\n  return {\n    codeArg,\n    codes,\n    week,\n    simpleNumberFormat: new Intl.NumberFormat(codeArg),\n    options: merged,\n  }\n}\n","import { EventInput } from './event-parse'\nimport { EventStore, parseEvents } from './event-store'\nimport { CalendarContext } from '../CalendarContext'\n\n/*\nUtils for converting raw business hour input into an EventStore,\nfor both rendering and the constraint system.\n*/\n\nexport type BusinessHoursInput = boolean | EventInput | EventInput[]\n\nconst DEF_DEFAULTS = {\n  startTime: '09:00',\n  endTime: '17:00',\n  daysOfWeek: [1, 2, 3, 4, 5], // monday - friday\n  display: 'inverse-background',\n  classNames: 'fc-non-business',\n  groupId: '_businessHours', // so multiple defs get grouped\n}\n\n/*\nTODO: pass around as EventDefHash!!!\n*/\nexport function parseBusinessHours(input: BusinessHoursInput, context: CalendarContext): EventStore {\n  return parseEvents(\n    refineInputs(input),\n    null,\n    context,\n  )\n}\n\nfunction refineInputs(input: BusinessHoursInput) {\n  let rawDefs\n\n  if (input === true) {\n    rawDefs = [{}] // will get DEF_DEFAULTS verbatim\n  } else if (Array.isArray(input)) {\n    // if specifying an array, every sub-definition NEEDS a day-of-week\n    rawDefs = input.filter((rawDef) => rawDef.daysOfWeek)\n  } else if (typeof input === 'object' && input) { // non-null object\n    rawDefs = [input]\n  } else { // is probably false\n    rawDefs = []\n  }\n\n  rawDefs = rawDefs.map((rawDef) => ({ ...DEF_DEFAULTS, ...rawDef }))\n\n  return rawDefs\n}\n","let canVGrowWithinCell: boolean\n\nexport function getCanVGrowWithinCell() {\n  if (canVGrowWithinCell == null) {\n    canVGrowWithinCell = computeCanVGrowWithinCell()\n  }\n  return canVGrowWithinCell\n}\n\nfunction computeCanVGrowWithinCell() {\n  // for SSR, because this function is call immediately at top-level\n  // TODO: just make this logic execute top-level, immediately, instead of doing lazily\n  if (typeof document === 'undefined') {\n    return true\n  }\n\n  let el = document.createElement('div')\n  el.style.position = 'absolute'\n  el.style.top = '0px'\n  el.style.left = '0px'\n  el.innerHTML = '<table><tr><td><div></div></td></tr></table>'\n  el.querySelector('table').style.height = '100px'\n  el.querySelector('div').style.height = '100%'\n\n  document.body.appendChild(el)\n\n  let div = el.querySelector('div')\n  let possible = div.offsetHeight > 0\n  document.body.removeChild(el)\n  return possible\n}\n","export interface Point {\n  left: number\n  top: number\n}\n\nexport interface Rect {\n  left: number\n  right: number\n  top: number\n  bottom: number\n}\n\nexport function pointInsideRect(point: Point, rect: Rect): boolean {\n  return point.left >= rect.left &&\n    point.left < rect.right &&\n    point.top >= rect.top &&\n    point.top < rect.bottom\n}\n\n// Returns a new rectangle that is the intersection of the two rectangles. If they don't intersect, returns false\nexport function intersectRects(rect1: Rect, rect2: Rect): Rect | false {\n  let res = {\n    left: Math.max(rect1.left, rect2.left),\n    right: Math.min(rect1.right, rect2.right),\n    top: Math.max(rect1.top, rect2.top),\n    bottom: Math.min(rect1.bottom, rect2.bottom),\n  }\n\n  if (res.left < res.right && res.top < res.bottom) {\n    return res\n  }\n\n  return false\n}\n\nexport function translateRect(rect: Rect, deltaX: number, deltaY: number): Rect {\n  return {\n    left: rect.left + deltaX,\n    right: rect.right + deltaX,\n    top: rect.top + deltaY,\n    bottom: rect.bottom + deltaY,\n  }\n}\n\n// Returns a new point that will have been moved to reside within the given rectangle\nexport function constrainPoint(point: Point, rect: Rect): Point {\n  return {\n    left: Math.min(Math.max(point.left, rect.left), rect.right),\n    top: Math.min(Math.max(point.top, rect.top), rect.bottom),\n  }\n}\n\n// Returns a point that is the center of the given rectangle\nexport function getRectCenter(rect: Rect): Point {\n  return {\n    left: (rect.left + rect.right) / 2,\n    top: (rect.top + rect.bottom) / 2,\n  }\n}\n\n// Subtracts point2's coordinates from point1's coordinates, returning a delta\nexport function diffPoints(point1: Point, point2: Point): Point {\n  return {\n    left: point1.left - point2.left,\n    top: point1.top - point2.top,\n  }\n}\n","import { __assign } from 'tslib'\nimport { EventStore, createEmptyEventStore } from '../structs/event-store'\nimport { EventDef } from '../structs/event-def'\nimport { EventInteractionState } from '../interactions/event-interaction-state'\nimport { mapHash } from '../util/object'\nimport { memoize } from '../util/memoize'\nimport { EventUiHash, EventUi, combineEventUis } from './event-ui'\nimport { DateSpan } from '../structs/date-span'\n\nexport interface SplittableProps {\n  businessHours: EventStore | null // is this really allowed to be null?\n  dateSelection: DateSpan | null\n  eventStore: EventStore\n  eventUiBases: EventUiHash\n  eventSelection: string\n  eventDrag: EventInteractionState | null\n  eventResize: EventInteractionState | null\n}\n\nconst EMPTY_EVENT_STORE = createEmptyEventStore() // for purecomponents. TODO: keep elsewhere\n\nexport abstract class Splitter<PropsType extends SplittableProps = SplittableProps> {\n  private getKeysForEventDefs = memoize(this._getKeysForEventDefs)\n  private splitDateSelection = memoize(this._splitDateSpan)\n  private splitEventStore = memoize(this._splitEventStore)\n  private splitIndividualUi = memoize(this._splitIndividualUi)\n  private splitEventDrag = memoize(this._splitInteraction)\n  private splitEventResize = memoize(this._splitInteraction)\n  private eventUiBuilders = {} // TODO: typescript protection\n\n  abstract getKeyInfo(props: PropsType): { [key: string]: { ui?: EventUi, businessHours?: EventStore } }\n  abstract getKeysForDateSpan(dateSpan: DateSpan): string[]\n  abstract getKeysForEventDef(eventDef: EventDef): string[]\n\n  splitProps(props: PropsType): { [key: string]: SplittableProps } {\n    let keyInfos = this.getKeyInfo(props)\n    let defKeys = this.getKeysForEventDefs(props.eventStore)\n    let dateSelections = this.splitDateSelection(props.dateSelection)\n    let individualUi = this.splitIndividualUi(props.eventUiBases, defKeys) // the individual *bases*\n    let eventStores = this.splitEventStore(props.eventStore, defKeys)\n    let eventDrags = this.splitEventDrag(props.eventDrag)\n    let eventResizes = this.splitEventResize(props.eventResize)\n    let splitProps: { [key: string]: SplittableProps } = {}\n\n    this.eventUiBuilders = mapHash(keyInfos, (info, key) => this.eventUiBuilders[key] || memoize(buildEventUiForKey))\n\n    for (let key in keyInfos) {\n      let keyInfo = keyInfos[key]\n      let eventStore = eventStores[key] || EMPTY_EVENT_STORE\n      let buildEventUi = this.eventUiBuilders[key]\n\n      splitProps[key] = {\n        businessHours: keyInfo.businessHours || props.businessHours,\n        dateSelection: dateSelections[key] || null,\n        eventStore,\n        eventUiBases: buildEventUi(props.eventUiBases[''], keyInfo.ui, individualUi[key]),\n        eventSelection: eventStore.instances[props.eventSelection] ? props.eventSelection : '',\n        eventDrag: eventDrags[key] || null,\n        eventResize: eventResizes[key] || null,\n      }\n    }\n\n    return splitProps\n  }\n\n  private _splitDateSpan(dateSpan: DateSpan | null) {\n    let dateSpans = {}\n\n    if (dateSpan) {\n      let keys = this.getKeysForDateSpan(dateSpan)\n\n      for (let key of keys) {\n        dateSpans[key] = dateSpan\n      }\n    }\n\n    return dateSpans\n  }\n\n  private _getKeysForEventDefs(eventStore: EventStore) {\n    return mapHash(eventStore.defs, (eventDef: EventDef) => this.getKeysForEventDef(eventDef))\n  }\n\n  private _splitEventStore(eventStore: EventStore, defKeys): { [key: string]: EventStore } {\n    let { defs, instances } = eventStore\n    let splitStores = {}\n\n    for (let defId in defs) {\n      for (let key of defKeys[defId]) {\n        if (!splitStores[key]) {\n          splitStores[key] = createEmptyEventStore()\n        }\n\n        splitStores[key].defs[defId] = defs[defId]\n      }\n    }\n\n    for (let instanceId in instances) {\n      let instance = instances[instanceId]\n\n      for (let key of defKeys[instance.defId]) {\n        if (splitStores[key]) { // must have already been created\n          splitStores[key].instances[instanceId] = instance\n        }\n      }\n    }\n\n    return splitStores\n  }\n\n  private _splitIndividualUi(eventUiBases: EventUiHash, defKeys): { [key: string]: EventUiHash } {\n    let splitHashes: { [key: string]: EventUiHash } = {}\n\n    for (let defId in eventUiBases) {\n      if (defId) { // not the '' key\n        for (let key of defKeys[defId]) {\n          if (!splitHashes[key]) {\n            splitHashes[key] = {}\n          }\n\n          splitHashes[key][defId] = eventUiBases[defId]\n        }\n      }\n    }\n\n    return splitHashes\n  }\n\n  private _splitInteraction(interaction: EventInteractionState | null): { [key: string]: EventInteractionState } {\n    let splitStates: { [key: string]: EventInteractionState } = {}\n\n    if (interaction) {\n      let affectedStores = this._splitEventStore(\n        interaction.affectedEvents,\n        this._getKeysForEventDefs(interaction.affectedEvents), // can't use cached. might be events from other calendar\n      )\n\n      // can't rely on defKeys because event data is mutated\n      let mutatedKeysByDefId = this._getKeysForEventDefs(interaction.mutatedEvents)\n      let mutatedStores = this._splitEventStore(interaction.mutatedEvents, mutatedKeysByDefId)\n\n      let populate = (key) => {\n        if (!splitStates[key]) {\n          splitStates[key] = {\n            affectedEvents: affectedStores[key] || EMPTY_EVENT_STORE,\n            mutatedEvents: mutatedStores[key] || EMPTY_EVENT_STORE,\n            isEvent: interaction.isEvent,\n          }\n        }\n      }\n\n      for (let key in affectedStores) {\n        populate(key)\n      }\n\n      for (let key in mutatedStores) {\n        populate(key)\n      }\n    }\n\n    return splitStates\n  }\n}\n\nfunction buildEventUiForKey(allUi: EventUi | null, eventUiForKey: EventUi | null, individualUi: EventUiHash | null) {\n  let baseParts = []\n\n  if (allUi) {\n    baseParts.push(allUi)\n  }\n\n  if (eventUiForKey) {\n    baseParts.push(eventUiForKey)\n  }\n\n  let stuff = {\n    '': combineEventUis(baseParts),\n  }\n\n  if (individualUi) {\n    __assign(stuff, individualUi)\n  }\n\n  return stuff\n}\n","import { DateMarker, DAY_IDS } from '../datelib/marker'\nimport { rangeContainsMarker, DateRange } from '../datelib/date-range'\nimport { DateProfile } from '../DateProfileGenerator'\nimport { Theme } from '../theme/Theme'\n\nexport interface DateMeta {\n  dow: number\n  isDisabled: boolean\n  isOther: boolean // like, is it in the non-current \"other\" month\n  isToday: boolean\n  isPast: boolean\n  isFuture: boolean\n}\n\nexport function getDateMeta(date: DateMarker, todayRange?: DateRange, nowDate?: DateMarker, dateProfile?: DateProfile): DateMeta {\n  return {\n    dow: date.getUTCDay(),\n    isDisabled: Boolean(dateProfile && !rangeContainsMarker(dateProfile.activeRange, date)),\n    isOther: Boolean(dateProfile && !rangeContainsMarker(dateProfile.currentRange, date)),\n    isToday: Boolean(todayRange && rangeContainsMarker(todayRange, date)),\n    isPast: Boolean(nowDate ? (date < nowDate) : todayRange ? (date < todayRange.start) : false),\n    isFuture: Boolean(nowDate ? (date > nowDate) : todayRange ? (date >= todayRange.end) : false),\n  }\n}\n\nexport function getDayClassNames(meta: DateMeta, theme: Theme) {\n  let classNames: string[] = [\n    'fc-day',\n    `fc-day-${DAY_IDS[meta.dow]}`,\n  ]\n\n  if (meta.isDisabled) {\n    classNames.push('fc-day-disabled')\n  } else {\n    if (meta.isToday) {\n      classNames.push('fc-day-today')\n      classNames.push(theme.getClass('today'))\n    }\n\n    if (meta.isPast) {\n      classNames.push('fc-day-past')\n    }\n\n    if (meta.isFuture) {\n      classNames.push('fc-day-future')\n    }\n\n    if (meta.isOther) {\n      classNames.push('fc-day-other')\n    }\n  }\n\n  return classNames\n}\n\nexport function getSlotClassNames(meta: DateMeta, theme: Theme) {\n  let classNames: string[] = [\n    'fc-slot',\n    `fc-slot-${DAY_IDS[meta.dow]}`,\n  ]\n\n  if (meta.isDisabled) {\n    classNames.push('fc-slot-disabled')\n  } else {\n    if (meta.isToday) {\n      classNames.push('fc-slot-today')\n      classNames.push(theme.getClass('today'))\n    }\n\n    if (meta.isPast) {\n      classNames.push('fc-slot-past')\n    }\n\n    if (meta.isFuture) {\n      classNames.push('fc-slot-future')\n    }\n  }\n\n  return classNames\n}\n","import { createFormatter } from '../datelib/formatting'\nimport { DateMarker } from '../datelib/marker'\nimport { createAriaClickAttrs } from '../util/dom-event'\nimport { formatWithOrdinals } from '../util/misc'\nimport { ViewContext } from '../ViewContext'\n\nconst DAY_FORMAT = createFormatter({ year: 'numeric', month: 'long', day: 'numeric' })\nconst WEEK_FORMAT = createFormatter({ week: 'long' })\n\nexport function buildNavLinkAttrs(\n  context: ViewContext,\n  dateMarker: DateMarker,\n  viewType = 'day',\n  isTabbable = true,\n) {\n  const { dateEnv, options, calendarApi } = context\n  let dateStr = dateEnv.format(dateMarker, viewType === 'week' ? WEEK_FORMAT : DAY_FORMAT)\n\n  if (options.navLinks) {\n    let zonedDate = dateEnv.toDate(dateMarker)\n\n    const handleInteraction = (ev: UIEvent) => {\n      let customAction =\n        viewType === 'day' ? options.navLinkDayClick :\n          viewType === 'week' ? options.navLinkWeekClick : null\n\n      if (typeof customAction === 'function') {\n        customAction.call(calendarApi, dateEnv.toDate(dateMarker), ev)\n      } else {\n        if (typeof customAction === 'string') {\n          viewType = customAction\n        }\n        calendarApi.zoomTo(dateMarker, viewType)\n      }\n    }\n\n    return {\n      title: formatWithOrdinals(options.navLinkHint, [dateStr, zonedDate], dateStr),\n      'data-navlink': '', // for legacy selectors. TODO: use className?\n      ...(isTabbable\n        ? createAriaClickAttrs(handleInteraction)\n        : { onClick: handleInteraction }\n      ),\n    }\n  }\n\n  return { 'aria-label': dateStr }\n}\n","import { removeElement, applyStyle } from './dom-manip'\n\nlet _isRtlScrollbarOnLeft: boolean | null = null\n\nexport function getIsRtlScrollbarOnLeft() { // responsible for caching the computation\n  if (_isRtlScrollbarOnLeft === null) {\n    _isRtlScrollbarOnLeft = computeIsRtlScrollbarOnLeft()\n  }\n  return _isRtlScrollbarOnLeft\n}\n\nfunction computeIsRtlScrollbarOnLeft() { // creates an offscreen test element, then removes it\n  let outerEl = document.createElement('div')\n  applyStyle(outerEl, {\n    position: 'absolute',\n    top: -1000,\n    left: 0,\n    border: 0,\n    padding: 0,\n    overflow: 'scroll',\n    direction: 'rtl',\n  })\n  outerEl.innerHTML = '<div></div>'\n\n  document.body.appendChild(outerEl)\n  let innerEl = outerEl.firstChild as HTMLElement\n  let res = innerEl.getBoundingClientRect().left > outerEl.getBoundingClientRect().left\n\n  removeElement(outerEl)\n  return res\n}\n","export interface ScrollbarWidths {\n  x: number\n  y: number // TODO: rename to vertical. less confusing when dealing with width/height verbage\n}\n\nlet _scrollbarWidths: ScrollbarWidths | undefined\n\nexport function getScrollbarWidths() { // TODO: way to force recompute?\n  if (!_scrollbarWidths) {\n    _scrollbarWidths = computeScrollbarWidths()\n  }\n\n  return _scrollbarWidths\n}\n\nfunction computeScrollbarWidths(): ScrollbarWidths {\n  let el = document.createElement('div')\n  el.style.overflow = 'scroll'\n  el.style.position = 'absolute'\n  el.style.top = '-9999px'\n  el.style.left = '-9999px'\n  document.body.appendChild(el)\n  let res = computeScrollbarWidthsForEl(el)\n  document.body.removeChild(el)\n  return res\n}\n\n// WARNING: will include border\nexport function computeScrollbarWidthsForEl(el: HTMLElement): ScrollbarWidths {\n  return {\n    x: el.offsetHeight - el.clientHeight,\n    y: el.offsetWidth - el.clientWidth,\n  }\n}\n","import { intersectRects, Rect } from './geom'\nimport { getIsRtlScrollbarOnLeft } from './scrollbar-side'\nimport { computeScrollbarWidthsForEl } from './scrollbar-width'\n\nexport interface EdgeInfo {\n  borderLeft: number\n  borderRight: number\n  borderTop: number\n  borderBottom: number\n  scrollbarLeft: number\n  scrollbarRight: number\n  scrollbarBottom: number\n  paddingLeft?: number\n  paddingRight?: number\n  paddingTop?: number\n  paddingBottom?: number\n}\n\nexport function computeEdges(el: HTMLElement, getPadding = false): EdgeInfo { // cache somehow?\n  let computedStyle = window.getComputedStyle(el)\n  let borderLeft = parseInt(computedStyle.borderLeftWidth, 10) || 0\n  let borderRight = parseInt(computedStyle.borderRightWidth, 10) || 0\n  let borderTop = parseInt(computedStyle.borderTopWidth, 10) || 0\n  let borderBottom = parseInt(computedStyle.borderBottomWidth, 10) || 0\n  let badScrollbarWidths = computeScrollbarWidthsForEl(el) // includes border!\n  let scrollbarLeftRight = badScrollbarWidths.y - borderLeft - borderRight\n  let scrollbarBottom = badScrollbarWidths.x - borderTop - borderBottom\n\n  let res: EdgeInfo = {\n    borderLeft,\n    borderRight,\n    borderTop,\n    borderBottom,\n    scrollbarBottom,\n    scrollbarLeft: 0,\n    scrollbarRight: 0,\n  }\n\n  if (getIsRtlScrollbarOnLeft() && computedStyle.direction === 'rtl') { // is the scrollbar on the left side?\n    res.scrollbarLeft = scrollbarLeftRight\n  } else {\n    res.scrollbarRight = scrollbarLeftRight\n  }\n\n  if (getPadding) {\n    res.paddingLeft = parseInt(computedStyle.paddingLeft, 10) || 0\n    res.paddingRight = parseInt(computedStyle.paddingRight, 10) || 0\n    res.paddingTop = parseInt(computedStyle.paddingTop, 10) || 0\n    res.paddingBottom = parseInt(computedStyle.paddingBottom, 10) || 0\n  }\n\n  return res\n}\n\nexport function computeInnerRect(el, goWithinPadding = false, doFromWindowViewport?: boolean) {\n  let outerRect = doFromWindowViewport ? el.getBoundingClientRect() : computeRect(el)\n  let edges = computeEdges(el, goWithinPadding)\n  let res = {\n    left: outerRect.left + edges.borderLeft + edges.scrollbarLeft,\n    right: outerRect.right - edges.borderRight - edges.scrollbarRight,\n    top: outerRect.top + edges.borderTop,\n    bottom: outerRect.bottom - edges.borderBottom - edges.scrollbarBottom,\n  }\n\n  if (goWithinPadding) {\n    res.left += edges.paddingLeft\n    res.right -= edges.paddingRight\n    res.top += edges.paddingTop\n    res.bottom -= edges.paddingBottom\n  }\n\n  return res\n}\n\nexport function computeRect(el): Rect {\n  let rect = el.getBoundingClientRect()\n\n  return {\n    left: rect.left + window.pageXOffset,\n    top: rect.top + window.pageYOffset,\n    right: rect.right + window.pageXOffset,\n    bottom: rect.bottom + window.pageYOffset,\n  }\n}\n\nexport function computeClippedClientRect(el: HTMLElement): Rect | null {\n  let clippingParents = getClippingParents(el)\n  let rect: Rect = el.getBoundingClientRect()\n\n  for (let clippingParent of clippingParents) {\n    let intersection = intersectRects(rect, clippingParent.getBoundingClientRect())\n    if (intersection) {\n      rect = intersection\n    } else {\n      return null\n    }\n  }\n\n  return rect\n}\n\nexport function computeHeightAndMargins(el: HTMLElement) {\n  return el.getBoundingClientRect().height + computeVMargins(el)\n}\n\nexport function computeVMargins(el: HTMLElement) {\n  let computed = window.getComputedStyle(el)\n\n  return parseInt(computed.marginTop, 10) +\n    parseInt(computed.marginBottom, 10)\n}\n\n// does not return window\nexport function getClippingParents(el: HTMLElement): HTMLElement[] {\n  let parents: HTMLElement[] = []\n\n  while (el instanceof HTMLElement) { // will stop when gets to document or null\n    let computedStyle = window.getComputedStyle(el)\n\n    if (computedStyle.position === 'fixed') {\n      break\n    }\n\n    if ((/(auto|scroll)/).test(computedStyle.overflow + computedStyle.overflowY + computedStyle.overflowX)) {\n      parents.push(el)\n    }\n\n    el = el.parentNode as HTMLElement\n  }\n\n  return parents\n}\n","export interface HandlerFuncTypeHash {\n  [eventName: string]: (...args: any[]) => any // with all properties required\n}\n\nexport class Emitter<HandlerFuncs extends HandlerFuncTypeHash> {\n  private handlers: { [Prop in keyof HandlerFuncs]?: HandlerFuncs[Prop][] } = {}\n\n  private options: Partial<HandlerFuncs>\n\n  private thisContext: any = null\n\n  setThisContext(thisContext) {\n    this.thisContext = thisContext\n  }\n\n  setOptions(options: Partial<HandlerFuncs>) {\n    this.options = options\n  }\n\n  on<Prop extends keyof HandlerFuncs>(type: Prop, handler: HandlerFuncs[Prop]) {\n    addToHash(this.handlers, type, handler)\n  }\n\n  off<Prop extends keyof HandlerFuncs>(type: Prop, handler?: HandlerFuncs[Prop]) {\n    removeFromHash(this.handlers, type, handler)\n  }\n\n  trigger<Prop extends keyof HandlerFuncs>(type: Prop, ...args: Parameters<HandlerFuncs[Prop]>) {\n    let attachedHandlers = this.handlers[type] || []\n    let optionHandler = this.options && this.options[type]\n    let handlers = [].concat(optionHandler || [], attachedHandlers)\n\n    for (let handler of handlers) {\n      handler.apply(this.thisContext, args)\n    }\n  }\n\n  hasHandlers(type: keyof HandlerFuncs): boolean {\n    return Boolean(\n      (this.handlers[type] && this.handlers[type].length) ||\n      (this.options && this.options[type]),\n    )\n  }\n}\n\nfunction addToHash(hash, type, handler) {\n  (hash[type] || (hash[type] = []))\n    .push(handler)\n}\n\nfunction removeFromHash(hash, type, handler?) {\n  if (handler) {\n    if (hash[type]) {\n      hash[type] = hash[type].filter((func) => func !== handler)\n    }\n  } else {\n    delete hash[type] // remove all handler funcs for this type\n  }\n}\n","/*\nRecords offset information for a set of elements, relative to an origin element.\nCan record the left/right OR the top/bottom OR both.\nProvides methods for querying the cache by position.\n*/\nexport class PositionCache {\n  els: HTMLElement[] // assumed to be siblings\n  originClientRect: ClientRect\n\n  // arrays of coordinates (from topleft of originEl)\n  // caller can access these directly\n  lefts: any\n  rights: any\n  tops: any\n  bottoms: any\n\n  constructor(originEl: HTMLElement, els: HTMLElement[], isHorizontal: boolean, isVertical: boolean) {\n    this.els = els\n\n    let originClientRect = this.originClientRect = originEl.getBoundingClientRect() // relative to viewport top-left\n\n    if (isHorizontal) {\n      this.buildElHorizontals(originClientRect.left)\n    }\n\n    if (isVertical) {\n      this.buildElVerticals(originClientRect.top)\n    }\n  }\n\n  // Populates the left/right internal coordinate arrays\n  buildElHorizontals(originClientLeft: number) {\n    let lefts = []\n    let rights = []\n\n    for (let el of this.els) {\n      let rect = el.getBoundingClientRect()\n      lefts.push(rect.left - originClientLeft)\n      rights.push(rect.right - originClientLeft)\n    }\n\n    this.lefts = lefts\n    this.rights = rights\n  }\n\n  // Populates the top/bottom internal coordinate arrays\n  buildElVerticals(originClientTop: number) {\n    let tops = []\n    let bottoms = []\n\n    for (let el of this.els) {\n      let rect = el.getBoundingClientRect()\n      tops.push(rect.top - originClientTop)\n      bottoms.push(rect.bottom - originClientTop)\n    }\n\n    this.tops = tops\n    this.bottoms = bottoms\n  }\n\n  // Given a left offset (from document left), returns the index of the el that it horizontally intersects.\n  // If no intersection is made, returns undefined.\n  leftToIndex(leftPosition: number) {\n    let { lefts, rights } = this\n    let len = lefts.length\n    let i\n\n    for (i = 0; i < len; i += 1) {\n      if (leftPosition >= lefts[i] && leftPosition < rights[i]) {\n        return i\n      }\n    }\n\n    return undefined // TODO: better\n  }\n\n  // Given a top offset (from document top), returns the index of the el that it vertically intersects.\n  // If no intersection is made, returns undefined.\n  topToIndex(topPosition: number) {\n    let { tops, bottoms } = this\n    let len = tops.length\n    let i\n\n    for (i = 0; i < len; i += 1) {\n      if (topPosition >= tops[i] && topPosition < bottoms[i]) {\n        return i\n      }\n    }\n\n    return undefined // TODO: better\n  }\n\n  // Gets the width of the element at the given index\n  getWidth(leftIndex: number) {\n    return this.rights[leftIndex] - this.lefts[leftIndex]\n  }\n\n  // Gets the height of the element at the given index\n  getHeight(topIndex: number) {\n    return this.bottoms[topIndex] - this.tops[topIndex]\n  }\n}\n","/* eslint max-classes-per-file: \"off\" */\n\n/*\nAn object for getting/setting scroll-related information for an element.\nInternally, this is done very differently for window versus DOM element,\nso this object serves as a common interface.\n*/\nexport abstract class ScrollController {\n  abstract getScrollTop(): number\n  abstract getScrollLeft(): number\n  abstract setScrollTop(top: number): void\n  abstract setScrollLeft(left: number): void\n  abstract getClientWidth(): number\n  abstract getClientHeight(): number\n  abstract getScrollWidth(): number\n  abstract getScrollHeight(): number\n\n  getMaxScrollTop() {\n    return this.getScrollHeight() - this.getClientHeight()\n  }\n\n  getMaxScrollLeft() {\n    return this.getScrollWidth() - this.getClientWidth()\n  }\n\n  canScrollVertically() {\n    return this.getMaxScrollTop() > 0\n  }\n\n  canScrollHorizontally() {\n    return this.getMaxScrollLeft() > 0\n  }\n\n  canScrollUp() {\n    return this.getScrollTop() > 0\n  }\n\n  canScrollDown() {\n    return this.getScrollTop() < this.getMaxScrollTop()\n  }\n\n  canScrollLeft() {\n    return this.getScrollLeft() > 0\n  }\n\n  canScrollRight() {\n    return this.getScrollLeft() < this.getMaxScrollLeft()\n  }\n}\n\nexport class ElementScrollController extends ScrollController {\n  el: HTMLElement\n\n  constructor(el: HTMLElement) {\n    super()\n    this.el = el\n  }\n\n  getScrollTop() {\n    return this.el.scrollTop\n  }\n\n  getScrollLeft() {\n    return this.el.scrollLeft\n  }\n\n  setScrollTop(top: number) {\n    this.el.scrollTop = top\n  }\n\n  setScrollLeft(left: number) {\n    this.el.scrollLeft = left\n  }\n\n  getScrollWidth() {\n    return this.el.scrollWidth\n  }\n\n  getScrollHeight() {\n    return this.el.scrollHeight\n  }\n\n  getClientHeight() {\n    return this.el.clientHeight\n  }\n\n  getClientWidth() {\n    return this.el.clientWidth\n  }\n}\n\nexport class WindowScrollController extends ScrollController {\n  getScrollTop() {\n    return window.pageYOffset\n  }\n\n  getScrollLeft() {\n    return window.pageXOffset\n  }\n\n  setScrollTop(n: number) {\n    window.scroll(window.pageXOffset, n)\n  }\n\n  setScrollLeft(n: number) {\n    window.scroll(n, window.pageYOffset)\n  }\n\n  getScrollWidth() {\n    return document.documentElement.scrollWidth\n  }\n\n  getScrollHeight() {\n    return document.documentElement.scrollHeight\n  }\n\n  getClientHeight() {\n    return document.documentElement.clientHeight\n  }\n\n  getClientWidth() {\n    return document.documentElement.clientWidth\n  }\n}\n","import { CalendarOptionsRefined } from '../options'\n\nexport class Theme {\n  // settings. default values are set after the class\n  classes: any\n  iconClasses: any\n  rtlIconClasses: any\n  baseIconClass: string // className that ALL icon elements for this theme should have\n  iconOverrideOption: any // the name of the setting to use for icons. the subclass must set this.\n  iconOverrideCustomButtonOption: any // the name of the setting, *within* each customButtons object, to use for icons\n  iconOverridePrefix: string\n\n  constructor(calendarOptions: CalendarOptionsRefined) {\n    if (this.iconOverrideOption) {\n      this.setIconOverride(\n        calendarOptions[this.iconOverrideOption],\n      )\n    }\n  }\n\n  setIconOverride(iconOverrideHash) {\n    let iconClassesCopy\n    let buttonName\n\n    if (typeof iconOverrideHash === 'object' && iconOverrideHash) { // non-null object\n      iconClassesCopy = { ...this.iconClasses }\n\n      for (buttonName in iconOverrideHash) {\n        iconClassesCopy[buttonName] = this.applyIconOverridePrefix(\n          iconOverrideHash[buttonName],\n        )\n      }\n\n      this.iconClasses = iconClassesCopy\n    } else if (iconOverrideHash === false) {\n      this.iconClasses = {}\n    }\n  }\n\n  applyIconOverridePrefix(className) {\n    let prefix = this.iconOverridePrefix\n\n    if (prefix && className.indexOf(prefix) !== 0) { // if not already present\n      className = prefix + className\n    }\n\n    return className\n  }\n\n  getClass(key) {\n    return this.classes[key] || ''\n  }\n\n  getIconClass(buttonName, isRtl?: boolean) {\n    let className\n\n    if (isRtl && this.rtlIconClasses) {\n      className = this.rtlIconClasses[buttonName] || this.iconClasses[buttonName]\n    } else {\n      className = this.iconClasses[buttonName]\n    }\n\n    if (className) {\n      return `${this.baseIconClass} ${className}`\n    }\n\n    return ''\n  }\n\n  getCustomButtonIconClass(customButtonProps) {\n    let className\n\n    if (this.iconOverrideCustomButtonOption) {\n      className = customButtonProps[this.iconOverrideCustomButtonOption]\n\n      if (className) {\n        return `${this.baseIconClass} ${this.applyIconOverridePrefix(className)}`\n      }\n    }\n\n    return ''\n  }\n}\n\nTheme.prototype.classes = {}\nTheme.prototype.iconClasses = {}\nTheme.prototype.baseIconClass = ''\nTheme.prototype.iconOverridePrefix = ''\n\nexport type ThemeClass = { new(calendarOptions: any): Theme }\n","import { __assign } from 'tslib'\nimport { Duration } from './datelib/duration'\nimport { Emitter } from './common/Emitter'\nimport { CalendarListeners } from './options'\n\nexport interface ScrollRequest {\n  time?: Duration\n  [otherProp: string]: any\n}\n\nexport type ScrollRequestHandler = (request: ScrollRequest) => boolean\n\nexport class ScrollResponder {\n  queuedRequest: ScrollRequest\n\n  constructor(\n    private execFunc: ScrollRequestHandler,\n    private emitter: Emitter<CalendarListeners>,\n    private scrollTime: Duration,\n    private scrollTimeReset: boolean,\n  ) {\n    emitter.on('_scrollRequest', this.handleScrollRequest)\n    this.fireInitialScroll()\n  }\n\n  detach() {\n    this.emitter.off('_scrollRequest', this.handleScrollRequest)\n  }\n\n  update(isDatesNew: boolean) {\n    if (isDatesNew && this.scrollTimeReset) {\n      this.fireInitialScroll() // will drain\n    } else {\n      this.drain()\n    }\n  }\n\n  private fireInitialScroll() {\n    this.handleScrollRequest({\n      time: this.scrollTime,\n    })\n  }\n\n  private handleScrollRequest = (request: ScrollRequest) => {\n    this.queuedRequest = __assign({}, this.queuedRequest || {}, request)\n    this.drain()\n  }\n\n  private drain() {\n    if (this.queuedRequest && this.execFunc(this.queuedRequest)) {\n      this.queuedRequest = null\n    }\n  }\n}\n","import { CalendarApi } from './CalendarApi'\nimport { ViewApi } from './ViewApi'\nimport { Theme } from './theme/Theme'\nimport { DateEnv } from './datelib/env'\nimport { PluginHooks } from './plugin-system-struct'\nimport { createContext, Context } from './vdom'\nimport { ScrollResponder, ScrollRequestHandler } from './ScrollResponder'\nimport { DateProfileGenerator } from './DateProfileGenerator'\nimport { ViewSpec } from './structs/view-spec'\nimport { CalendarData } from './reducers/data-types'\nimport { Action } from './reducers/Action'\nimport { Emitter } from './common/Emitter'\nimport { InteractionSettingsInput } from './interactions/interaction'\nimport { DateComponent } from './component/DateComponent'\nimport { CalendarContext } from './CalendarContext'\nimport { createDuration } from './datelib/duration'\nimport { ViewOptionsRefined, CalendarListeners } from './options'\n\nexport const ViewContextType: Context<any> = createContext<ViewContext>({} as any) // for Components\nexport type ResizeHandler = (force: boolean) => void\n\n/*\nit's important that ViewContext extends CalendarContext so that components that subscribe to ViewContext\ncan pass in their ViewContext to util functions that accept CalendarContext.\n*/\nexport interface ViewContext extends CalendarContext {\n  options: ViewOptionsRefined // more specific than BaseOptionsRefined\n  theme: Theme\n  isRtl: boolean\n  dateProfileGenerator: DateProfileGenerator\n  viewSpec: ViewSpec\n  viewApi: ViewApi\n  addResizeHandler: (handler: ResizeHandler) => void\n  removeResizeHandler: (handler: ResizeHandler) => void\n  createScrollResponder: (execFunc: ScrollRequestHandler) => ScrollResponder\n  registerInteractiveComponent: (component: DateComponent<any>, settingsInput: InteractionSettingsInput) => void\n  unregisterInteractiveComponent: (component: DateComponent<any>) => void\n}\n\nexport function buildViewContext(\n  viewSpec: ViewSpec,\n  viewApi: ViewApi,\n  viewOptions: ViewOptionsRefined,\n  dateProfileGenerator: DateProfileGenerator,\n  dateEnv: DateEnv,\n  theme: Theme,\n  pluginHooks: PluginHooks,\n  dispatch: (action: Action) => void,\n  getCurrentData: () => CalendarData,\n  emitter: Emitter<CalendarListeners>,\n  calendarApi: CalendarApi,\n  registerInteractiveComponent: (component: DateComponent<any>, settingsInput: InteractionSettingsInput) => void,\n  unregisterInteractiveComponent: (component: DateComponent<any>) => void,\n): ViewContext {\n  return {\n    dateEnv,\n    options: viewOptions,\n    pluginHooks,\n    emitter,\n    dispatch,\n    getCurrentData,\n    calendarApi,\n    viewSpec,\n    viewApi,\n    dateProfileGenerator,\n    theme,\n    isRtl: viewOptions.direction === 'rtl',\n    addResizeHandler(handler: ResizeHandler) {\n      emitter.on('_resize', handler)\n    },\n    removeResizeHandler(handler: ResizeHandler) {\n      emitter.off('_resize', handler)\n    },\n    createScrollResponder(execFunc: ScrollRequestHandler) {\n      return new ScrollResponder(\n        execFunc,\n        emitter,\n        createDuration(viewOptions.scrollTime),\n        viewOptions.scrollTimeReset,\n      )\n    },\n    registerInteractiveComponent,\n    unregisterInteractiveComponent,\n  }\n}\n","/* eslint max-classes-per-file: off */\n\nimport { __assign } from 'tslib'\nimport { Component, Ref } from './vdom'\nimport { ViewContextType, ViewContext } from './ViewContext'\nimport { compareObjs, EqualityFuncs, getUnequalProps } from './util/object'\nimport { Dictionary } from './options'\n\nexport abstract class PureComponent<Props=Dictionary, State=Dictionary> extends Component<Props, State> {\n  static addPropsEquality = addPropsEquality\n  static addStateEquality = addStateEquality\n  static contextType: any = ViewContextType\n\n  context: ViewContext\n  propEquality: EqualityFuncs<Props>\n  stateEquality: EqualityFuncs<State>\n\n  debug: boolean\n\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    if (this.debug) {\n      // eslint-disable-next-line no-console\n      console.log(getUnequalProps(nextProps, this.props), getUnequalProps(nextState, this.state))\n    }\n\n    return !compareObjs(this.props, nextProps, this.propEquality) ||\n      !compareObjs(this.state, nextState, this.stateEquality)\n  }\n}\n\nPureComponent.prototype.propEquality = {}\nPureComponent.prototype.stateEquality = {}\n\nexport abstract class BaseComponent<Props=Dictionary, State=Dictionary> extends PureComponent<Props, State> {\n  static contextType: any = ViewContextType\n\n  context: ViewContext\n}\n\nfunction addPropsEquality(this: { prototype: { propEquality: any } }, propEquality) {\n  let hash = Object.create(this.prototype.propEquality)\n  __assign(hash, propEquality)\n  this.prototype.propEquality = hash\n}\n\nfunction addStateEquality(this: { prototype: { stateEquality: any } }, stateEquality) {\n  let hash = Object.create(this.prototype.stateEquality)\n  __assign(hash, stateEquality)\n  this.prototype.stateEquality = hash\n}\n\n// use other one\nexport function setRef<RefType>(ref: Ref<RefType> | void, current: RefType) {\n  if (typeof ref === 'function') {\n    ref(current)\n  } else if (ref) {\n    // see https://github.com/facebook/react/issues/13029\n    (ref as any).current = current\n  }\n}\n","import { BaseComponent } from '../vdom-util'\nimport { EventRenderRange } from './event-rendering'\nimport { EventInstanceHash } from '../structs/event-instance'\nimport { Hit } from '../interactions/hit'\nimport { elementClosest } from '../util/dom-manip'\nimport { guid } from '../util/misc'\nimport { Dictionary } from '../options'\n\nexport type DateComponentHash = { [uid: string]: DateComponent<any, any> }\n\n// NOTE: for fg-events, eventRange.range is NOT sliced,\n// thus, we need isStart/isEnd\nexport interface Seg {\n  component?: DateComponent<any, any>\n  isStart: boolean\n  isEnd: boolean\n  eventRange?: EventRenderRange\n  [otherProp: string]: any // TODO: remove this. extending Seg will handle this\n  el?: never\n  // NOTE: can sometimes have start/end, which are important values :(\n}\n\nexport interface EventSegUiInteractionState {\n  affectedInstances: EventInstanceHash\n  segs: Seg[]\n  isEvent: boolean\n}\n\n/*\nan INTERACTABLE date component\n\nPURPOSES:\n- hook up to fg, fill, and mirror renderers\n- interface for dragging and hits\n*/\nexport abstract class DateComponent<Props=Dictionary, State=Dictionary> extends BaseComponent<Props, State> {\n  uid = guid()\n\n  // Hit System\n  // -----------------------------------------------------------------------------------------------------------------\n\n  prepareHits() {\n  }\n\n  queryHit(positionLeft: number, positionTop: number, elWidth: number, elHeight: number): Hit | null {\n    return null // this should be abstract\n  }\n\n  // Pointer Interaction Utils\n  // -----------------------------------------------------------------------------------------------------------------\n\n  isValidSegDownEl(el: HTMLElement) {\n    return !(this.props as any).eventDrag && // HACK\n      !(this.props as any).eventResize && // HACK\n      !elementClosest(el, '.fc-event-mirror')\n  }\n\n  isValidDateDownEl(el: HTMLElement) {\n    return !elementClosest(el, '.fc-event:not(.fc-bg-event)') &&\n      !elementClosest(el, '.fc-more-link') && // a \"more..\" link\n      !elementClosest(el, 'a[data-navlink]') && // a clickable nav link\n      !elementClosest(el, '.fc-popover') // hack\n  }\n}\n","import { guid } from './util/misc'\nimport { PluginDefInput, PluginDef, PluginHooks } from './plugin-system-struct'\nimport { isArraysEqual } from './util/array'\n\n// TODO: easier way to add new hooks? need to update a million things\n\nexport function createPlugin(input: PluginDefInput): PluginDef {\n  return {\n    id: guid(),\n    deps: input.deps || [],\n    reducers: input.reducers || [],\n    isLoadingFuncs: input.isLoadingFuncs || [],\n    contextInit: [].concat(input.contextInit || []),\n    eventRefiners: input.eventRefiners || {},\n    eventDefMemberAdders: input.eventDefMemberAdders || [],\n    eventSourceRefiners: input.eventSourceRefiners || {},\n    isDraggableTransformers: input.isDraggableTransformers || [],\n    eventDragMutationMassagers: input.eventDragMutationMassagers || [],\n    eventDefMutationAppliers: input.eventDefMutationAppliers || [],\n    dateSelectionTransformers: input.dateSelectionTransformers || [],\n    datePointTransforms: input.datePointTransforms || [],\n    dateSpanTransforms: input.dateSpanTransforms || [],\n    views: input.views || {},\n    viewPropsTransformers: input.viewPropsTransformers || [],\n    isPropsValid: input.isPropsValid || null,\n    externalDefTransforms: input.externalDefTransforms || [],\n    viewContainerAppends: input.viewContainerAppends || [],\n    eventDropTransformers: input.eventDropTransformers || [],\n    componentInteractions: input.componentInteractions || [],\n    calendarInteractions: input.calendarInteractions || [],\n    themeClasses: input.themeClasses || {},\n    eventSourceDefs: input.eventSourceDefs || [],\n    cmdFormatter: input.cmdFormatter,\n    recurringTypes: input.recurringTypes || [],\n    namedTimeZonedImpl: input.namedTimeZonedImpl,\n    initialView: input.initialView || '',\n    elementDraggingImpl: input.elementDraggingImpl,\n    optionChangeHandlers: input.optionChangeHandlers || {},\n    scrollGridImpl: input.scrollGridImpl || null,\n    contentTypeHandlers: input.contentTypeHandlers || {},\n    listenerRefiners: input.listenerRefiners || {},\n    optionRefiners: input.optionRefiners || {},\n    propSetHandlers: input.propSetHandlers || {},\n  }\n}\n\nfunction buildPluginHooks(pluginDefs: PluginDef[], globalDefs: PluginDef[]): PluginHooks {\n  let isAdded: { [pluginId: string]: boolean } = {}\n  let hooks: PluginHooks = {\n    reducers: [],\n    isLoadingFuncs: [],\n    contextInit: [],\n    eventRefiners: {},\n    eventDefMemberAdders: [],\n    eventSourceRefiners: {},\n    isDraggableTransformers: [],\n    eventDragMutationMassagers: [],\n    eventDefMutationAppliers: [],\n    dateSelectionTransformers: [],\n    datePointTransforms: [],\n    dateSpanTransforms: [],\n    views: {},\n    viewPropsTransformers: [],\n    isPropsValid: null,\n    externalDefTransforms: [],\n    viewContainerAppends: [],\n    eventDropTransformers: [],\n    componentInteractions: [],\n    calendarInteractions: [],\n    themeClasses: {},\n    eventSourceDefs: [],\n    cmdFormatter: null,\n    recurringTypes: [],\n    namedTimeZonedImpl: null,\n    initialView: '',\n    elementDraggingImpl: null,\n    optionChangeHandlers: {},\n    scrollGridImpl: null,\n    contentTypeHandlers: {},\n    listenerRefiners: {},\n    optionRefiners: {},\n    propSetHandlers: {},\n  }\n\n  function addDefs(defs: PluginDef[]) {\n    for (let def of defs) {\n      if (!isAdded[def.id]) {\n        isAdded[def.id] = true\n        addDefs(def.deps)\n        hooks = combineHooks(hooks, def)\n      }\n    }\n  }\n\n  if (pluginDefs) {\n    addDefs(pluginDefs)\n  }\n\n  addDefs(globalDefs)\n\n  return hooks\n}\n\nexport function buildBuildPluginHooks() { // memoizes\n  let currentOverrideDefs: PluginDef[] = []\n  let currentGlobalDefs: PluginDef[] = []\n  let currentHooks: PluginHooks\n\n  return (overrideDefs: PluginDef[], globalDefs: PluginDef[]) => {\n    if (!currentHooks || !isArraysEqual(overrideDefs, currentOverrideDefs) || !isArraysEqual(globalDefs, currentGlobalDefs)) {\n      currentHooks = buildPluginHooks(overrideDefs, globalDefs)\n    }\n    currentOverrideDefs = overrideDefs\n    currentGlobalDefs = globalDefs\n    return currentHooks\n  }\n}\n\nfunction combineHooks(hooks0: PluginHooks, hooks1: PluginHooks): PluginHooks {\n  return {\n    reducers: hooks0.reducers.concat(hooks1.reducers),\n    isLoadingFuncs: hooks0.isLoadingFuncs.concat(hooks1.isLoadingFuncs),\n    contextInit: hooks0.contextInit.concat(hooks1.contextInit),\n    eventRefiners: { ...hooks0.eventRefiners, ...hooks1.eventRefiners },\n    eventDefMemberAdders: hooks0.eventDefMemberAdders.concat(hooks1.eventDefMemberAdders),\n    eventSourceRefiners: { ...hooks0.eventSourceRefiners, ...hooks1.eventSourceRefiners },\n    isDraggableTransformers: hooks0.isDraggableTransformers.concat(hooks1.isDraggableTransformers),\n    eventDragMutationMassagers: hooks0.eventDragMutationMassagers.concat(hooks1.eventDragMutationMassagers),\n    eventDefMutationAppliers: hooks0.eventDefMutationAppliers.concat(hooks1.eventDefMutationAppliers),\n    dateSelectionTransformers: hooks0.dateSelectionTransformers.concat(hooks1.dateSelectionTransformers),\n    datePointTransforms: hooks0.datePointTransforms.concat(hooks1.datePointTransforms),\n    dateSpanTransforms: hooks0.dateSpanTransforms.concat(hooks1.dateSpanTransforms),\n    views: { ...hooks0.views, ...hooks1.views },\n    viewPropsTransformers: hooks0.viewPropsTransformers.concat(hooks1.viewPropsTransformers),\n    isPropsValid: hooks1.isPropsValid || hooks0.isPropsValid,\n    externalDefTransforms: hooks0.externalDefTransforms.concat(hooks1.externalDefTransforms),\n    viewContainerAppends: hooks0.viewContainerAppends.concat(hooks1.viewContainerAppends),\n    eventDropTransformers: hooks0.eventDropTransformers.concat(hooks1.eventDropTransformers),\n    calendarInteractions: hooks0.calendarInteractions.concat(hooks1.calendarInteractions),\n    componentInteractions: hooks0.componentInteractions.concat(hooks1.componentInteractions),\n    themeClasses: { ...hooks0.themeClasses, ...hooks1.themeClasses },\n    eventSourceDefs: hooks0.eventSourceDefs.concat(hooks1.eventSourceDefs),\n    cmdFormatter: hooks1.cmdFormatter || hooks0.cmdFormatter,\n    recurringTypes: hooks0.recurringTypes.concat(hooks1.recurringTypes),\n    namedTimeZonedImpl: hooks1.namedTimeZonedImpl || hooks0.namedTimeZonedImpl,\n    initialView: hooks0.initialView || hooks1.initialView, // put earlier plugins FIRST\n    elementDraggingImpl: hooks0.elementDraggingImpl || hooks1.elementDraggingImpl, // \"\n    optionChangeHandlers: { ...hooks0.optionChangeHandlers, ...hooks1.optionChangeHandlers },\n    scrollGridImpl: hooks1.scrollGridImpl || hooks0.scrollGridImpl,\n    contentTypeHandlers: { ...hooks0.contentTypeHandlers, ...hooks1.contentTypeHandlers },\n    listenerRefiners: { ...hooks0.listenerRefiners, ...hooks1.listenerRefiners },\n    optionRefiners: { ...hooks0.optionRefiners, ...hooks1.optionRefiners },\n    propSetHandlers: { ...hooks0.propSetHandlers, ...hooks1.propSetHandlers },\n  }\n}\n","import { Theme } from './Theme'\n\nexport class StandardTheme extends Theme {\n}\n\nStandardTheme.prototype.classes = {\n  root: 'fc-theme-standard', // TODO: compute this off of registered theme name\n  tableCellShaded: 'fc-cell-shaded',\n  buttonGroup: 'fc-button-group',\n  button: 'fc-button fc-button-primary',\n  buttonActive: 'fc-button-active',\n}\n\nStandardTheme.prototype.baseIconClass = 'fc-icon'\nStandardTheme.prototype.iconClasses = {\n  close: 'fc-icon-x',\n  prev: 'fc-icon-chevron-left',\n  next: 'fc-icon-chevron-right',\n  prevYear: 'fc-icon-chevrons-left',\n  nextYear: 'fc-icon-chevrons-right',\n}\nStandardTheme.prototype.rtlIconClasses = {\n  prev: 'fc-icon-chevron-right',\n  next: 'fc-icon-chevron-left',\n  prevYear: 'fc-icon-chevrons-right',\n  nextYear: 'fc-icon-chevrons-left',\n}\n\nStandardTheme.prototype.iconOverrideOption = 'buttonIcons' // TODO: make TS-friendly\nStandardTheme.prototype.iconOverrideCustomButtonOption = 'icon'\nStandardTheme.prototype.iconOverridePrefix = 'fc-icon-'\n","import { ViewConfigHash, ViewComponentType } from './view-config'\nimport { ViewOptions } from '../options'\n\n/*\nRepresents information for an instantiatable View class along with settings\nthat are specific to that view. No other settings, like calendar-wide settings, are stored.\n*/\nexport interface ViewDef {\n  type: string\n  component: ViewComponentType\n  overrides: ViewOptions\n  defaults: ViewOptions\n}\n\nexport type ViewDefHash = { [viewType: string]: ViewDef }\n\nexport function compileViewDefs(defaultConfigs: ViewConfigHash, overrideConfigs: ViewConfigHash): ViewDefHash {\n  let hash: ViewDefHash = {}\n  let viewType: string\n\n  for (viewType in defaultConfigs) {\n    ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs)\n  }\n\n  for (viewType in overrideConfigs) {\n    ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs)\n  }\n\n  return hash\n}\n\nfunction ensureViewDef(\n  viewType: string,\n  hash: ViewDefHash,\n  defaultConfigs: ViewConfigHash,\n  overrideConfigs: ViewConfigHash,\n): ViewDef | null {\n  if (hash[viewType]) {\n    return hash[viewType]\n  }\n\n  let viewDef = buildViewDef(viewType, hash, defaultConfigs, overrideConfigs)\n\n  if (viewDef) {\n    hash[viewType] = viewDef\n  }\n\n  return viewDef\n}\n\nfunction buildViewDef(\n  viewType: string,\n  hash: ViewDefHash,\n  defaultConfigs: ViewConfigHash,\n  overrideConfigs: ViewConfigHash,\n): ViewDef | null {\n  let defaultConfig = defaultConfigs[viewType]\n  let overrideConfig = overrideConfigs[viewType]\n\n  let queryProp = (name) => (\n    (defaultConfig && defaultConfig[name] !== null) ? defaultConfig[name] :\n      ((overrideConfig && overrideConfig[name] !== null) ? overrideConfig[name] : null)\n  )\n\n  let theComponent = queryProp('component') as ViewComponentType\n  let superType = queryProp('superType') as string\n  let superDef: ViewDef | null = null\n\n  if (superType) {\n    if (superType === viewType) {\n      throw new Error('Can\\'t have a custom view type that references itself')\n    }\n\n    superDef = ensureViewDef(superType, hash, defaultConfigs, overrideConfigs)\n  }\n\n  if (!theComponent && superDef) {\n    theComponent = superDef.component\n  }\n\n  if (!theComponent) {\n    return null // don't throw a warning, might be settings for a single-unit view\n  }\n\n  return {\n    type: viewType,\n    component: theComponent,\n    defaults: {\n      ...(superDef ? superDef.defaults : {}),\n      ...(defaultConfig ? defaultConfig.rawOptions : {}),\n    },\n    overrides: {\n      ...(superDef ? superDef.overrides : {}),\n      ...(overrideConfig ? overrideConfig.rawOptions : {}),\n    },\n  }\n}\n","/* eslint max-classes-per-file: off */\n\nimport { Ref, createRef, ComponentChildren, createElement, RefObject, createContext, Context } from '../vdom'\nimport { setRef, BaseComponent } from '../vdom-util'\nimport { isPropsEqual } from '../util/object'\nimport { parseClassNames, ClassNamesInput } from '../util/html'\n\nexport type MountArg<ContentArg> = ContentArg & { el: HTMLElement }\nexport type DidMountHandler<TheMountArg extends { el: HTMLElement }> = (mountArg: TheMountArg) => void\nexport type WillUnmountHandler<TheMountArg extends { el: HTMLElement }> = (mountArg: TheMountArg) => void\n\nexport interface RenderHookProps<ContentArg> {\n  hookProps: ContentArg\n  classNames: ClassNamesGenerator<ContentArg>\n  content: CustomContentGenerator<ContentArg>\n  defaultContent?: DefaultContentGenerator<ContentArg>\n  didMount: DidMountHandler<MountArg<ContentArg>>\n  willUnmount: WillUnmountHandler<MountArg<ContentArg>>\n  children: RenderHookPropsChildren\n  elRef?: Ref<any>\n}\n\nexport type RenderHookPropsChildren = (\n  rootElRef: Ref<any>,\n  classNames: string[],\n  innerElRef: Ref<any>,\n  innerContent: ComponentChildren // if falsy, means it wasn't specified\n) => ComponentChildren\n\nexport interface ContentTypeHandlers {\n  [contentKey: string]: () => ({\n    render: (el: HTMLElement, contentVal: any) => void\n    destroy?: () => void\n  })\n}\n\n// NOTE: in JSX, you should always use this class with <HookProps> arg. otherwise, will default to any???\nexport class RenderHook<HookProps> extends BaseComponent<RenderHookProps<HookProps>> {\n  private rootElRef = createRef()\n\n  render() {\n    let { props } = this\n    let { hookProps } = props\n\n    return (\n      <MountHook hookProps={hookProps} didMount={props.didMount} willUnmount={props.willUnmount} elRef={this.handleRootEl}>\n        {(rootElRef) => (\n          <ContentHook hookProps={hookProps} content={props.content} defaultContent={props.defaultContent} backupElRef={this.rootElRef}>\n            {(innerElRef, innerContent) => props.children(\n              rootElRef,\n              normalizeClassNames(props.classNames, hookProps),\n              innerElRef,\n              innerContent,\n            )}\n          </ContentHook>\n        )}\n      </MountHook>\n    )\n  }\n\n  handleRootEl = (el: HTMLElement | null) => {\n    setRef(this.rootElRef, el)\n\n    if (this.props.elRef) {\n      setRef(this.props.elRef, el)\n    }\n  }\n}\n\nexport interface ObjCustomContent {\n  html: string\n  domNodes: any[]\n  [custom: string]: any // TODO: expose hook for plugins to add!\n}\n\nexport type CustomContent = ComponentChildren | ObjCustomContent\nexport type CustomContentGenerator<HookProps> = CustomContent | ((hookProps: HookProps) => CustomContent)\n\nexport type DefaultContentGenerator<HookProps> = (hookProps: HookProps) => ComponentChildren\n// TODO: rename to be about function, not default. use in above type\n\n// for forcing rerender of components that use the ContentHook\nexport const CustomContentRenderContext: Context<number> = createContext<number>(0)\n\nexport interface ContentHookProps<HookProps> {\n  hookProps: HookProps // produced by FullCalendar internally, for rendering an entity/whatever\n  content: CustomContentGenerator<HookProps> // the value of a user-hook, like `eventContent`\n  defaultContent?: DefaultContentGenerator<HookProps> // if content not specified (TODO: just use content?)\n  children: ( // for producing a wrapper around the content\n    innerElRef: Ref<any>,\n    innerContent: ComponentChildren // if falsy, means it wasn't specified\n  ) => ComponentChildren\n  backupElRef?: RefObject<any>\n}\n\ninterface ContentHookInnerProps<HookProps> extends ContentHookProps<HookProps> {\n  renderId: number\n}\n\nexport function ContentHook<HookProps>(props: ContentHookProps<HookProps>) { // TODO: rename to CustomContentHook?\n  return (\n    <CustomContentRenderContext.Consumer>\n      {(renderId) => (\n        <ContentHookInner renderId={renderId} {...props} />\n      )}\n    </CustomContentRenderContext.Consumer>\n  )\n}\n\nclass ContentHookInner<HookProps> extends BaseComponent<ContentHookInnerProps<HookProps>> {\n  private innerElRef = createRef()\n\n  private customContentInfo: {\n    contentKey: string\n    contentVal: any\n    render: (el: HTMLElement, contentVal: any) => void\n    destroy?: () => void\n  }\n\n  render() {\n    return this.props.children(this.innerElRef, this.renderInnerContent())\n  }\n\n  componentDidMount() {\n    this.updateCustomContent()\n  }\n\n  componentDidUpdate() {\n    this.updateCustomContent()\n  }\n\n  componentWillUnmount() {\n    if (this.customContentInfo && this.customContentInfo.destroy) {\n      this.customContentInfo.destroy()\n    }\n  }\n\n  private renderInnerContent() {\n    let { customContentInfo } = this // only populated if using non-[p]react node(s)\n    let innerContent = this.getInnerContent()\n    let meta = this.getContentMeta(innerContent)\n\n    // initial run, or content-type changing? (from vue -> react for example)\n    if (!customContentInfo || customContentInfo.contentKey !== meta.contentKey) {\n      // clearing old value\n      if (customContentInfo) {\n        if (customContentInfo.destroy) {\n          customContentInfo.destroy()\n        }\n        customContentInfo = this.customContentInfo = null\n      }\n      // assigning new value\n      if (meta.contentKey) {\n        customContentInfo = this.customContentInfo = { // for non-[p]react\n          contentKey: meta.contentKey,\n          contentVal: innerContent[meta.contentKey],\n          ...meta.buildLifecycleFuncs(),\n        }\n      }\n    // updating\n    } else if (customContentInfo) {\n      customContentInfo.contentVal = innerContent[meta.contentKey]\n    }\n\n    return customContentInfo\n      ? [] // signal that something was specified\n      : innerContent // assume a [p]react vdom node. use it\n  }\n\n  private getInnerContent() {\n    let { props } = this\n    let innerContent = normalizeContent(props.content, props.hookProps)\n\n    if (innerContent === undefined) { // use the default\n      innerContent = normalizeContent(props.defaultContent, props.hookProps)\n    }\n\n    return innerContent == null ? null : innerContent // convert undefined to null (better for React)\n  }\n\n  private getContentMeta(innerContent: any) {\n    let { contentTypeHandlers } = this.context.pluginHooks\n    let contentKey = ''\n    let buildLifecycleFuncs = null\n\n    if (innerContent) { // allowed to be null, for convenience to caller\n      for (let searchKey in contentTypeHandlers) {\n        if (innerContent[searchKey] !== undefined) {\n          contentKey = searchKey\n          buildLifecycleFuncs = contentTypeHandlers[searchKey]\n          break\n        }\n      }\n    }\n\n    return { contentKey, buildLifecycleFuncs }\n  }\n\n  private updateCustomContent() {\n    if (this.customContentInfo) { // for non-[p]react\n      this.customContentInfo.render(\n        this.innerElRef.current || this.props.backupElRef.current, // the element to render into\n        this.customContentInfo.contentVal,\n      )\n    }\n  }\n}\n\nexport interface MountHookProps<ContentArg> {\n  hookProps: ContentArg\n  didMount: DidMountHandler<MountArg<ContentArg>>\n  willUnmount: WillUnmountHandler<MountArg<ContentArg>>\n  children: (rootElRef: Ref<any>) => ComponentChildren\n  elRef?: Ref<any> // maybe get rid of once we have better API for caller to combine refs\n}\n\nexport class MountHook<ContentArg> extends BaseComponent<MountHookProps<ContentArg>> {\n  rootEl: HTMLElement\n\n  render() {\n    return this.props.children(this.handleRootEl)\n  }\n\n  componentDidMount() {\n    let callback = this.props.didMount\n\n    if (callback) {\n      callback({ ...this.props.hookProps, el: this.rootEl })\n    }\n  }\n\n  componentWillUnmount() {\n    let callback = this.props.willUnmount\n\n    if (callback) {\n      callback({ ...this.props.hookProps, el: this.rootEl })\n    }\n  }\n\n  private handleRootEl = (rootEl: HTMLElement) => {\n    this.rootEl = rootEl\n\n    if (this.props.elRef) {\n      setRef(this.props.elRef, rootEl)\n    }\n  }\n}\n\nexport function buildClassNameNormalizer<HookProps>() { // TODO: general deep-memoizer?\n  let currentGenerator: ClassNamesGenerator<HookProps>\n  let currentHookProps: HookProps\n  let currentClassNames: string[] = []\n\n  return (generator: ClassNamesGenerator<HookProps>, hookProps: HookProps) => {\n    if (!currentHookProps || !isPropsEqual(currentHookProps, hookProps) || generator !== currentGenerator) {\n      currentGenerator = generator\n      currentHookProps = hookProps\n      currentClassNames = normalizeClassNames(generator, hookProps)\n    }\n\n    return currentClassNames\n  }\n}\n\nexport type ClassNamesGenerator<HookProps> = ClassNamesInput | ((hookProps: HookProps) => ClassNamesInput)\n\nfunction normalizeClassNames<HookProps>(classNames: ClassNamesGenerator<HookProps>, hookProps: HookProps): string[] {\n  if (typeof classNames === 'function') {\n    classNames = classNames(hookProps)\n  }\n\n  return parseClassNames(classNames)\n}\n\nfunction normalizeContent(input, hookProps) {\n  if (typeof input === 'function') {\n    return input(hookProps, createElement) // give the function the vdom-creation func\n  }\n  return input\n}\n","import { ViewSpec } from '../structs/view-spec'\nimport { MountHook, buildClassNameNormalizer, MountArg } from './render-hook'\nimport { ComponentChildren, createElement, Ref } from '../vdom'\nimport { BaseComponent } from '../vdom-util'\nimport { ViewApi } from '../ViewApi'\n\nexport interface ViewRootProps {\n  viewSpec: ViewSpec\n  children: (rootElRef: Ref<any>, classNames: string[]) => ComponentChildren\n  elRef?: Ref<any>\n}\n\nexport interface ViewContentArg {\n  view: ViewApi\n}\n\nexport type ViewMountArg = MountArg<ViewContentArg>\n\nexport class ViewRoot extends BaseComponent<ViewRootProps> {\n  normalizeClassNames = buildClassNameNormalizer<ViewContentArg>()\n\n  render() {\n    let { props, context } = this\n    let { options } = context\n    let hookProps: ViewContentArg = { view: context.viewApi }\n    let customClassNames = this.normalizeClassNames(options.viewClassNames, hookProps)\n\n    return (\n      <MountHook\n        hookProps={hookProps}\n        didMount={options.viewDidMount}\n        willUnmount={options.viewWillUnmount}\n        elRef={props.elRef}\n      >\n        {(rootElRef) => props.children(\n          rootElRef,\n          [`fc-${props.viewSpec.type}-view`, 'fc-view'].concat(customClassNames),\n        )}\n      </MountHook>\n    )\n  }\n}\n","import { ViewProps } from '../View'\nimport { mapHash } from '../util/object'\nimport { ComponentType, Component, createElement } from '../vdom'\nimport { ViewRoot } from '../common/ViewRoot'\nimport { RenderHook, MountArg } from '../common/render-hook'\nimport { ViewContext, ViewContextType } from '../ViewContext'\nimport { ViewOptions } from '../options'\nimport { Duration } from '../datelib/duration'\n\n/*\nA view-config represents information for either:\nA) creating a new instantiatable view class. in which case, supplied a class/type in addition to options, OR\nB) options to customize an existing view, in which case only provides options.\n*/\n\nexport type ViewComponent = Component<ViewProps> // an instance\nexport type ViewComponentType = ComponentType<ViewProps>\n\nexport type ViewConfigInput = ViewComponentType | ViewOptions\nexport type ViewConfigInputHash = { [viewType: string]: ViewConfigInput }\n\nexport interface ViewConfig {\n  superType: string\n  component: ViewComponentType | null\n  rawOptions: ViewOptions\n}\n\nexport type ViewConfigHash = { [viewType: string]: ViewConfig }\n\nexport function parseViewConfigs(inputs: ViewConfigInputHash): ViewConfigHash {\n  return mapHash(inputs, parseViewConfig)\n}\n\nfunction parseViewConfig(input: ViewConfigInput): ViewConfig {\n  let rawOptions: ViewOptions = typeof input === 'function' ?\n    { component: input } :\n    input\n  let { component } = rawOptions\n\n  if (rawOptions.content) {\n    component = createViewHookComponent(rawOptions)\n    // TODO: remove content/classNames/didMount/etc from options?\n  }\n\n  return {\n    superType: rawOptions.type as any,\n    component: component as any,\n    rawOptions, // includes type and component too :(\n  }\n}\n\nexport interface SpecificViewContentArg extends ViewProps {\n  nextDayThreshold: Duration\n}\n\nexport type SpecificViewMountArg = MountArg<SpecificViewContentArg>\n\nfunction createViewHookComponent(options: ViewOptions) {\n  return (viewProps: ViewProps) => (\n    <ViewContextType.Consumer>\n      {(context: ViewContext) => (\n        <ViewRoot viewSpec={context.viewSpec}>\n          {(viewElRef, viewClassNames) => {\n            let hookProps: SpecificViewContentArg = {\n              ...viewProps,\n              nextDayThreshold: context.options.nextDayThreshold,\n            }\n            return (\n              <RenderHook\n                hookProps={hookProps}\n                classNames={options.classNames as any}\n                content={options.content as any}\n                didMount={options.didMount as any}\n                willUnmount={options.willUnmount as any}\n                elRef={viewElRef}\n              >\n                {(rootElRef, customClassNames, innerElRef, innerContent) => (\n                  <div className={viewClassNames.concat(customClassNames).join(' ')} ref={rootElRef}>\n                    {innerContent}\n                  </div>\n                )}\n              </RenderHook>\n            )\n          }}\n        </ViewRoot>\n      )}\n    </ViewContextType.Consumer>\n  )\n}\n","import { ViewDef, compileViewDefs } from './view-def'\nimport { Duration, createDuration, greatestDurationDenominator, DurationInput } from '../datelib/duration'\nimport { mapHash } from '../util/object'\nimport { ViewOptions, CalendarOptions, BASE_OPTION_DEFAULTS } from '../options'\nimport { ViewConfigInputHash, parseViewConfigs, ViewConfigHash, ViewComponentType } from './view-config'\n\n/*\nRepresents everything needed to instantiate a new view instance,\nincluding options that have been compiled from view-specific and calendar-wide options,\nas well as duration information.\n\nOverall flow:\nViewConfig -> ViewDef -> ViewSpec\n*/\nexport interface ViewSpec {\n  type: string\n  component: ViewComponentType\n  duration: Duration\n  durationUnit: string\n  singleUnit: string\n  optionDefaults: ViewOptions\n  optionOverrides: ViewOptions\n  buttonTextOverride: string\n  buttonTextDefault: string\n  buttonTitleOverride: string | ((...args: any[]) => string)\n  buttonTitleDefault: string | ((...args: any[]) => string)\n}\n\nexport type ViewSpecHash = { [viewType: string]: ViewSpec }\n\nexport function buildViewSpecs(\n  defaultInputs: ViewConfigInputHash,\n  optionOverrides: CalendarOptions,\n  dynamicOptionOverrides: CalendarOptions,\n  localeDefaults,\n): ViewSpecHash {\n  let defaultConfigs = parseViewConfigs(defaultInputs)\n  let overrideConfigs = parseViewConfigs(optionOverrides.views)\n  let viewDefs = compileViewDefs(defaultConfigs, overrideConfigs)\n\n  return mapHash(viewDefs, (viewDef) => buildViewSpec(viewDef, overrideConfigs, optionOverrides, dynamicOptionOverrides, localeDefaults))\n}\n\nfunction buildViewSpec(\n  viewDef: ViewDef,\n  overrideConfigs: ViewConfigHash,\n  optionOverrides: CalendarOptions,\n  dynamicOptionOverrides: CalendarOptions,\n  localeDefaults,\n): ViewSpec {\n  let durationInput =\n    viewDef.overrides.duration ||\n    viewDef.defaults.duration ||\n    dynamicOptionOverrides.duration ||\n    optionOverrides.duration\n\n  let duration = null\n  let durationUnit = ''\n  let singleUnit = ''\n  let singleUnitOverrides: ViewOptions = {}\n\n  if (durationInput) {\n    duration = createDurationCached(durationInput)\n\n    if (duration) { // valid?\n      let denom = greatestDurationDenominator(duration)\n      durationUnit = denom.unit\n\n      if (denom.value === 1) {\n        singleUnit = durationUnit\n        singleUnitOverrides = overrideConfigs[durationUnit] ? overrideConfigs[durationUnit].rawOptions : {}\n      }\n    }\n  }\n\n  let queryButtonText = (optionsSubset) => {\n    let buttonTextMap = optionsSubset.buttonText || {}\n    let buttonTextKey = viewDef.defaults.buttonTextKey as string\n\n    if (buttonTextKey != null && buttonTextMap[buttonTextKey] != null) {\n      return buttonTextMap[buttonTextKey]\n    }\n    if (buttonTextMap[viewDef.type] != null) {\n      return buttonTextMap[viewDef.type]\n    }\n    if (buttonTextMap[singleUnit] != null) {\n      return buttonTextMap[singleUnit]\n    }\n    return null\n  }\n\n  let queryButtonTitle = (optionsSubset) => { // TODO: more DRY with queryButtonText\n    let buttonHints = optionsSubset.buttonHints || {}\n    let buttonKey = viewDef.defaults.buttonTextKey as string // use same key as text\n\n    if (buttonKey != null && buttonHints[buttonKey] != null) {\n      return buttonHints[buttonKey]\n    }\n    if (buttonHints[viewDef.type] != null) {\n      return buttonHints[viewDef.type]\n    }\n    if (buttonHints[singleUnit] != null) {\n      return buttonHints[singleUnit]\n    }\n    return null\n  }\n\n  return {\n    type: viewDef.type,\n    component: viewDef.component,\n    duration,\n    durationUnit,\n    singleUnit,\n    optionDefaults: viewDef.defaults,\n    optionOverrides: { ...singleUnitOverrides, ...viewDef.overrides },\n\n    buttonTextOverride:\n      queryButtonText(dynamicOptionOverrides) ||\n      queryButtonText(optionOverrides) || // constructor-specified buttonText lookup hash takes precedence\n      viewDef.overrides.buttonText, // `buttonText` for view-specific options is a string\n    buttonTextDefault:\n      queryButtonText(localeDefaults) ||\n      viewDef.defaults.buttonText ||\n      queryButtonText(BASE_OPTION_DEFAULTS) ||\n      viewDef.type, // fall back to given view name\n\n    // not DRY\n    buttonTitleOverride:\n      queryButtonTitle(dynamicOptionOverrides) ||\n      queryButtonTitle(optionOverrides) ||\n      viewDef.overrides.buttonHint,\n    buttonTitleDefault:\n      queryButtonTitle(localeDefaults) ||\n      viewDef.defaults.buttonHint ||\n      queryButtonTitle(BASE_OPTION_DEFAULTS),\n    // will eventually fall back to buttonText\n  }\n}\n\n// hack to get memoization working\n\nlet durationInputMap: { [json: string]: Duration } = {}\n\nfunction createDurationCached(durationInput: DurationInput) {\n  let json = JSON.stringify(durationInput)\n  let res = durationInputMap[json]\n\n  if (res === undefined) {\n    res = createDuration(durationInput)\n    durationInputMap[json] = res\n  }\n\n  return res\n}\n","import { DateMarker, startOfDay, addDays } from './datelib/marker'\nimport { Duration, createDuration, asRoughDays, asRoughMs, greatestDurationDenominator } from './datelib/duration'\nimport {\n  DateRange,\n  OpenDateRange,\n  constrainMarkerToRange,\n  intersectRanges,\n  rangesIntersect,\n  parseRange,\n  DateRangeInput,\n} from './datelib/date-range'\nimport { DateEnv, DateInput } from './datelib/env'\nimport { computeVisibleDayRange } from './util/date'\nimport { getNow } from './reducers/current-date'\nimport { CalendarApi } from './CalendarApi'\n\nexport interface DateProfile {\n  currentRange: DateRange // TODO: does this include slotMinTime/slotMaxTime?\n  currentRangeUnit: string\n  isRangeAllDay: boolean\n  validRange: OpenDateRange\n  activeRange: DateRange | null\n  renderRange: DateRange\n  slotMinTime: Duration\n  slotMaxTime: Duration\n  isValid: boolean\n  dateIncrement: Duration\n}\n\nexport interface DateProfileGeneratorProps extends DateProfileOptions {\n  dateProfileGeneratorClass: DateProfileGeneratorClass // not used by DateProfileGenerator itself\n  duration: Duration\n  durationUnit: string\n  usesMinMaxTime: boolean\n  dateEnv: DateEnv\n  calendarApi: CalendarApi\n}\n\nexport interface DateProfileOptions {\n  slotMinTime: Duration\n  slotMaxTime: Duration\n  showNonCurrentDates?: boolean\n  dayCount?: number\n  dateAlignment?: string\n  dateIncrement?: Duration\n  hiddenDays?: number[]\n  weekends?: boolean\n  nowInput?: DateInput | (() => DateInput)\n  validRangeInput?: DateRangeInput | ((this: CalendarApi, nowDate: Date) => DateRangeInput)\n  visibleRangeInput?: DateRangeInput | ((this: CalendarApi, nowDate: Date) => DateRangeInput)\n  monthMode?: boolean\n  fixedWeekCount?: boolean\n}\n\nexport type DateProfileGeneratorClass = {\n  new(props: DateProfileGeneratorProps): DateProfileGenerator\n}\n\nexport class DateProfileGenerator { // only publicly used for isHiddenDay :(\n  nowDate: DateMarker\n\n  isHiddenDayHash: boolean[]\n\n  constructor(protected props: DateProfileGeneratorProps) {\n    this.nowDate = getNow(props.nowInput, props.dateEnv)\n    this.initHiddenDays()\n  }\n\n  /* Date Range Computation\n  ------------------------------------------------------------------------------------------------------------------*/\n\n  // Builds a structure with info about what the dates/ranges will be for the \"prev\" view.\n  buildPrev(currentDateProfile: DateProfile, currentDate: DateMarker, forceToValid?: boolean): DateProfile {\n    let { dateEnv } = this.props\n\n    let prevDate = dateEnv.subtract(\n      dateEnv.startOf(currentDate, currentDateProfile.currentRangeUnit), // important for start-of-month\n      currentDateProfile.dateIncrement,\n    )\n\n    return this.build(prevDate, -1, forceToValid)\n  }\n\n  // Builds a structure with info about what the dates/ranges will be for the \"next\" view.\n  buildNext(currentDateProfile: DateProfile, currentDate: DateMarker, forceToValid?: boolean): DateProfile {\n    let { dateEnv } = this.props\n\n    let nextDate = dateEnv.add(\n      dateEnv.startOf(currentDate, currentDateProfile.currentRangeUnit), // important for start-of-month\n      currentDateProfile.dateIncrement,\n    )\n\n    return this.build(nextDate, 1, forceToValid)\n  }\n\n  // Builds a structure holding dates/ranges for rendering around the given date.\n  // Optional direction param indicates whether the date is being incremented/decremented\n  // from its previous value. decremented = -1, incremented = 1 (default).\n  build(currentDate: DateMarker, direction?, forceToValid = true): DateProfile {\n    let { props } = this\n    let validRange: DateRange\n    let currentInfo\n    let isRangeAllDay\n    let renderRange: DateRange\n    let activeRange: DateRange\n    let isValid\n\n    validRange = this.buildValidRange()\n    validRange = this.trimHiddenDays(validRange)\n\n    if (forceToValid) {\n      currentDate = constrainMarkerToRange(currentDate, validRange)\n    }\n\n    currentInfo = this.buildCurrentRangeInfo(currentDate, direction)\n    isRangeAllDay = /^(year|month|week|day)$/.test(currentInfo.unit)\n    renderRange = this.buildRenderRange(\n      this.trimHiddenDays(currentInfo.range),\n      currentInfo.unit,\n      isRangeAllDay,\n    )\n    renderRange = this.trimHiddenDays(renderRange)\n    activeRange = renderRange\n\n    if (!props.showNonCurrentDates) {\n      activeRange = intersectRanges(activeRange, currentInfo.range)\n    }\n\n    activeRange = this.adjustActiveRange(activeRange)\n    activeRange = intersectRanges(activeRange, validRange) // might return null\n\n    // it's invalid if the originally requested date is not contained,\n    // or if the range is completely outside of the valid range.\n    isValid = rangesIntersect(currentInfo.range, validRange)\n\n    return {\n      // constraint for where prev/next operations can go and where events can be dragged/resized to.\n      // an object with optional start and end properties.\n      validRange,\n\n      // range the view is formally responsible for.\n      // for example, a month view might have 1st-31st, excluding padded dates\n      currentRange: currentInfo.range,\n\n      // name of largest unit being displayed, like \"month\" or \"week\"\n      currentRangeUnit: currentInfo.unit,\n\n      isRangeAllDay,\n\n      // dates that display events and accept drag-n-drop\n      // will be `null` if no dates accept events\n      activeRange,\n\n      // date range with a rendered skeleton\n      // includes not-active days that need some sort of DOM\n      renderRange,\n\n      // Duration object that denotes the first visible time of any given day\n      slotMinTime: props.slotMinTime,\n\n      // Duration object that denotes the exclusive visible end time of any given day\n      slotMaxTime: props.slotMaxTime,\n\n      isValid,\n\n      // how far the current date will move for a prev/next operation\n      dateIncrement: this.buildDateIncrement(currentInfo.duration),\n      // pass a fallback (might be null) ^\n    }\n  }\n\n  // Builds an object with optional start/end properties.\n  // Indicates the minimum/maximum dates to display.\n  // not responsible for trimming hidden days.\n  buildValidRange(): OpenDateRange {\n    let input = this.props.validRangeInput\n    let simpleInput = typeof input === 'function'\n      ? input.call(this.props.calendarApi, this.nowDate)\n      : input\n\n    return this.refineRange(simpleInput) ||\n      { start: null, end: null } // completely open-ended\n  }\n\n  // Builds a structure with info about the \"current\" range, the range that is\n  // highlighted as being the current month for example.\n  // See build() for a description of `direction`.\n  // Guaranteed to have `range` and `unit` properties. `duration` is optional.\n  buildCurrentRangeInfo(date: DateMarker, direction) {\n    let { props } = this\n    let duration = null\n    let unit = null\n    let range = null\n    let dayCount\n\n    if (props.duration) {\n      duration = props.duration\n      unit = props.durationUnit\n      range = this.buildRangeFromDuration(date, direction, duration, unit)\n    } else if ((dayCount = this.props.dayCount)) {\n      unit = 'day'\n      range = this.buildRangeFromDayCount(date, direction, dayCount)\n    } else if ((range = this.buildCustomVisibleRange(date))) {\n      unit = props.dateEnv.greatestWholeUnit(range.start, range.end).unit\n    } else {\n      duration = this.getFallbackDuration()\n      unit = greatestDurationDenominator(duration).unit\n      range = this.buildRangeFromDuration(date, direction, duration, unit)\n    }\n\n    return { duration, unit, range }\n  }\n\n  getFallbackDuration(): Duration {\n    return createDuration({ day: 1 })\n  }\n\n  // Returns a new activeRange to have time values (un-ambiguate)\n  // slotMinTime or slotMaxTime causes the range to expand.\n  adjustActiveRange(range: DateRange) {\n    let { dateEnv, usesMinMaxTime, slotMinTime, slotMaxTime } = this.props\n    let { start, end } = range\n\n    if (usesMinMaxTime) {\n      // expand active range if slotMinTime is negative (why not when positive?)\n      if (asRoughDays(slotMinTime) < 0) {\n        start = startOfDay(start) // necessary?\n        start = dateEnv.add(start, slotMinTime)\n      }\n\n      // expand active range if slotMaxTime is beyond one day (why not when negative?)\n      if (asRoughDays(slotMaxTime) > 1) {\n        end = startOfDay(end) // necessary?\n        end = addDays(end, -1)\n        end = dateEnv.add(end, slotMaxTime)\n      }\n    }\n\n    return { start, end }\n  }\n\n  // Builds the \"current\" range when it is specified as an explicit duration.\n  // `unit` is the already-computed greatestDurationDenominator unit of duration.\n  buildRangeFromDuration(date: DateMarker, direction, duration: Duration, unit) {\n    let { dateEnv, dateAlignment } = this.props\n    let start: DateMarker\n    let end: DateMarker\n    let res\n\n    // compute what the alignment should be\n    if (!dateAlignment) {\n      let { dateIncrement } = this.props\n\n      if (dateIncrement) {\n        // use the smaller of the two units\n        if (asRoughMs(dateIncrement) < asRoughMs(duration)) {\n          dateAlignment = greatestDurationDenominator(dateIncrement).unit\n        } else {\n          dateAlignment = unit\n        }\n      } else {\n        dateAlignment = unit\n      }\n    }\n\n    // if the view displays a single day or smaller\n    if (asRoughDays(duration) <= 1) {\n      if (this.isHiddenDay(start)) {\n        start = this.skipHiddenDays(start, direction)\n        start = startOfDay(start)\n      }\n    }\n\n    function computeRes() {\n      start = dateEnv.startOf(date, dateAlignment)\n      end = dateEnv.add(start, duration)\n      res = { start, end }\n    }\n\n    computeRes()\n\n    // if range is completely enveloped by hidden days, go past the hidden days\n    if (!this.trimHiddenDays(res)) {\n      date = this.skipHiddenDays(date, direction)\n      computeRes()\n    }\n\n    return res\n  }\n\n  // Builds the \"current\" range when a dayCount is specified.\n  buildRangeFromDayCount(date: DateMarker, direction, dayCount) {\n    let { dateEnv, dateAlignment } = this.props\n    let runningCount = 0\n    let start: DateMarker = date\n    let end: DateMarker\n\n    if (dateAlignment) {\n      start = dateEnv.startOf(start, dateAlignment)\n    }\n\n    start = startOfDay(start)\n    start = this.skipHiddenDays(start, direction)\n\n    end = start\n    do {\n      end = addDays(end, 1)\n      if (!this.isHiddenDay(end)) {\n        runningCount += 1\n      }\n    } while (runningCount < dayCount)\n\n    return { start, end }\n  }\n\n  // Builds a normalized range object for the \"visible\" range,\n  // which is a way to define the currentRange and activeRange at the same time.\n  buildCustomVisibleRange(date: DateMarker) {\n    let { props } = this\n    let input = props.visibleRangeInput\n    let simpleInput = typeof input === 'function'\n      ? input.call(props.calendarApi, props.dateEnv.toDate(date))\n      : input\n\n    let range = this.refineRange(simpleInput)\n\n    if (range && (range.start == null || range.end == null)) {\n      return null\n    }\n\n    return range\n  }\n\n  // Computes the range that will represent the element/cells for *rendering*,\n  // but which may have voided days/times.\n  // not responsible for trimming hidden days.\n  buildRenderRange(currentRange: DateRange, currentRangeUnit, isRangeAllDay) {\n    return currentRange\n  }\n\n  // Compute the duration value that should be added/substracted to the current date\n  // when a prev/next operation happens.\n  buildDateIncrement(fallback): Duration {\n    let { dateIncrement } = this.props\n    let customAlignment\n\n    if (dateIncrement) {\n      return dateIncrement\n    }\n\n    if ((customAlignment = this.props.dateAlignment)) {\n      return createDuration(1, customAlignment)\n    }\n\n    if (fallback) {\n      return fallback\n    }\n\n    return createDuration({ days: 1 })\n  }\n\n  refineRange(rangeInput: DateRangeInput | undefined): DateRange | null {\n    if (rangeInput) {\n      let range = parseRange(rangeInput, this.props.dateEnv)\n\n      if (range) {\n        range = computeVisibleDayRange(range)\n      }\n\n      return range\n    }\n\n    return null\n  }\n\n  /* Hidden Days\n  ------------------------------------------------------------------------------------------------------------------*/\n\n  // Initializes internal variables related to calculating hidden days-of-week\n  initHiddenDays() {\n    let hiddenDays = this.props.hiddenDays || [] // array of day-of-week indices that are hidden\n    let isHiddenDayHash = [] // is the day-of-week hidden? (hash with day-of-week-index -> bool)\n    let dayCnt = 0\n    let i\n\n    if (this.props.weekends === false) {\n      hiddenDays.push(0, 6) // 0=sunday, 6=saturday\n    }\n\n    for (i = 0; i < 7; i += 1) {\n      if (\n        !(isHiddenDayHash[i] = hiddenDays.indexOf(i) !== -1)\n      ) {\n        dayCnt += 1\n      }\n    }\n\n    if (!dayCnt) {\n      throw new Error('invalid hiddenDays') // all days were hidden? bad.\n    }\n\n    this.isHiddenDayHash = isHiddenDayHash\n  }\n\n  // Remove days from the beginning and end of the range that are computed as hidden.\n  // If the whole range is trimmed off, returns null\n  trimHiddenDays(range: DateRange): DateRange | null {\n    let { start, end } = range\n\n    if (start) {\n      start = this.skipHiddenDays(start)\n    }\n\n    if (end) {\n      end = this.skipHiddenDays(end, -1, true)\n    }\n\n    if (start == null || end == null || start < end) {\n      return { start, end }\n    }\n\n    return null\n  }\n\n  // Is the current day hidden?\n  // `day` is a day-of-week index (0-6), or a Date (used for UTC)\n  isHiddenDay(day) {\n    if (day instanceof Date) {\n      day = day.getUTCDay()\n    }\n    return this.isHiddenDayHash[day]\n  }\n\n  // Incrementing the current day until it is no longer a hidden day, returning a copy.\n  // DOES NOT CONSIDER validRange!\n  // If the initial value of `date` is not a hidden day, don't do anything.\n  // Pass `isExclusive` as `true` if you are dealing with an end date.\n  // `inc` defaults to `1` (increment one day forward each time)\n  skipHiddenDays(date: DateMarker, inc = 1, isExclusive = false) {\n    while (\n      this.isHiddenDayHash[(date.getUTCDay() + (isExclusive ? inc : 0) + 7) % 7]\n    ) {\n      date = addDays(date, inc)\n    }\n    return date\n  }\n}\n","import { EventSource, EventSourceHash } from '../structs/event-source'\nimport { parseEventSource, buildEventSourceRefiners } from '../structs/event-source-parse'\nimport { arrayToHash, filterHash } from '../util/object'\nimport { DateRange } from '../datelib/date-range'\nimport { DateProfile } from '../DateProfileGenerator'\nimport { Action } from './Action'\nimport { guid } from '../util/misc'\nimport { CalendarContext } from '../CalendarContext'\nimport { CalendarOptions } from '../options'\n\nexport function initEventSources(calendarOptions, dateProfile: DateProfile, context: CalendarContext) {\n  let activeRange = dateProfile ? dateProfile.activeRange : null\n\n  return addSources(\n    {},\n    parseInitialSources(calendarOptions, context),\n    activeRange,\n    context,\n  )\n}\n\nexport function reduceEventSources(\n  eventSources: EventSourceHash,\n  action: Action,\n  dateProfile: DateProfile,\n  context: CalendarContext,\n): EventSourceHash {\n  let activeRange = dateProfile ? dateProfile.activeRange : null // need this check?\n\n  switch (action.type) {\n    case 'ADD_EVENT_SOURCES': // already parsed\n      return addSources(eventSources, action.sources, activeRange, context)\n\n    case 'REMOVE_EVENT_SOURCE':\n      return removeSource(eventSources, action.sourceId)\n\n    case 'PREV': // TODO: how do we track all actions that affect dateProfile :(\n    case 'NEXT':\n    case 'CHANGE_DATE':\n    case 'CHANGE_VIEW_TYPE':\n      if (dateProfile) {\n        return fetchDirtySources(eventSources, activeRange, context)\n      }\n      return eventSources\n\n    case 'FETCH_EVENT_SOURCES':\n      return fetchSourcesByIds(\n        eventSources,\n        (action as any).sourceIds ? // why no type?\n          arrayToHash((action as any).sourceIds) :\n          excludeStaticSources(eventSources, context),\n        activeRange,\n        action.isRefetch || false,\n        context,\n      )\n\n    case 'RECEIVE_EVENTS':\n    case 'RECEIVE_EVENT_ERROR':\n      return receiveResponse(eventSources, action.sourceId, action.fetchId, action.fetchRange)\n\n    case 'REMOVE_ALL_EVENT_SOURCES':\n      return {}\n\n    default:\n      return eventSources\n  }\n}\n\nexport function reduceEventSourcesNewTimeZone(eventSources: EventSourceHash, dateProfile: DateProfile, context: CalendarContext) {\n  let activeRange = dateProfile ? dateProfile.activeRange : null // need this check?\n\n  return fetchSourcesByIds(\n    eventSources,\n    excludeStaticSources(eventSources, context),\n    activeRange,\n    true,\n    context,\n  )\n}\n\nexport function computeEventSourcesLoading(eventSources: EventSourceHash): boolean {\n  for (let sourceId in eventSources) {\n    if (eventSources[sourceId].isFetching) {\n      return true\n    }\n  }\n\n  return false\n}\n\nfunction addSources(\n  eventSourceHash: EventSourceHash,\n  sources: EventSource<any>[],\n  fetchRange: DateRange | null,\n  context: CalendarContext,\n): EventSourceHash {\n  let hash: EventSourceHash = {}\n\n  for (let source of sources) {\n    hash[source.sourceId] = source\n  }\n\n  if (fetchRange) {\n    hash = fetchDirtySources(hash, fetchRange, context)\n  }\n\n  return { ...eventSourceHash, ...hash }\n}\n\nfunction removeSource(eventSourceHash: EventSourceHash, sourceId: string): EventSourceHash {\n  return filterHash(eventSourceHash, (eventSource: EventSource<any>) => eventSource.sourceId !== sourceId)\n}\n\nfunction fetchDirtySources(sourceHash: EventSourceHash, fetchRange: DateRange, context: CalendarContext): EventSourceHash {\n  return fetchSourcesByIds(\n    sourceHash,\n    filterHash(sourceHash, (eventSource) => isSourceDirty(eventSource, fetchRange, context)),\n    fetchRange,\n    false,\n    context,\n  )\n}\n\nfunction isSourceDirty(eventSource: EventSource<any>, fetchRange: DateRange, context: CalendarContext) {\n  if (!doesSourceNeedRange(eventSource, context)) {\n    return !eventSource.latestFetchId\n  }\n  return !context.options.lazyFetching ||\n      !eventSource.fetchRange ||\n      eventSource.isFetching || // always cancel outdated in-progress fetches\n      fetchRange.start < eventSource.fetchRange.start ||\n      fetchRange.end > eventSource.fetchRange.end\n}\n\nfunction fetchSourcesByIds(\n  prevSources: EventSourceHash,\n  sourceIdHash: { [sourceId: string]: any },\n  fetchRange: DateRange,\n  isRefetch: boolean,\n  context: CalendarContext,\n): EventSourceHash {\n  let nextSources: EventSourceHash = {}\n\n  for (let sourceId in prevSources) {\n    let source = prevSources[sourceId]\n\n    if (sourceIdHash[sourceId]) {\n      nextSources[sourceId] = fetchSource(source, fetchRange, isRefetch, context)\n    } else {\n      nextSources[sourceId] = source\n    }\n  }\n\n  return nextSources\n}\n\nfunction fetchSource(eventSource: EventSource<any>, fetchRange: DateRange, isRefetch: boolean, context: CalendarContext) {\n  let { options, calendarApi } = context\n  let sourceDef = context.pluginHooks.eventSourceDefs[eventSource.sourceDefId]\n  let fetchId = guid()\n\n  sourceDef.fetch(\n    {\n      eventSource,\n      range: fetchRange,\n      isRefetch,\n      context,\n    },\n    (res) => { // success callback\n      let { rawEvents } = res\n\n      if (options.eventSourceSuccess) {\n        rawEvents = options.eventSourceSuccess.call(calendarApi, rawEvents, res.xhr) || rawEvents\n      }\n\n      if (eventSource.success) {\n        rawEvents = eventSource.success.call(calendarApi, rawEvents, res.xhr) || rawEvents\n      }\n\n      context.dispatch({\n        type: 'RECEIVE_EVENTS',\n        sourceId: eventSource.sourceId,\n        fetchId,\n        fetchRange,\n        rawEvents,\n      })\n    },\n    (error) => { // failure callback\n      console.warn(error.message, error)\n\n      if (options.eventSourceFailure) {\n        options.eventSourceFailure.call(calendarApi, error)\n      }\n\n      if (eventSource.failure) {\n        eventSource.failure(error)\n      }\n\n      context.dispatch({\n        type: 'RECEIVE_EVENT_ERROR',\n        sourceId: eventSource.sourceId,\n        fetchId,\n        fetchRange,\n        error,\n      })\n    },\n  )\n\n  return {\n    ...eventSource,\n    isFetching: true,\n    latestFetchId: fetchId,\n  }\n}\n\nfunction receiveResponse(sourceHash: EventSourceHash, sourceId: string, fetchId: string, fetchRange: DateRange) {\n  let eventSource: EventSource<any> = sourceHash[sourceId]\n\n  if (\n    eventSource && // not already removed\n    fetchId === eventSource.latestFetchId\n  ) {\n    return {\n      ...sourceHash,\n      [sourceId]: {\n        ...eventSource,\n        isFetching: false,\n        fetchRange, // also serves as a marker that at least one fetch has completed\n      },\n    }\n  }\n\n  return sourceHash\n}\n\nfunction excludeStaticSources(eventSources: EventSourceHash, context: CalendarContext): EventSourceHash {\n  return filterHash(eventSources, (eventSource) => doesSourceNeedRange(eventSource, context))\n}\n\nfunction parseInitialSources(rawOptions: CalendarOptions, context: CalendarContext) {\n  let refiners = buildEventSourceRefiners(context)\n  let rawSources = [].concat(rawOptions.eventSources || [])\n  let sources = [] // parsed\n\n  if (rawOptions.initialEvents) {\n    rawSources.unshift(rawOptions.initialEvents)\n  }\n\n  if (rawOptions.events) {\n    rawSources.unshift(rawOptions.events)\n  }\n\n  for (let rawSource of rawSources) {\n    let source = parseEventSource(rawSource, context, refiners)\n    if (source) {\n      sources.push(source)\n    }\n  }\n\n  return sources\n}\n\nfunction doesSourceNeedRange(eventSource: EventSource<any>, context: CalendarContext) {\n  let defs = context.pluginHooks.eventSourceDefs\n\n  return !defs[eventSource.sourceDefId].ignoreRange\n}\n","import { filterHash, mapHash } from '../util/object'\nimport { EventDef } from '../structs/event-def'\nimport { EventInstance, EventInstanceHash } from '../structs/event-instance'\nimport { EventInput } from '../structs/event-parse'\nimport {\n  EventStore,\n  mergeEventStores,\n  createEmptyEventStore,\n  filterEventStoreDefs,\n  excludeSubEventStore,\n  parseEvents,\n} from '../structs/event-store'\nimport { Action } from './Action'\nimport { EventSourceHash, EventSource } from '../structs/event-source'\nimport { DateRange } from '../datelib/date-range'\nimport { DateProfile } from '../DateProfileGenerator'\nimport { DateEnv } from '../datelib/env'\nimport { CalendarContext } from '../CalendarContext'\nimport { expandRecurring } from '../structs/recurring-event'\n\nexport function reduceEventStore(\n  eventStore: EventStore,\n  action: Action,\n  eventSources: EventSourceHash,\n  dateProfile: DateProfile,\n  context: CalendarContext,\n): EventStore {\n  switch (action.type) {\n    case 'RECEIVE_EVENTS': // raw\n      return receiveRawEvents(\n        eventStore,\n        eventSources[action.sourceId],\n        action.fetchId,\n        action.fetchRange,\n        action.rawEvents,\n        context,\n      )\n\n    case 'ADD_EVENTS': // already parsed, but not expanded\n      return addEvent(\n        eventStore,\n        action.eventStore, // new ones\n        dateProfile ? dateProfile.activeRange : null,\n        context,\n      )\n\n    case 'RESET_EVENTS':\n      return action.eventStore\n\n    case 'MERGE_EVENTS': // already parsed and expanded\n      return mergeEventStores(eventStore, action.eventStore)\n\n    case 'PREV': // TODO: how do we track all actions that affect dateProfile :(\n    case 'NEXT':\n    case 'CHANGE_DATE':\n    case 'CHANGE_VIEW_TYPE':\n      if (dateProfile) {\n        return expandRecurring(eventStore, dateProfile.activeRange, context)\n      }\n      return eventStore\n\n    case 'REMOVE_EVENTS':\n      return excludeSubEventStore(eventStore, action.eventStore)\n\n    case 'REMOVE_EVENT_SOURCE':\n      return excludeEventsBySourceId(eventStore, action.sourceId)\n\n    case 'REMOVE_ALL_EVENT_SOURCES':\n      return filterEventStoreDefs(eventStore, (eventDef: EventDef) => (\n        !eventDef.sourceId // only keep events with no source id\n      ))\n\n    case 'REMOVE_ALL_EVENTS':\n      return createEmptyEventStore()\n\n    default:\n      return eventStore\n  }\n}\n\nfunction receiveRawEvents(\n  eventStore: EventStore,\n  eventSource: EventSource<any>,\n  fetchId: string,\n  fetchRange: DateRange | null,\n  rawEvents: EventInput[],\n  context: CalendarContext,\n): EventStore {\n  if (\n    eventSource && // not already removed\n    fetchId === eventSource.latestFetchId // TODO: wish this logic was always in event-sources\n  ) {\n    let subset = parseEvents(\n      transformRawEvents(rawEvents, eventSource, context),\n      eventSource,\n      context,\n    )\n\n    if (fetchRange) {\n      subset = expandRecurring(subset, fetchRange, context)\n    }\n\n    return mergeEventStores(\n      excludeEventsBySourceId(eventStore, eventSource.sourceId),\n      subset,\n    )\n  }\n\n  return eventStore\n}\n\nfunction transformRawEvents(rawEvents, eventSource: EventSource<any>, context: CalendarContext) {\n  let calEachTransform = context.options.eventDataTransform\n  let sourceEachTransform = eventSource ? eventSource.eventDataTransform : null\n\n  if (sourceEachTransform) {\n    rawEvents = transformEachRawEvent(rawEvents, sourceEachTransform)\n  }\n\n  if (calEachTransform) {\n    rawEvents = transformEachRawEvent(rawEvents, calEachTransform)\n  }\n\n  return rawEvents\n}\n\nfunction transformEachRawEvent(rawEvents, func) {\n  let refinedEvents\n\n  if (!func) {\n    refinedEvents = rawEvents\n  } else {\n    refinedEvents = []\n\n    for (let rawEvent of rawEvents) {\n      let refinedEvent = func(rawEvent)\n\n      if (refinedEvent) {\n        refinedEvents.push(refinedEvent)\n      } else if (refinedEvent == null) {\n        refinedEvents.push(rawEvent)\n      } // if a different falsy value, do nothing\n    }\n  }\n\n  return refinedEvents\n}\n\nfunction addEvent(eventStore: EventStore, subset: EventStore, expandRange: DateRange | null, context: CalendarContext): EventStore {\n  if (expandRange) {\n    subset = expandRecurring(subset, expandRange, context)\n  }\n\n  return mergeEventStores(eventStore, subset)\n}\n\nexport function rezoneEventStoreDates(eventStore: EventStore, oldDateEnv: DateEnv, newDateEnv: DateEnv): EventStore {\n  let { defs } = eventStore\n\n  let instances = mapHash(eventStore.instances, (instance: EventInstance): EventInstance => {\n    let def = defs[instance.defId]\n\n    if (def.allDay || def.recurringDef) {\n      return instance // isn't dependent on timezone\n    }\n    return {\n      ...instance,\n      range: {\n        start: newDateEnv.createMarker(oldDateEnv.toDate(instance.range.start, instance.forcedStartTzo)),\n        end: newDateEnv.createMarker(oldDateEnv.toDate(instance.range.end, instance.forcedEndTzo)),\n      },\n      forcedStartTzo: newDateEnv.canComputeOffset ? null : instance.forcedStartTzo,\n      forcedEndTzo: newDateEnv.canComputeOffset ? null : instance.forcedEndTzo,\n    }\n  })\n\n  return { defs, instances }\n}\n\nfunction excludeEventsBySourceId(eventStore: EventStore, sourceId: string) {\n  return filterEventStoreDefs(eventStore, (eventDef: EventDef) => eventDef.sourceId !== sourceId)\n}\n\n// QUESTION: why not just return instances? do a general object-property-exclusion util\nexport function excludeInstances(eventStore: EventStore, removals: EventInstanceHash): EventStore {\n  return {\n    defs: eventStore.defs,\n    instances: filterHash(eventStore.instances, (instance: EventInstance) => !removals[instance.instanceId]),\n  }\n}\n","import { DateSpan } from '../structs/date-span'\nimport { Action } from './Action'\n\nexport function reduceDateSelection(currentSelection: DateSpan | null, action: Action) {\n  switch (action.type) {\n    case 'UNSELECT_DATES':\n      return null\n\n    case 'SELECT_DATES':\n      return action.selection\n\n    default:\n      return currentSelection\n  }\n}\n","import { Action } from './Action'\n\nexport function reduceSelectedEvent(currentInstanceId: string, action: Action): string {\n  switch (action.type) {\n    case 'UNSELECT_EVENT':\n      return ''\n\n    case 'SELECT_EVENT':\n      return action.eventInstanceId\n\n    default:\n      return currentInstanceId\n  }\n}\n","import { Action } from './Action'\nimport { EventInteractionState } from '../interactions/event-interaction-state'\n\nexport function reduceEventDrag(currentDrag: EventInteractionState | null, action: Action): EventInteractionState | null {\n  let newDrag: EventInteractionState\n\n  switch (action.type) {\n    case 'UNSET_EVENT_DRAG':\n      return null\n\n    case 'SET_EVENT_DRAG':\n      newDrag = action.state\n\n      return {\n        affectedEvents: newDrag.affectedEvents,\n        mutatedEvents: newDrag.mutatedEvents,\n        isEvent: newDrag.isEvent,\n      }\n\n    default:\n      return currentDrag\n  }\n}\n","import { EventInteractionState } from '../interactions/event-interaction-state'\nimport { Action } from './Action'\n\nexport function reduceEventResize(currentResize: EventInteractionState | null, action: Action): EventInteractionState | null {\n  let newResize: EventInteractionState\n\n  switch (action.type) {\n    case 'UNSET_EVENT_RESIZE':\n      return null\n\n    case 'SET_EVENT_RESIZE':\n      newResize = action.state\n\n      return {\n        affectedEvents: newResize.affectedEvents,\n        mutatedEvents: newResize.mutatedEvents,\n        isEvent: newResize.isEvent,\n      }\n\n    default:\n      return currentResize\n  }\n}\n","import { ViewSpec, ViewSpecHash } from './structs/view-spec'\nimport { Theme } from './theme/Theme'\nimport { CalendarApi } from './CalendarApi'\nimport { CalendarOptionsRefined, CalendarOptions } from './options'\nimport { ToolbarInput, ToolbarModel, ToolbarWidget, CustomButtonInput } from './toolbar-struct'\nimport { formatWithOrdinals } from './util/misc'\n\nexport function parseToolbars(\n  calendarOptions: CalendarOptionsRefined,\n  calendarOptionOverrides: CalendarOptions,\n  theme: Theme,\n  viewSpecs: ViewSpecHash,\n  calendarApi: CalendarApi,\n) {\n  let header = calendarOptions.headerToolbar ? parseToolbar(\n    calendarOptions.headerToolbar,\n    calendarOptions,\n    calendarOptionOverrides,\n    theme,\n    viewSpecs,\n    calendarApi,\n  ) : null\n  let footer = calendarOptions.footerToolbar ? parseToolbar(\n    calendarOptions.footerToolbar,\n    calendarOptions,\n    calendarOptionOverrides,\n    theme,\n    viewSpecs,\n    calendarApi,\n  ) : null\n\n  return { header, footer }\n}\n\nfunction parseToolbar(\n  sectionStrHash: ToolbarInput,\n  calendarOptions: CalendarOptionsRefined,\n  calendarOptionOverrides: CalendarOptions,\n  theme: Theme,\n  viewSpecs: ViewSpecHash,\n  calendarApi: CalendarApi,\n) : ToolbarModel {\n  let sectionWidgets: { [sectionName: string]: ToolbarWidget[][] } = {}\n  let viewsWithButtons: string[] = []\n  let hasTitle = false\n\n  for (let sectionName in sectionStrHash) {\n    let sectionStr = sectionStrHash[sectionName]\n    let sectionRes = parseSection(sectionStr, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi)\n    sectionWidgets[sectionName] = sectionRes.widgets\n    viewsWithButtons.push(...sectionRes.viewsWithButtons)\n    hasTitle = hasTitle || sectionRes.hasTitle\n  }\n\n  return { sectionWidgets, viewsWithButtons, hasTitle }\n}\n\n/*\nBAD: querying icons and text here. should be done at render time\n*/\nfunction parseSection(\n  sectionStr: string,\n  calendarOptions: CalendarOptionsRefined, // defaults+overrides, then refined\n  calendarOptionOverrides: CalendarOptions, // overrides only!, unrefined :(\n  theme: Theme,\n  viewSpecs: ViewSpecHash,\n  calendarApi: CalendarApi,\n): { widgets: ToolbarWidget[][], viewsWithButtons: string[], hasTitle: boolean } {\n  let isRtl = calendarOptions.direction === 'rtl'\n  let calendarCustomButtons = calendarOptions.customButtons || {}\n  let calendarButtonTextOverrides = calendarOptionOverrides.buttonText || {}\n  let calendarButtonText = calendarOptions.buttonText || {}\n  let calendarButtonHintOverrides = calendarOptionOverrides.buttonHints || {}\n  let calendarButtonHints = calendarOptions.buttonHints || {}\n  let sectionSubstrs = sectionStr ? sectionStr.split(' ') : []\n  let viewsWithButtons: string[] = []\n  let hasTitle = false\n\n  let widgets = sectionSubstrs.map(\n    (buttonGroupStr): ToolbarWidget[] => (\n      buttonGroupStr.split(',').map((buttonName): ToolbarWidget => {\n        if (buttonName === 'title') {\n          hasTitle = true\n          return { buttonName }\n        }\n\n        let customButtonProps: CustomButtonInput\n        let viewSpec: ViewSpec\n        let buttonClick\n        let buttonIcon // only one of these will be set\n        let buttonText // \"\n        let buttonHint: string | ((navUnit: string) => string)\n        // ^ for the title=\"\" attribute, for accessibility\n\n        if ((customButtonProps = calendarCustomButtons[buttonName])) {\n          buttonClick = (ev: UIEvent) => {\n            if (customButtonProps.click) {\n              customButtonProps.click.call(ev.target, ev, ev.target) // TODO: use Calendar this context?\n            }\n          };\n\n          (buttonIcon = theme.getCustomButtonIconClass(customButtonProps)) ||\n            (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||\n            (buttonText = customButtonProps.text)\n\n          buttonHint = customButtonProps.hint || customButtonProps.text\n        } else if ((viewSpec = viewSpecs[buttonName])) {\n          viewsWithButtons.push(buttonName)\n\n          buttonClick = () => {\n            calendarApi.changeView(buttonName)\n          };\n\n          (buttonText = viewSpec.buttonTextOverride) ||\n            (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||\n            (buttonText = viewSpec.buttonTextDefault)\n\n          let textFallback =\n            viewSpec.buttonTextOverride ||\n            viewSpec.buttonTextDefault\n\n          buttonHint = formatWithOrdinals(\n            viewSpec.buttonTitleOverride ||\n            viewSpec.buttonTitleDefault ||\n            calendarOptions.viewHint,\n            [textFallback, buttonName], // view-name = buttonName\n            textFallback,\n          )\n        } else if (calendarApi[buttonName]) { // a calendarApi method\n          buttonClick = () => {\n            calendarApi[buttonName]()\n          };\n\n          (buttonText = calendarButtonTextOverrides[buttonName]) ||\n            (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||\n            (buttonText = calendarButtonText[buttonName]) // everything else is considered default\n\n          if (buttonName === 'prevYear' || buttonName === 'nextYear') {\n            let prevOrNext = buttonName === 'prevYear' ? 'prev' : 'next'\n            buttonHint = formatWithOrdinals(\n              calendarButtonHintOverrides[prevOrNext] ||\n              calendarButtonHints[prevOrNext],\n              [\n                calendarButtonText.year || 'year', // localize unit\n                'year',\n              ],\n              calendarButtonText[buttonName],\n            )\n          } else {\n            buttonHint = (navUnit: string) => formatWithOrdinals(\n              calendarButtonHintOverrides[buttonName] ||\n              calendarButtonHints[buttonName],\n              [\n                calendarButtonText[navUnit] || navUnit, // localized unit\n                navUnit,\n              ],\n              calendarButtonText[buttonName],\n            )\n          }\n        }\n\n        return { buttonName, buttonClick, buttonIcon, buttonText, buttonHint }\n      })\n    ),\n  )\n\n  return { widgets, viewsWithButtons, hasTitle }\n}\n","import { createPlugin } from '../plugin-system'\nimport { EventSourceDef } from '../structs/event-source-def'\nimport { EventInput } from '../structs/event-parse'\n\nlet eventSourceDef: EventSourceDef<EventInput[]> = {\n  ignoreRange: true,\n\n  parseMeta(refined) {\n    if (Array.isArray(refined.events)) {\n      return refined.events\n    }\n    return null\n  },\n\n  fetch(arg, success) {\n    success({\n      rawEvents: arg.eventSource.meta,\n    })\n  },\n}\n\nexport const arrayEventSourcePlugin = createPlugin({\n  eventSourceDefs: [eventSourceDef],\n})\n","import { unpromisify } from '../util/promise'\nimport { EventSourceDef } from '../structs/event-source-def'\nimport { EventSourceError } from '../structs/event-source'\nimport { EventInput } from '../structs/event-parse'\nimport { createPlugin } from '../plugin-system'\nimport { buildRangeApiWithTimeZone } from '../structs/date-span'\n\nexport type EventSourceFunc = (\n  arg: {\n    start: Date\n    end: Date\n    startStr: string\n    endStr: string\n    timeZone: string\n  },\n  successCallback: (events: EventInput[]) => void,\n  failureCallback: (error: EventSourceError) => void\n) => (void | PromiseLike<EventInput[]>)\n\nlet eventSourceDef: EventSourceDef<EventSourceFunc> = {\n\n  parseMeta(refined) {\n    if (typeof refined.events === 'function') {\n      return refined.events\n    }\n    return null\n  },\n\n  fetch(arg, success, failure) {\n    let { dateEnv } = arg.context\n    let func = arg.eventSource.meta\n\n    unpromisify(\n      func.bind(null, buildRangeApiWithTimeZone(arg.range, dateEnv)),\n      (rawEvents) => { // success\n        success({ rawEvents }) // needs an object response\n      },\n      failure, // send errorObj directly to failure callback\n    )\n  },\n\n}\n\nexport const funcEventSourcePlugin = createPlugin({\n  eventSourceDefs: [eventSourceDef],\n})\n","// given a function that resolves a result asynchronously.\n// the function can either call passed-in success and failure callbacks,\n// or it can return a promise.\n// if you need to pass additional params to func, bind them first.\nexport function unpromisify(func, success, failure?) {\n  // guard against success/failure callbacks being called more than once\n  // and guard against a promise AND callback being used together.\n  let isResolved = false\n  let wrappedSuccess = function () { // eslint-disable-line func-names\n    if (!isResolved) {\n      isResolved = true\n      success.apply(this, arguments) // eslint-disable-line prefer-rest-params\n    }\n  }\n  let wrappedFailure = function () { // eslint-disable-line func-names\n    if (!isResolved) {\n      isResolved = true\n      if (failure) {\n        failure.apply(this, arguments) // eslint-disable-line prefer-rest-params\n      }\n    }\n  }\n\n  let res = func(wrappedSuccess, wrappedFailure)\n  if (res && typeof res.then === 'function') {\n    res.then(wrappedSuccess, wrappedFailure)\n  }\n}\n","import { Dictionary } from '../options'\n\nexport function requestJson(method: string, url: string, params: Dictionary, successCallback, failureCallback) {\n  method = method.toUpperCase()\n\n  let body = null\n\n  if (method === 'GET') {\n    url = injectQueryStringParams(url, params)\n  } else {\n    body = encodeParams(params)\n  }\n\n  let xhr = new XMLHttpRequest()\n  xhr.open(method, url, true)\n\n  if (method !== 'GET') {\n    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')\n  }\n\n  xhr.onload = () => {\n    if (xhr.status >= 200 && xhr.status < 400) {\n      let parsed = false\n      let res\n\n      try {\n        res = JSON.parse(xhr.responseText)\n        parsed = true\n      } catch (err) {\n        // will handle parsed=false\n      }\n\n      if (parsed) {\n        successCallback(res, xhr)\n      } else {\n        failureCallback('Failure parsing JSON', xhr)\n      }\n    } else {\n      failureCallback('Request failed', xhr)\n    }\n  }\n\n  xhr.onerror = () => {\n    failureCallback('Request failed', xhr)\n  }\n\n  xhr.send(body)\n}\n\nfunction injectQueryStringParams(url: string, params) {\n  return url +\n    (url.indexOf('?') === -1 ? '?' : '&') +\n    encodeParams(params)\n}\n\nfunction encodeParams(params) {\n  let parts = []\n\n  for (let key in params) {\n    parts.push(`${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`)\n  }\n\n  return parts.join('&')\n}\n","import { createPlugin } from './plugin-system'\nimport { hashValuesToArray } from './util/object'\nimport { EventSource } from './structs/event-source'\nimport { CalendarContext } from './CalendarContext'\n\nexport const changeHandlerPlugin = createPlugin({\n  optionChangeHandlers: {\n    events(events, context) {\n      handleEventSources([events], context)\n    },\n    eventSources: handleEventSources,\n  },\n})\n\n/*\nBUG: if `event` was supplied, all previously-given `eventSources` will be wiped out\n*/\nfunction handleEventSources(inputs, context: CalendarContext) {\n  let unfoundSources: EventSource<any>[] = hashValuesToArray(context.getCurrentData().eventSources)\n  let newInputs = []\n\n  for (let input of inputs) {\n    let inputFound = false\n\n    for (let i = 0; i < unfoundSources.length; i += 1) {\n      if (unfoundSources[i]._raw === input) {\n        unfoundSources.splice(i, 1) // delete\n        inputFound = true\n        break\n      }\n    }\n\n    if (!inputFound) {\n      newInputs.push(input)\n    }\n  }\n\n  for (let unfoundSource of unfoundSources) {\n    context.dispatch({\n      type: 'REMOVE_EVENT_SOURCE',\n      sourceId: unfoundSource.sourceId,\n    })\n  }\n\n  for (let newInput of newInputs) {\n    context.calendarApi.addEventSource(newInput)\n  }\n}\n","import { PluginDef } from './plugin-system-struct'\nimport { createPlugin } from './plugin-system'\nimport { arrayEventSourcePlugin } from './event-sources/array-event-source'\nimport { funcEventSourcePlugin } from './event-sources/func-event-source'\nimport { jsonFeedEventSourcePlugin } from './event-sources/json-feed-event-source'\nimport { simpleRecurringEventsPlugin } from './structs/recurring-event-simple'\nimport { changeHandlerPlugin } from './option-change-handlers'\nimport { handleDateProfile } from './dates-set'\nimport { handleEventStore } from './event-crud'\nimport { isArraysEqual } from './util/array'\nimport { removeElement } from './util/dom-manip'\nimport { computeEventSourcesLoading } from './reducers/eventSources'\nimport { CalendarDataManagerState } from './reducers/data-types'\n\n/*\nthis array is exposed on the root namespace so that UMD plugins can add to it.\nsee the rollup-bundles script.\n*/\nexport const globalPlugins: PluginDef[] = [ // TODO: make a const?\n  arrayEventSourcePlugin,\n  funcEventSourcePlugin,\n  jsonFeedEventSourcePlugin,\n  simpleRecurringEventsPlugin,\n  changeHandlerPlugin,\n  createPlugin({ // misc...\n    isLoadingFuncs: [\n      (state: CalendarDataManagerState) => computeEventSourcesLoading(state.eventSources),\n    ],\n    contentTypeHandlers: {\n      html: buildHtmlRenderer,\n      domNodes: buildDomNodeRenderer,\n    },\n    propSetHandlers: {\n      dateProfile: handleDateProfile,\n      eventStore: handleEventStore,\n    },\n  }),\n]\n\nfunction buildHtmlRenderer() {\n  let currentEl: HTMLElement | null = null\n  let currentHtml: string = ''\n\n  function render(el: HTMLElement, html: string) {\n    if (el !== currentEl || html !== currentHtml) {\n      el.innerHTML = html\n    }\n    currentEl = el\n    currentHtml = html\n  }\n\n  function destroy() {\n    currentEl.innerHTML = ''\n    currentEl = null\n    currentHtml = ''\n  }\n\n  return { render, destroy }\n}\n\nfunction buildDomNodeRenderer() {\n  let currentEl: HTMLElement | null = null\n  let currentDomNodes: Node[] = []\n\n  function render(el: HTMLElement, domNodes: Node[] | NodeList) {\n    let newDomNodes = Array.prototype.slice.call(domNodes)\n\n    if (el !== currentEl || !isArraysEqual(currentDomNodes, newDomNodes)) {\n      // append first, remove second (for scroll resetting)\n      for (let newNode of newDomNodes) {\n        el.appendChild(newNode)\n      }\n      destroy()\n    }\n\n    currentEl = el\n    currentDomNodes = newDomNodes\n  }\n\n  function destroy() {\n    currentDomNodes.forEach(removeElement)\n    currentDomNodes = []\n    currentEl = null\n  }\n\n  return { render, destroy }\n}\n","import { __assign } from 'tslib'\nimport { requestJson } from '../util/requestJson'\nimport { CalendarContext } from '../CalendarContext'\nimport { EventSourceDef } from '../structs/event-source-def'\nimport { DateRange } from '../datelib/date-range'\nimport { createPlugin } from '../plugin-system'\nimport { JSON_FEED_EVENT_SOURCE_REFINERS } from './json-feed-event-source-refiners'\n\ninterface JsonFeedMeta {\n  url: string\n  format: 'json' // for EventSourceApi\n  method: string\n  extraParams?: any\n  startParam?: string\n  endParam?: string\n  timeZoneParam?: string\n}\n\nlet eventSourceDef: EventSourceDef<JsonFeedMeta> = {\n\n  parseMeta(refined) {\n    if (refined.url && (refined.format === 'json' || !refined.format)) {\n      return {\n        url: refined.url,\n        format: 'json',\n        method: (refined.method || 'GET').toUpperCase(),\n        extraParams: refined.extraParams,\n        startParam: refined.startParam,\n        endParam: refined.endParam,\n        timeZoneParam: refined.timeZoneParam,\n      }\n    }\n    return null\n  },\n\n  fetch(arg, success, failure) {\n    let { meta } = arg.eventSource\n    let requestParams = buildRequestParams(meta, arg.range, arg.context)\n\n    requestJson(\n      meta.method, meta.url, requestParams,\n      (rawEvents, xhr) => {\n        success({ rawEvents, xhr })\n      },\n      (errorMessage, xhr) => {\n        failure({ message: errorMessage, xhr })\n      },\n    )\n  },\n\n}\n\nexport const jsonFeedEventSourcePlugin = createPlugin({\n  eventSourceRefiners: JSON_FEED_EVENT_SOURCE_REFINERS,\n  eventSourceDefs: [eventSourceDef],\n})\n\nfunction buildRequestParams(meta: JsonFeedMeta, range: DateRange, context: CalendarContext) {\n  let { dateEnv, options } = context\n  let startParam\n  let endParam\n  let timeZoneParam\n  let customRequestParams\n  let params = {}\n\n  startParam = meta.startParam\n  if (startParam == null) {\n    startParam = options.startParam\n  }\n\n  endParam = meta.endParam\n  if (endParam == null) {\n    endParam = options.endParam\n  }\n\n  timeZoneParam = meta.timeZoneParam\n  if (timeZoneParam == null) {\n    timeZoneParam = options.timeZoneParam\n  }\n\n  // retrieve any outbound GET/POST data from the options\n  if (typeof meta.extraParams === 'function') {\n    // supplied as a function that returns a key/value object\n    customRequestParams = meta.extraParams()\n  } else {\n    // probably supplied as a straight key/value object\n    customRequestParams = meta.extraParams || {}\n  }\n\n  __assign(params, customRequestParams)\n\n  params[startParam] = dateEnv.formatIso(range.start)\n  params[endParam] = dateEnv.formatIso(range.end)\n\n  if (dateEnv.timeZone !== 'local') {\n    params[timeZoneParam] = dateEnv.timeZone\n  }\n\n  return params\n}\n","import { identity, Identity, Dictionary } from '../options'\n\nexport const JSON_FEED_EVENT_SOURCE_REFINERS = {\n  method: String,\n  extraParams: identity as Identity<Dictionary | (() => Dictionary)>,\n  startParam: String,\n  endParam: String,\n  timeZoneParam: String,\n}\n","import { startOfDay, addDays, DateMarker } from '../datelib/marker'\nimport { Duration, subtractDurations } from '../datelib/duration'\nimport { arrayToHash } from '../util/object'\nimport { RecurringType } from './recurring-event'\nimport { EventRefined } from './event-parse'\nimport { DateRange, intersectRanges } from '../datelib/date-range'\nimport { DateEnv } from '../datelib/env'\nimport { createPlugin } from '../plugin-system'\nimport { SIMPLE_RECURRING_REFINERS } from './recurring-event-simple-refiners'\nimport './recurring-event-simple-declare'\n\n/*\nAn implementation of recurring events that only supports every-day or weekly recurrences.\n*/\n\ninterface SimpleRecurringData {\n  daysOfWeek: number[] | null\n  startTime: Duration | null\n  endTime: Duration | null\n  startRecur: DateMarker | null\n  endRecur: DateMarker | null\n}\n\nlet recurring: RecurringType<SimpleRecurringData> = {\n\n  parse(refined: EventRefined, dateEnv: DateEnv) {\n    if (refined.daysOfWeek || refined.startTime || refined.endTime || refined.startRecur || refined.endRecur) {\n      let recurringData: SimpleRecurringData = {\n        daysOfWeek: refined.daysOfWeek || null,\n        startTime: refined.startTime || null,\n        endTime: refined.endTime || null,\n        startRecur: refined.startRecur ? dateEnv.createMarker(refined.startRecur) : null,\n        endRecur: refined.endRecur ? dateEnv.createMarker(refined.endRecur) : null,\n      }\n\n      let duration: Duration\n\n      if (refined.duration) {\n        duration = refined.duration\n      }\n      if (!duration && refined.startTime && refined.endTime) {\n        duration = subtractDurations(refined.endTime, refined.startTime)\n      }\n\n      return {\n        allDayGuess: Boolean(!refined.startTime && !refined.endTime),\n        duration,\n        typeData: recurringData, // doesn't need endTime anymore but oh well\n      }\n    }\n\n    return null\n  },\n\n  expand(typeData: SimpleRecurringData, framingRange: DateRange, dateEnv: DateEnv): DateMarker[] {\n    let clippedFramingRange = intersectRanges(\n      framingRange,\n      { start: typeData.startRecur, end: typeData.endRecur },\n    )\n\n    if (clippedFramingRange) {\n      return expandRanges(\n        typeData.daysOfWeek,\n        typeData.startTime,\n        clippedFramingRange,\n        dateEnv,\n      )\n    }\n    return []\n  },\n\n}\n\nexport const simpleRecurringEventsPlugin = createPlugin({\n  recurringTypes: [recurring],\n  eventRefiners: SIMPLE_RECURRING_REFINERS,\n})\n\nfunction expandRanges(\n  daysOfWeek: number[] | null,\n  startTime: Duration | null,\n  framingRange: DateRange,\n  dateEnv: DateEnv,\n): DateMarker[] {\n  let dowHash: { [num: string]: true } | null = daysOfWeek ? arrayToHash(daysOfWeek) : null\n  let dayMarker = startOfDay(framingRange.start)\n  let endMarker = framingRange.end\n  let instanceStarts: DateMarker[] = []\n\n  while (dayMarker < endMarker) {\n    let instanceStart\n\n    // if everyday, or this particular day-of-week\n    if (!dowHash || dowHash[dayMarker.getUTCDay()]) {\n      if (startTime) {\n        instanceStart = dateEnv.add(dayMarker, startTime)\n      } else {\n        instanceStart = dayMarker\n      }\n\n      instanceStarts.push(instanceStart)\n    }\n\n    dayMarker = addDays(dayMarker, 1)\n  }\n\n  return instanceStarts\n}\n","import { createDuration } from '../datelib/duration'\nimport { DateInput } from '../datelib/env'\nimport { identity, Identity } from '../options'\n\nexport const SIMPLE_RECURRING_REFINERS = {\n  daysOfWeek: identity as Identity<number[]>,\n  startTime: createDuration,\n  endTime: createDuration,\n  duration: createDuration,\n  startRecur: identity as Identity<DateInput>,\n  endRecur: identity as Identity<DateInput>,\n}\n","import { DateProfile } from './DateProfileGenerator'\nimport { CalendarData } from './reducers/data-types'\nimport { RangeApiWithTimeZone, buildRangeApiWithTimeZone } from './structs/date-span'\nimport { ViewApi } from './ViewApi'\n\nexport type DatesSetArg = RangeApiWithTimeZone & { view: ViewApi }\n\nexport function handleDateProfile(dateProfile: DateProfile, context: CalendarData) {\n  context.emitter.trigger('datesSet', {\n    ...buildRangeApiWithTimeZone(dateProfile.activeRange, context.dateEnv),\n    view: context.viewApi,\n  })\n}\n","import { EventStore } from './structs/event-store'\nimport { CalendarData } from './reducers/data-types'\nimport { EventApi, buildEventApis } from './api/EventApi'\nimport { Duration } from './datelib/duration'\nimport { ViewApi } from './ViewApi'\n\nexport interface EventAddArg {\n  event: EventApi\n  relatedEvents: EventApi[]\n  revert: () => void\n}\n\nexport interface EventChangeArg {\n  oldEvent: EventApi\n  event: EventApi\n  relatedEvents: EventApi[]\n  revert: () => void\n}\n\nexport interface EventDropArg extends EventChangeArg { // not best place. deals w/ UI\n  el: HTMLElement\n  delta: Duration\n  jsEvent: MouseEvent\n  view: ViewApi\n  // and other \"transformed\" things\n}\n\nexport interface EventRemoveArg {\n  event: EventApi\n  relatedEvents: EventApi[]\n  revert: () => void\n}\n\nexport function handleEventStore(eventStore: EventStore, context: CalendarData) {\n  let { emitter } = context\n\n  if (emitter.hasHandlers('eventsSet')) {\n    emitter.trigger('eventsSet', buildEventApis(eventStore, context))\n  }\n}\n","export class DelayedRunner {\n  private isRunning = false\n  private isDirty = false\n  private pauseDepths: { [scope: string]: number } = {}\n  private timeoutId: number = 0\n\n  constructor(\n    private drainedOption?: () => void,\n  ) {\n  }\n\n  request(delay?: number) {\n    this.isDirty = true\n\n    if (!this.isPaused()) {\n      this.clearTimeout()\n\n      if (delay == null) {\n        this.tryDrain()\n      } else {\n        this.timeoutId = setTimeout( // NOT OPTIMAL! TODO: look at debounce\n          this.tryDrain.bind(this),\n          delay,\n        ) as unknown as number\n      }\n    }\n  }\n\n  pause(scope = '') {\n    let { pauseDepths } = this\n\n    pauseDepths[scope] = (pauseDepths[scope] || 0) + 1\n\n    this.clearTimeout()\n  }\n\n  resume(scope = '', force?: boolean) {\n    let { pauseDepths } = this\n\n    if (scope in pauseDepths) {\n      if (force) {\n        delete pauseDepths[scope]\n      } else {\n        pauseDepths[scope] -= 1\n        let depth = pauseDepths[scope]\n\n        if (depth <= 0) {\n          delete pauseDepths[scope]\n        }\n      }\n\n      this.tryDrain()\n    }\n  }\n\n  isPaused() {\n    return Object.keys(this.pauseDepths).length\n  }\n\n  tryDrain() {\n    if (!this.isRunning && !this.isPaused()) {\n      this.isRunning = true\n\n      while (this.isDirty) {\n        this.isDirty = false\n        this.drained() // might set isDirty to true again\n      }\n\n      this.isRunning = false\n    }\n  }\n\n  clear() {\n    this.clearTimeout()\n    this.isDirty = false\n    this.pauseDepths = {}\n  }\n\n  private clearTimeout() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId)\n      this.timeoutId = 0\n    }\n  }\n\n  protected drained() { // subclasses can implement\n    if (this.drainedOption) {\n      this.drainedOption()\n    }\n  }\n}\n","import { DelayedRunner } from './DelayedRunner'\n\nexport class TaskRunner<Task> { // this class USES the DelayedRunner\n  private queue: Task[] = []\n\n  private delayedRunner: DelayedRunner // will most likely be used WITHOUT any delay\n\n  constructor(\n    private runTaskOption?: (task: Task) => void,\n    private drainedOption?: (completedTasks: Task[]) => void,\n  ) {\n    this.delayedRunner = new DelayedRunner(this.drain.bind(this))\n  }\n\n  request(task: Task, delay?: number) {\n    this.queue.push(task)\n    this.delayedRunner.request(delay)\n  }\n\n  pause(scope?: string) {\n    this.delayedRunner.pause(scope)\n  }\n\n  resume(scope?: string, force?: boolean) {\n    this.delayedRunner.resume(scope, force)\n  }\n\n  drain() {\n    let { queue } = this\n\n    while (queue.length) {\n      let completedTasks: Task[] = []\n      let task: Task\n\n      while ((task = queue.shift())) {\n        this.runTask(task)\n        completedTasks.push(task)\n      }\n\n      this.drained(completedTasks)\n    } // keep going, in case new tasks were added in the drained handler\n  }\n\n  protected runTask(task: Task) { // subclasses can implement\n    if (this.runTaskOption) {\n      this.runTaskOption(task)\n    }\n  }\n\n  protected drained(completedTasks: Task[]) { // subclasses can implement\n    if (this.drainedOption) {\n      this.drainedOption(completedTasks)\n    }\n  }\n}\n","import { DateProfile } from '../DateProfileGenerator'\nimport { diffWholeDays } from '../datelib/marker'\nimport { createFormatter, FormatterInput } from '../datelib/formatting'\nimport { DateRange } from '../datelib/date-range'\nimport { DateEnv } from '../datelib/env'\nimport { BaseOptions } from '../options'\n\n// Computes what the title at the top of the calendarApi should be for this view\nexport function buildTitle(dateProfile: DateProfile, viewOptions: BaseOptions, dateEnv: DateEnv) {\n  let range: DateRange\n\n  // for views that span a large unit of time, show the proper interval, ignoring stray days before and after\n  if (/^(year|month)$/.test(dateProfile.currentRangeUnit)) {\n    range = dateProfile.currentRange\n  } else { // for day units or smaller, use the actual day range\n    range = dateProfile.activeRange\n  }\n\n  return dateEnv.formatRange(\n    range.start,\n    range.end,\n    createFormatter(viewOptions.titleFormat || buildTitleFormat(dateProfile)),\n    {\n      isEndExclusive: dateProfile.isRangeAllDay,\n      defaultSeparator: viewOptions.titleRangeSeparator,\n    },\n  )\n}\n\n// Generates the format string that should be used to generate the title for the current date range.\n// Attempts to compute the most appropriate format if not explicitly specified with `titleFormat`.\nfunction buildTitleFormat(dateProfile: DateProfile): FormatterInput {\n  let { currentRangeUnit } = dateProfile\n\n  if (currentRangeUnit === 'year') {\n    return { year: 'numeric' }\n  }\n\n  if (currentRangeUnit === 'month') {\n    return { year: 'numeric', month: 'long' } // like \"September 2014\"\n  }\n\n  let days = diffWholeDays(\n    dateProfile.currentRange.start,\n    dateProfile.currentRange.end,\n  )\n\n  if (days !== null && days > 1) {\n    // multi-day range. shorter, like \"Sep 9 - 10 2014\"\n    return { year: 'numeric', month: 'short', day: 'numeric' }\n  }\n\n  // one day. longer, like \"September 9 2014\"\n  return { year: 'numeric', month: 'long', day: 'numeric' }\n}\n","import { __assign } from 'tslib'\nimport { buildLocale, RawLocaleInfo, organizeRawLocales, LocaleSingularArg } from '../datelib/locale'\nimport { memoize, memoizeObjArg } from '../util/memoize'\nimport { Action } from './Action'\nimport { buildBuildPluginHooks } from '../plugin-system'\nimport { PluginHooks } from '../plugin-system-struct'\nimport { DateEnv } from '../datelib/env'\nimport { CalendarApi } from '../CalendarApi'\nimport { StandardTheme } from '../theme/StandardTheme'\nimport { EventSourceHash } from '../structs/event-source'\nimport { buildViewSpecs, ViewSpec } from '../structs/view-spec'\nimport { mapHash, isPropsEqual } from '../util/object'\nimport { DateProfileGenerator, DateProfileGeneratorProps } from '../DateProfileGenerator'\nimport { reduceViewType } from './view-type'\nimport { getInitialDate, reduceCurrentDate } from './current-date'\nimport { reduceDynamicOptionOverrides } from './options'\nimport { reduceDateProfile } from './date-profile'\nimport { reduceEventSources, initEventSources, reduceEventSourcesNewTimeZone, computeEventSourcesLoading } from './eventSources'\nimport { reduceEventStore, rezoneEventStoreDates } from './eventStore'\nimport { reduceDateSelection } from './date-selection'\nimport { reduceSelectedEvent } from './selected-event'\nimport { reduceEventDrag } from './event-drag'\nimport { reduceEventResize } from './event-resize'\nimport { Emitter } from '../common/Emitter'\nimport { EventUiHash, EventUi, createEventUi } from '../component/event-ui'\nimport { EventDefHash } from '../structs/event-def'\nimport { parseToolbars } from '../toolbar-parse'\nimport {\n  CalendarOptionsRefined, CalendarOptions,\n  CALENDAR_OPTION_REFINERS, COMPLEX_OPTION_COMPARATORS,\n  ViewOptions, ViewOptionsRefined,\n  BASE_OPTION_DEFAULTS, mergeRawOptions,\n  BASE_OPTION_REFINERS, VIEW_OPTION_REFINERS,\n  CalendarListeners, CALENDAR_LISTENER_REFINERS, Dictionary,\n} from '../options'\nimport { rangeContainsMarker } from '../datelib/date-range'\nimport { ViewApi } from '../ViewApi'\nimport { parseBusinessHours } from '../structs/business-hours'\nimport { globalPlugins } from '../global-plugins'\nimport { createEmptyEventStore } from '../structs/event-store'\nimport { CalendarContext } from '../CalendarContext'\nimport { CalendarDataManagerState, CalendarOptionsData, CalendarCurrentViewData, CalendarData } from './data-types'\nimport { TaskRunner } from '../util/TaskRunner'\nimport { buildTitle } from './title-formatting'\n\nexport interface CalendarDataManagerProps {\n  optionOverrides: CalendarOptions\n  calendarApi: CalendarApi\n  onAction?: (action: Action) => void\n  onData?: (data: CalendarData) => void\n}\n\nexport type ReducerFunc = ( // TODO: rename to CalendarDataInjector. move view-props-manip hook here as well?\n  currentState: Dictionary | null,\n  action: Action | null,\n  context: CalendarContext & CalendarDataManagerState // more than just context\n) => Dictionary\n\n// in future refactor, do the redux-style function(state=initial) for initial-state\n// also, whatever is happening in constructor, have it happen in action queue too\n\nexport class CalendarDataManager {\n  private computeOptionsData = memoize(this._computeOptionsData)\n  private computeCurrentViewData = memoize(this._computeCurrentViewData)\n  private organizeRawLocales = memoize(organizeRawLocales)\n  private buildLocale = memoize(buildLocale)\n  private buildPluginHooks = buildBuildPluginHooks()\n  private buildDateEnv = memoize(buildDateEnv)\n  private buildTheme = memoize(buildTheme)\n  private parseToolbars = memoize(parseToolbars)\n  private buildViewSpecs = memoize(buildViewSpecs)\n  private buildDateProfileGenerator = memoizeObjArg(buildDateProfileGenerator)\n  private buildViewApi = memoize(buildViewApi)\n  private buildViewUiProps = memoizeObjArg(buildViewUiProps)\n  private buildEventUiBySource = memoize(buildEventUiBySource, isPropsEqual)\n  private buildEventUiBases = memoize(buildEventUiBases)\n  private parseContextBusinessHours = memoizeObjArg(parseContextBusinessHours)\n  private buildTitle = memoize(buildTitle)\n\n  public emitter = new Emitter<CalendarListeners>()\n  private actionRunner = new TaskRunner(this._handleAction.bind(this), this.updateData.bind(this))\n  private props: CalendarDataManagerProps\n  private state: CalendarDataManagerState\n  private data: CalendarData\n\n  public currentCalendarOptionsInput: CalendarOptions = {}\n  private currentCalendarOptionsRefined: CalendarOptionsRefined = ({} as any)\n  private currentViewOptionsInput: ViewOptions = {}\n  private currentViewOptionsRefined: ViewOptionsRefined = ({} as any)\n  public currentCalendarOptionsRefiners: any = {}\n\n  constructor(props: CalendarDataManagerProps) {\n    this.props = props\n    this.actionRunner.pause()\n\n    let dynamicOptionOverrides: CalendarOptions = {}\n    let optionsData = this.computeOptionsData(\n      props.optionOverrides,\n      dynamicOptionOverrides,\n      props.calendarApi,\n    )\n\n    let currentViewType = optionsData.calendarOptions.initialView || optionsData.pluginHooks.initialView\n    let currentViewData = this.computeCurrentViewData(\n      currentViewType,\n      optionsData,\n      props.optionOverrides,\n      dynamicOptionOverrides,\n    )\n\n    // wire things up\n    // TODO: not DRY\n    props.calendarApi.currentDataManager = this\n    this.emitter.setThisContext(props.calendarApi)\n    this.emitter.setOptions(currentViewData.options)\n\n    let currentDate = getInitialDate(optionsData.calendarOptions, optionsData.dateEnv)\n    let dateProfile = currentViewData.dateProfileGenerator.build(currentDate)\n\n    if (!rangeContainsMarker(dateProfile.activeRange, currentDate)) {\n      currentDate = dateProfile.currentRange.start\n    }\n\n    let calendarContext: CalendarContext = {\n      dateEnv: optionsData.dateEnv,\n      options: optionsData.calendarOptions,\n      pluginHooks: optionsData.pluginHooks,\n      calendarApi: props.calendarApi,\n      dispatch: this.dispatch,\n      emitter: this.emitter,\n      getCurrentData: this.getCurrentData,\n    }\n\n    // needs to be after setThisContext\n    for (let callback of optionsData.pluginHooks.contextInit) {\n      callback(calendarContext)\n    }\n\n    // NOT DRY\n    let eventSources = initEventSources(optionsData.calendarOptions, dateProfile, calendarContext)\n\n    let initialState: CalendarDataManagerState = {\n      dynamicOptionOverrides,\n      currentViewType,\n      currentDate,\n      dateProfile,\n      businessHours: this.parseContextBusinessHours(calendarContext), // weird to have this in state\n      eventSources,\n      eventUiBases: {},\n      eventStore: createEmptyEventStore(),\n      renderableEventStore: createEmptyEventStore(),\n      dateSelection: null,\n      eventSelection: '',\n      eventDrag: null,\n      eventResize: null,\n      selectionConfig: this.buildViewUiProps(calendarContext).selectionConfig,\n    }\n    let contextAndState = { ...calendarContext, ...initialState }\n\n    for (let reducer of optionsData.pluginHooks.reducers) {\n      __assign(initialState, reducer(null, null, contextAndState))\n    }\n\n    if (computeIsLoading(initialState, calendarContext)) {\n      this.emitter.trigger('loading', true) // NOT DRY\n    }\n\n    this.state = initialState\n    this.updateData()\n    this.actionRunner.resume()\n  }\n\n  getCurrentData = () => this.data\n\n  dispatch = (action: Action) => {\n    this.actionRunner.request(action) // protects against recursive calls to _handleAction\n  }\n\n  resetOptions(optionOverrides: CalendarOptions, append?: boolean) {\n    let { props } = this\n\n    props.optionOverrides = append\n      ? { ...props.optionOverrides, ...optionOverrides }\n      : optionOverrides\n\n    this.actionRunner.request({ // hack. will cause updateData\n      type: 'NOTHING',\n    })\n  }\n\n  _handleAction(action: Action) {\n    let { props, state, emitter } = this\n\n    let dynamicOptionOverrides = reduceDynamicOptionOverrides(state.dynamicOptionOverrides, action)\n    let optionsData = this.computeOptionsData(\n      props.optionOverrides,\n      dynamicOptionOverrides,\n      props.calendarApi,\n    )\n\n    let currentViewType = reduceViewType(state.currentViewType, action)\n    let currentViewData = this.computeCurrentViewData(\n      currentViewType,\n      optionsData,\n      props.optionOverrides,\n      dynamicOptionOverrides,\n    )\n\n    // wire things up\n    // TODO: not DRY\n    props.calendarApi.currentDataManager = this\n    emitter.setThisContext(props.calendarApi)\n    emitter.setOptions(currentViewData.options)\n\n    let calendarContext: CalendarContext = {\n      dateEnv: optionsData.dateEnv,\n      options: optionsData.calendarOptions,\n      pluginHooks: optionsData.pluginHooks,\n      calendarApi: props.calendarApi,\n      dispatch: this.dispatch,\n      emitter,\n      getCurrentData: this.getCurrentData,\n    }\n\n    let { currentDate, dateProfile } = state\n\n    if (this.data && this.data.dateProfileGenerator !== currentViewData.dateProfileGenerator) { // hack\n      dateProfile = currentViewData.dateProfileGenerator.build(currentDate)\n    }\n\n    currentDate = reduceCurrentDate(currentDate, action)\n    dateProfile = reduceDateProfile(dateProfile, action, currentDate, currentViewData.dateProfileGenerator)\n\n    if (\n      action.type === 'PREV' || // TODO: move this logic into DateProfileGenerator\n      action.type === 'NEXT' || // \"\n      !rangeContainsMarker(dateProfile.currentRange, currentDate)\n    ) {\n      currentDate = dateProfile.currentRange.start\n    }\n\n    let eventSources = reduceEventSources(state.eventSources, action, dateProfile, calendarContext)\n    let eventStore = reduceEventStore(state.eventStore, action, eventSources, dateProfile, calendarContext)\n    let isEventsLoading = computeEventSourcesLoading(eventSources) // BAD. also called in this func in computeIsLoading\n\n    let renderableEventStore =\n      (isEventsLoading && !currentViewData.options.progressiveEventRendering) ?\n        (state.renderableEventStore || eventStore) : // try from previous state\n        eventStore\n\n    let { eventUiSingleBase, selectionConfig } = this.buildViewUiProps(calendarContext) // will memoize obj\n    let eventUiBySource = this.buildEventUiBySource(eventSources)\n    let eventUiBases = this.buildEventUiBases(renderableEventStore.defs, eventUiSingleBase, eventUiBySource)\n\n    let newState: CalendarDataManagerState = {\n      dynamicOptionOverrides,\n      currentViewType,\n      currentDate,\n      dateProfile,\n      eventSources,\n      eventStore,\n      renderableEventStore,\n      selectionConfig,\n      eventUiBases,\n      businessHours: this.parseContextBusinessHours(calendarContext), // will memoize obj\n      dateSelection: reduceDateSelection(state.dateSelection, action),\n      eventSelection: reduceSelectedEvent(state.eventSelection, action),\n      eventDrag: reduceEventDrag(state.eventDrag, action),\n      eventResize: reduceEventResize(state.eventResize, action),\n    }\n    let contextAndState = { ...calendarContext, ...newState }\n\n    for (let reducer of optionsData.pluginHooks.reducers) {\n      __assign(newState, reducer(state, action, contextAndState)) // give the OLD state, for old value\n    }\n\n    let wasLoading = computeIsLoading(state, calendarContext)\n    let isLoading = computeIsLoading(newState, calendarContext)\n\n    // TODO: use propSetHandlers in plugin system\n    if (!wasLoading && isLoading) {\n      emitter.trigger('loading', true)\n    } else if (wasLoading && !isLoading) {\n      emitter.trigger('loading', false)\n    }\n\n    this.state = newState\n\n    if (props.onAction) {\n      props.onAction(action)\n    }\n  }\n\n  updateData() {\n    let { props, state } = this\n    let oldData = this.data\n\n    let optionsData = this.computeOptionsData(\n      props.optionOverrides,\n      state.dynamicOptionOverrides,\n      props.calendarApi,\n    )\n\n    let currentViewData = this.computeCurrentViewData(\n      state.currentViewType,\n      optionsData,\n      props.optionOverrides,\n      state.dynamicOptionOverrides,\n    )\n\n    let data: CalendarData = this.data = {\n      viewTitle: this.buildTitle(state.dateProfile, currentViewData.options, optionsData.dateEnv),\n      calendarApi: props.calendarApi,\n      dispatch: this.dispatch,\n      emitter: this.emitter,\n      getCurrentData: this.getCurrentData,\n      ...optionsData,\n      ...currentViewData,\n      ...state,\n    }\n\n    let changeHandlers = optionsData.pluginHooks.optionChangeHandlers\n    let oldCalendarOptions = oldData && oldData.calendarOptions\n    let newCalendarOptions = optionsData.calendarOptions\n\n    if (oldCalendarOptions && oldCalendarOptions !== newCalendarOptions) {\n      if (oldCalendarOptions.timeZone !== newCalendarOptions.timeZone) {\n        // hack\n        state.eventSources = data.eventSources = reduceEventSourcesNewTimeZone(data.eventSources, state.dateProfile, data)\n        state.eventStore = data.eventStore = rezoneEventStoreDates(data.eventStore, oldData.dateEnv, data.dateEnv)\n      }\n\n      for (let optionName in changeHandlers) {\n        if (oldCalendarOptions[optionName] !== newCalendarOptions[optionName]) {\n          changeHandlers[optionName](newCalendarOptions[optionName], data)\n        }\n      }\n    }\n\n    if (props.onData) {\n      props.onData(data)\n    }\n  }\n\n  _computeOptionsData(\n    optionOverrides: CalendarOptions,\n    dynamicOptionOverrides: CalendarOptions,\n    calendarApi: CalendarApi,\n  ): CalendarOptionsData {\n    // TODO: blacklist options that are handled by optionChangeHandlers\n\n    let {\n      refinedOptions, pluginHooks, localeDefaults, availableLocaleData, extra,\n    } = this.processRawCalendarOptions(optionOverrides, dynamicOptionOverrides)\n\n    warnUnknownOptions(extra)\n\n    let dateEnv = this.buildDateEnv(\n      refinedOptions.timeZone,\n      refinedOptions.locale,\n      refinedOptions.weekNumberCalculation,\n      refinedOptions.firstDay,\n      refinedOptions.weekText,\n      pluginHooks,\n      availableLocaleData,\n      refinedOptions.defaultRangeSeparator,\n    )\n\n    let viewSpecs = this.buildViewSpecs(pluginHooks.views, optionOverrides, dynamicOptionOverrides, localeDefaults)\n    let theme = this.buildTheme(refinedOptions, pluginHooks)\n    let toolbarConfig = this.parseToolbars(refinedOptions, optionOverrides, theme, viewSpecs, calendarApi)\n\n    return {\n      calendarOptions: refinedOptions,\n      pluginHooks,\n      dateEnv,\n      viewSpecs,\n      theme,\n      toolbarConfig,\n      localeDefaults,\n      availableRawLocales: availableLocaleData.map,\n    }\n  }\n\n  // always called from behind a memoizer\n  processRawCalendarOptions(optionOverrides: CalendarOptions, dynamicOptionOverrides: CalendarOptions) {\n    let { locales, locale } = mergeRawOptions([\n      BASE_OPTION_DEFAULTS,\n      optionOverrides,\n      dynamicOptionOverrides,\n    ])\n    let availableLocaleData = this.organizeRawLocales(locales)\n    let availableRawLocales = availableLocaleData.map\n    let localeDefaults = this.buildLocale(locale || availableLocaleData.defaultCode, availableRawLocales).options\n    let pluginHooks = this.buildPluginHooks(optionOverrides.plugins || [], globalPlugins)\n    let refiners = this.currentCalendarOptionsRefiners = {\n      ...BASE_OPTION_REFINERS,\n      ...CALENDAR_LISTENER_REFINERS,\n      ...CALENDAR_OPTION_REFINERS,\n      ...pluginHooks.listenerRefiners,\n      ...pluginHooks.optionRefiners,\n    }\n    let extra = {}\n\n    let raw = mergeRawOptions([\n      BASE_OPTION_DEFAULTS,\n      localeDefaults,\n      optionOverrides,\n      dynamicOptionOverrides,\n    ])\n    let refined: Partial<CalendarOptionsRefined> = {}\n    let currentRaw = this.currentCalendarOptionsInput\n    let currentRefined = this.currentCalendarOptionsRefined\n    let anyChanges = false\n\n    for (let optionName in raw) {\n      if (optionName !== 'plugins') { // because plugins is special-cased\n        if (\n          raw[optionName] === currentRaw[optionName] ||\n          (\n            COMPLEX_OPTION_COMPARATORS[optionName] &&\n            (optionName in currentRaw) &&\n            COMPLEX_OPTION_COMPARATORS[optionName](currentRaw[optionName], raw[optionName])\n          )\n        ) {\n          refined[optionName] = currentRefined[optionName]\n        } else if (refiners[optionName]) {\n          refined[optionName] = refiners[optionName](raw[optionName])\n          anyChanges = true\n        } else {\n          extra[optionName] = currentRaw[optionName]\n        }\n      }\n    }\n\n    if (anyChanges) {\n      this.currentCalendarOptionsInput = raw\n      this.currentCalendarOptionsRefined = refined as CalendarOptionsRefined\n    }\n\n    return {\n      rawOptions: this.currentCalendarOptionsInput,\n      refinedOptions: this.currentCalendarOptionsRefined,\n      pluginHooks,\n      availableLocaleData,\n      localeDefaults,\n      extra,\n    }\n  }\n\n  _computeCurrentViewData(\n    viewType: string,\n    optionsData: CalendarOptionsData,\n    optionOverrides: CalendarOptions,\n    dynamicOptionOverrides: CalendarOptions,\n  ): CalendarCurrentViewData {\n    let viewSpec = optionsData.viewSpecs[viewType]\n\n    if (!viewSpec) {\n      throw new Error(`viewType \"${viewType}\" is not available. Please make sure you've loaded all neccessary plugins`)\n    }\n\n    let { refinedOptions, extra } = this.processRawViewOptions(\n      viewSpec,\n      optionsData.pluginHooks,\n      optionsData.localeDefaults,\n      optionOverrides,\n      dynamicOptionOverrides,\n    )\n\n    warnUnknownOptions(extra)\n\n    let dateProfileGenerator = this.buildDateProfileGenerator({\n      dateProfileGeneratorClass: viewSpec.optionDefaults.dateProfileGeneratorClass as any,\n      duration: viewSpec.duration,\n      durationUnit: viewSpec.durationUnit,\n      usesMinMaxTime: viewSpec.optionDefaults.usesMinMaxTime as any,\n      dateEnv: optionsData.dateEnv,\n      calendarApi: this.props.calendarApi, // should come from elsewhere?\n      slotMinTime: refinedOptions.slotMinTime,\n      slotMaxTime: refinedOptions.slotMaxTime,\n      showNonCurrentDates: refinedOptions.showNonCurrentDates,\n      dayCount: refinedOptions.dayCount,\n      dateAlignment: refinedOptions.dateAlignment,\n      dateIncrement: refinedOptions.dateIncrement,\n      hiddenDays: refinedOptions.hiddenDays,\n      weekends: refinedOptions.weekends,\n      nowInput: refinedOptions.now,\n      validRangeInput: refinedOptions.validRange,\n      visibleRangeInput: refinedOptions.visibleRange,\n      monthMode: refinedOptions.monthMode,\n      fixedWeekCount: refinedOptions.fixedWeekCount,\n    })\n\n    let viewApi = this.buildViewApi(viewType, this.getCurrentData, optionsData.dateEnv)\n\n    return { viewSpec, options: refinedOptions, dateProfileGenerator, viewApi }\n  }\n\n  processRawViewOptions(\n    viewSpec: ViewSpec,\n    pluginHooks: PluginHooks,\n    localeDefaults: CalendarOptions,\n    optionOverrides: CalendarOptions,\n    dynamicOptionOverrides: CalendarOptions,\n  ) {\n    let raw = mergeRawOptions([\n      BASE_OPTION_DEFAULTS,\n      viewSpec.optionDefaults,\n      localeDefaults,\n      optionOverrides,\n      viewSpec.optionOverrides,\n      dynamicOptionOverrides,\n    ])\n    let refiners = {\n      ...BASE_OPTION_REFINERS,\n      ...CALENDAR_LISTENER_REFINERS,\n      ...CALENDAR_OPTION_REFINERS,\n      ...VIEW_OPTION_REFINERS,\n      ...pluginHooks.listenerRefiners,\n      ...pluginHooks.optionRefiners,\n    }\n    let refined: Partial<ViewOptionsRefined> = {}\n    let currentRaw = this.currentViewOptionsInput\n    let currentRefined = this.currentViewOptionsRefined\n    let anyChanges = false\n    let extra = {}\n\n    for (let optionName in raw) {\n      if (raw[optionName] === currentRaw[optionName]) {\n        refined[optionName] = currentRefined[optionName]\n      } else {\n        if (raw[optionName] === this.currentCalendarOptionsInput[optionName]) {\n          if (optionName in this.currentCalendarOptionsRefined) { // might be an \"extra\" prop\n            refined[optionName] = this.currentCalendarOptionsRefined[optionName]\n          }\n        } else if (refiners[optionName]) {\n          refined[optionName] = refiners[optionName](raw[optionName])\n        } else {\n          extra[optionName] = raw[optionName]\n        }\n\n        anyChanges = true\n      }\n    }\n\n    if (anyChanges) {\n      this.currentViewOptionsInput = raw\n      this.currentViewOptionsRefined = refined as ViewOptionsRefined\n    }\n\n    return {\n      rawOptions: this.currentViewOptionsInput,\n      refinedOptions: this.currentViewOptionsRefined,\n      extra,\n    }\n  }\n}\n\nfunction buildDateEnv(\n  timeZone: string,\n  explicitLocale: LocaleSingularArg,\n  weekNumberCalculation,\n  firstDay: number | undefined,\n  weekText,\n  pluginHooks: PluginHooks,\n  availableLocaleData: RawLocaleInfo,\n  defaultSeparator: string,\n) {\n  let locale = buildLocale(explicitLocale || availableLocaleData.defaultCode, availableLocaleData.map)\n\n  return new DateEnv({\n    calendarSystem: 'gregory', // TODO: make this a setting\n    timeZone,\n    namedTimeZoneImpl: pluginHooks.namedTimeZonedImpl,\n    locale,\n    weekNumberCalculation,\n    firstDay,\n    weekText,\n    cmdFormatter: pluginHooks.cmdFormatter,\n    defaultSeparator,\n  })\n}\n\nfunction buildTheme(options: CalendarOptionsRefined, pluginHooks: PluginHooks) {\n  let ThemeClass = pluginHooks.themeClasses[options.themeSystem] || StandardTheme\n\n  return new ThemeClass(options)\n}\n\nfunction buildDateProfileGenerator(props: DateProfileGeneratorProps): DateProfileGenerator {\n  let DateProfileGeneratorClass = props.dateProfileGeneratorClass || DateProfileGenerator\n\n  return new DateProfileGeneratorClass(props)\n}\n\nfunction buildViewApi(type: string, getCurrentData: () => CalendarData, dateEnv: DateEnv) {\n  return new ViewApi(type, getCurrentData, dateEnv)\n}\n\nfunction buildEventUiBySource(eventSources: EventSourceHash): EventUiHash {\n  return mapHash(eventSources, (eventSource) => eventSource.ui)\n}\n\nfunction buildEventUiBases(eventDefs: EventDefHash, eventUiSingleBase: EventUi, eventUiBySource: EventUiHash) {\n  let eventUiBases: EventUiHash = { '': eventUiSingleBase }\n\n  for (let defId in eventDefs) {\n    let def = eventDefs[defId]\n\n    if (def.sourceId && eventUiBySource[def.sourceId]) {\n      eventUiBases[defId] = eventUiBySource[def.sourceId]\n    }\n  }\n\n  return eventUiBases\n}\n\nfunction buildViewUiProps(calendarContext: CalendarContext) {\n  let { options } = calendarContext\n\n  return {\n    eventUiSingleBase: createEventUi(\n      {\n        display: options.eventDisplay,\n        editable: options.editable, // without \"event\" at start\n        startEditable: options.eventStartEditable,\n        durationEditable: options.eventDurationEditable,\n        constraint: options.eventConstraint,\n        overlap: typeof options.eventOverlap === 'boolean' ? options.eventOverlap : undefined,\n        allow: options.eventAllow,\n        backgroundColor: options.eventBackgroundColor,\n        borderColor: options.eventBorderColor,\n        textColor: options.eventTextColor,\n        color: options.eventColor,\n        // classNames: options.eventClassNames // render hook will handle this\n      },\n      calendarContext,\n    ),\n    selectionConfig: createEventUi(\n      {\n        constraint: options.selectConstraint,\n        overlap: typeof options.selectOverlap === 'boolean' ? options.selectOverlap : undefined,\n        allow: options.selectAllow,\n      },\n      calendarContext,\n    ),\n  }\n}\n\nfunction computeIsLoading(state: CalendarDataManagerState, context: CalendarContext) {\n  for (let isLoadingFunc of context.pluginHooks.isLoadingFuncs) {\n    if (isLoadingFunc(state)) {\n      return true\n    }\n  }\n\n  return false\n}\n\nfunction parseContextBusinessHours(calendarContext: CalendarContext) {\n  return parseBusinessHours(calendarContext.options.businessHours, calendarContext)\n}\n\nfunction warnUnknownOptions(options: any, viewName?: string) {\n  for (let optionName in options) {\n    console.warn(\n      `Unknown option '${optionName}'` +\n      (viewName ? ` for view '${viewName}'` : ''),\n    )\n  }\n}\n","import { Action } from './Action'\n\nexport function reduceDynamicOptionOverrides(dynamicOptionOverrides, action: Action) {\n  switch (action.type) {\n    case 'SET_OPTION':\n      return { ...dynamicOptionOverrides, [action.optionName]: action.rawOptionValue }\n    default:\n      return dynamicOptionOverrides\n  }\n}\n","import { Action } from './Action'\n\nexport function reduceViewType(viewType: string, action: Action): string {\n  switch (action.type) {\n    case 'CHANGE_VIEW_TYPE':\n      viewType = action.viewType\n  }\n\n  return viewType\n}\n","import { DateProfile, DateProfileGenerator } from '../DateProfileGenerator'\nimport { Action } from './Action'\nimport { DateMarker } from '../datelib/marker'\n\nexport function reduceDateProfile(\n  currentDateProfile: DateProfile | null,\n  action: Action,\n  currentDate: DateMarker,\n  dateProfileGenerator: DateProfileGenerator,\n): DateProfile {\n  let dp: DateProfile\n\n  switch (action.type) {\n    case 'CHANGE_VIEW_TYPE':\n      return dateProfileGenerator.build(action.dateMarker || currentDate)\n\n    case 'CHANGE_DATE':\n      return dateProfileGenerator.build(action.dateMarker)\n\n    case 'PREV':\n      dp = dateProfileGenerator.buildPrev(currentDateProfile, currentDate)\n      if (dp.isValid) {\n        return dp\n      }\n      break\n\n    case 'NEXT':\n      dp = dateProfileGenerator.buildNext(currentDateProfile, currentDate)\n      if (dp.isValid) {\n        return dp\n      }\n      break\n  }\n\n  return currentDateProfile\n}\n","import { Component, ComponentChildren } from '../vdom'\nimport { CalendarDataManager } from '../reducers/CalendarDataManager'\nimport { CalendarApi } from '../CalendarApi'\nimport { CalendarData } from '../reducers/data-types'\n\nexport interface CalendarDataProviderProps {\n  optionOverrides: any\n  calendarApi: CalendarApi\n  children?: (data: CalendarData) => ComponentChildren\n}\n\n// TODO: move this to react plugin?\nexport class CalendarDataProvider extends Component<CalendarDataProviderProps, CalendarData> {\n  dataManager: CalendarDataManager\n\n  constructor(props: CalendarDataProviderProps) {\n    super(props)\n\n    this.dataManager = new CalendarDataManager({\n      optionOverrides: props.optionOverrides,\n      calendarApi: props.calendarApi,\n      onData: this.handleData,\n    })\n  }\n\n  handleData = (data: CalendarData) => {\n    if (!this.dataManager) { // still within initial run, before assignment in constructor\n      // eslint-disable-next-line react/no-direct-mutation-state\n      this.state = data // can't use setState yet\n    } else {\n      this.setState(data)\n    }\n  }\n\n  render() {\n    return this.props.children(this.state)\n  }\n\n  componentDidUpdate(prevProps: CalendarDataProviderProps) {\n    let newOptionOverrides = this.props.optionOverrides\n\n    if (newOptionOverrides !== prevProps.optionOverrides) { // prevent recursive handleData\n      this.dataManager.resetOptions(newOptionOverrides)\n    }\n  }\n}\n","export interface SegSpan {\n  start: number\n  end: number\n}\n\nexport interface SegEntry {\n  index: number\n  thickness: number // should be an integer\n  span: SegSpan\n}\n\n// used internally. exposed for subclasses of SegHierarchy\nexport interface SegInsertion {\n  level: number // will have an equal coord, or slightly before, entries in existing level\n  levelCoord: number\n  lateral: number // where to insert in the existing level. -1 if creating a new level\n  touchingLevel: number // -1 if no touching\n  touchingLateral: number // -1 if no touching\n  touchingEntry: SegEntry // the last touching entry in the level\n  stackCnt: number\n}\n\nexport interface SegRect extends SegEntry {\n  levelCoord: number\n}\n\nexport interface SegEntryGroup {\n  entries: SegEntry[]\n  span: SegSpan\n}\n\nexport class SegHierarchy {\n  // settings\n  strictOrder: boolean = false\n  allowReslicing: boolean = false\n  maxCoord: number = -1 // -1 means no max\n  maxStackCnt: number = -1 // -1 means no max\n\n  levelCoords: number[] = [] // ordered\n  entriesByLevel: SegEntry[][] = [] // parallel with levelCoords\n  stackCnts: { [entryId: string]: number } = {} // TODO: use better technique!?\n\n  addSegs(inputs: SegEntry[]): SegEntry[] {\n    let hiddenEntries: SegEntry[] = []\n\n    for (let input of inputs) {\n      this.insertEntry(input, hiddenEntries)\n    }\n\n    return hiddenEntries\n  }\n\n  insertEntry(entry: SegEntry, hiddenEntries: SegEntry[]): number {\n    let insertion = this.findInsertion(entry)\n\n    if (this.isInsertionValid(insertion, entry)) {\n      this.insertEntryAt(entry, insertion)\n      return 1\n    }\n\n    return this.handleInvalidInsertion(insertion, entry, hiddenEntries)\n  }\n\n  isInsertionValid(insertion: SegInsertion, entry: SegEntry): boolean {\n    return (this.maxCoord === -1 || insertion.levelCoord + entry.thickness <= this.maxCoord) &&\n      (this.maxStackCnt === -1 || insertion.stackCnt < this.maxStackCnt)\n  }\n\n  // returns number of new entries inserted\n  handleInvalidInsertion(insertion: SegInsertion, entry: SegEntry, hiddenEntries: SegEntry[]): number {\n    if (this.allowReslicing && insertion.touchingEntry) {\n      return this.splitEntry(entry, insertion.touchingEntry, hiddenEntries)\n    }\n\n    hiddenEntries.push(entry)\n    return 0\n  }\n\n  splitEntry(entry: SegEntry, barrier: SegEntry, hiddenEntries: SegEntry[]): number {\n    let partCnt = 0\n    let splitHiddenEntries: SegEntry[] = []\n    let entrySpan = entry.span\n    let barrierSpan = barrier.span\n\n    if (entrySpan.start < barrierSpan.start) {\n      partCnt += this.insertEntry({\n        index: entry.index,\n        thickness: entry.thickness,\n        span: { start: entrySpan.start, end: barrierSpan.start },\n      }, splitHiddenEntries)\n    }\n\n    if (entrySpan.end > barrierSpan.end) {\n      partCnt += this.insertEntry({\n        index: entry.index,\n        thickness: entry.thickness,\n        span: { start: barrierSpan.end, end: entrySpan.end },\n      }, splitHiddenEntries)\n    }\n\n    if (partCnt) {\n      hiddenEntries.push({\n        index: entry.index,\n        thickness: entry.thickness,\n        span: intersectSpans(barrierSpan, entrySpan), // guaranteed to intersect\n      }, ...splitHiddenEntries)\n      return partCnt\n    }\n\n    hiddenEntries.push(entry)\n    return 0\n  }\n\n  insertEntryAt(entry: SegEntry, insertion: SegInsertion): void {\n    let { entriesByLevel, levelCoords } = this\n\n    if (insertion.lateral === -1) {\n      // create a new level\n      insertAt(levelCoords, insertion.level, insertion.levelCoord)\n      insertAt(entriesByLevel, insertion.level, [entry])\n    } else {\n      // insert into existing level\n      insertAt(entriesByLevel[insertion.level], insertion.lateral, entry)\n    }\n\n    this.stackCnts[buildEntryKey(entry)] = insertion.stackCnt\n  }\n\n  findInsertion(newEntry: SegEntry): SegInsertion {\n    let { levelCoords, entriesByLevel, strictOrder, stackCnts } = this\n    let levelCnt = levelCoords.length\n    let candidateCoord = 0\n    let touchingLevel: number = -1\n    let touchingLateral: number = -1\n    let touchingEntry: SegEntry = null\n    let stackCnt = 0\n\n    for (let trackingLevel = 0; trackingLevel < levelCnt; trackingLevel += 1) {\n      let trackingCoord = levelCoords[trackingLevel]\n\n      // if the current level is past the placed entry, we have found a good empty space and can stop.\n      // if strictOrder, keep finding more lateral intersections.\n      if (!strictOrder && trackingCoord >= candidateCoord + newEntry.thickness) {\n        break\n      }\n\n      let trackingEntries = entriesByLevel[trackingLevel]\n      let trackingEntry: SegEntry\n      let searchRes = binarySearch(trackingEntries, newEntry.span.start, getEntrySpanEnd) // find first entry after newEntry's end\n      let lateralIndex = searchRes[0] + searchRes[1] // if exact match (which doesn't collide), go to next one\n\n      while ( // loop through entries that horizontally intersect\n        (trackingEntry = trackingEntries[lateralIndex]) && // but not past the whole entry list\n        trackingEntry.span.start < newEntry.span.end // and not entirely past newEntry\n      ) {\n        let trackingEntryBottom = trackingCoord + trackingEntry.thickness\n        // intersects into the top of the candidate?\n        if (trackingEntryBottom > candidateCoord) {\n          candidateCoord = trackingEntryBottom\n          touchingEntry = trackingEntry\n          touchingLevel = trackingLevel\n          touchingLateral = lateralIndex\n        }\n        // butts up against top of candidate? (will happen if just intersected as well)\n        if (trackingEntryBottom === candidateCoord) {\n          // accumulate the highest possible stackCnt of the trackingEntries that butt up\n          stackCnt = Math.max(stackCnt, stackCnts[buildEntryKey(trackingEntry)] + 1)\n        }\n        lateralIndex += 1\n      }\n    }\n\n    // the destination level will be after touchingEntry's level. find it\n    let destLevel = 0\n    if (touchingEntry) {\n      destLevel = touchingLevel + 1\n      while (destLevel < levelCnt && levelCoords[destLevel] < candidateCoord) {\n        destLevel += 1\n      }\n    }\n\n    // if adding to an existing level, find where to insert\n    let destLateral = -1\n    if (destLevel < levelCnt && levelCoords[destLevel] === candidateCoord) {\n      destLateral = binarySearch(entriesByLevel[destLevel], newEntry.span.end, getEntrySpanEnd)[0]\n    }\n\n    return {\n      touchingLevel,\n      touchingLateral,\n      touchingEntry,\n      stackCnt,\n      levelCoord: candidateCoord,\n      level: destLevel,\n      lateral: destLateral,\n    }\n  }\n\n  // sorted by levelCoord (lowest to highest)\n  toRects(): SegRect[] {\n    let { entriesByLevel, levelCoords } = this\n    let levelCnt = entriesByLevel.length\n    let rects: SegRect[] = []\n\n    for (let level = 0; level < levelCnt; level += 1) {\n      let entries = entriesByLevel[level]\n      let levelCoord = levelCoords[level]\n\n      for (let entry of entries) {\n        rects.push({ ...entry, levelCoord })\n      }\n    }\n\n    return rects\n  }\n}\n\nexport function getEntrySpanEnd(entry: SegEntry) {\n  return entry.span.end\n}\n\nexport function buildEntryKey(entry: SegEntry) { // TODO: use Map instead?\n  return entry.index + ':' + entry.span.start\n}\n\n// returns groups with entries sorted by input order\nexport function groupIntersectingEntries(entries: SegEntry[]): SegEntryGroup[] {\n  let merges: SegEntryGroup[] = []\n\n  for (let entry of entries) {\n    let filteredMerges: SegEntryGroup[] = []\n    let hungryMerge: SegEntryGroup = { // the merge that will eat what it collides with\n      span: entry.span,\n      entries: [entry],\n    }\n\n    for (let merge of merges) {\n      if (intersectSpans(merge.span, hungryMerge.span)) {\n        hungryMerge = {\n          entries: merge.entries.concat(hungryMerge.entries), // keep preexisting merge's items first. maintains order\n          span: joinSpans(merge.span, hungryMerge.span),\n        }\n      } else {\n        filteredMerges.push(merge)\n      }\n    }\n\n    filteredMerges.push(hungryMerge)\n    merges = filteredMerges\n  }\n\n  return merges\n}\n\nexport function joinSpans(span0: SegSpan, span1: SegSpan): SegSpan {\n  return {\n    start: Math.min(span0.start, span1.start),\n    end: Math.max(span0.end, span1.end),\n  }\n}\n\nexport function intersectSpans(span0: SegSpan, span1: SegSpan): SegSpan | null {\n  let start = Math.max(span0.start, span1.start)\n  let end = Math.min(span0.end, span1.end)\n\n  if (start < end) {\n    return { start, end }\n  }\n\n  return null\n}\n\n// general util\n// ---------------------------------------------------------------------------------------------------------------------\n\nfunction insertAt<Item>(arr: Item[], index: number, item: Item) {\n  arr.splice(index, 0, item)\n}\n\nexport function binarySearch<Item>(\n  a: Item[],\n  searchVal: number,\n  getItemVal: (item: Item) => number,\n): [number, number] { // returns [level, isExactMatch ? 1 : 0]\n  let startIndex = 0\n  let endIndex = a.length // exclusive\n\n  if (!endIndex || searchVal < getItemVal(a[startIndex])) { // no items OR before first item\n    return [0, 0]\n  }\n  if (searchVal > getItemVal(a[endIndex - 1])) { // after last item\n    return [endIndex, 0]\n  }\n\n  while (startIndex < endIndex) {\n    let middleIndex = Math.floor(startIndex + (endIndex - startIndex) / 2)\n    let middleVal = getItemVal(a[middleIndex])\n\n    if (searchVal < middleVal) {\n      endIndex = middleIndex\n    } else if (searchVal > middleVal) {\n      startIndex = middleIndex + 1\n    } else { // equal!\n      return [middleIndex, 1]\n    }\n  }\n\n  return [startIndex, 0]\n}\n","import { DateComponent } from '../component/DateComponent'\nimport { Hit } from './hit'\n\nexport abstract class Interaction {\n  component: DateComponent<any>\n  isHitComboAllowed: ((hit0: Hit, hit1: Hit) => boolean) | null\n\n  constructor(settings: InteractionSettings) {\n    this.component = settings.component\n    this.isHitComboAllowed = settings.isHitComboAllowed || null\n  }\n\n  destroy() {\n  }\n}\n\nexport type InteractionClass = { new(settings: InteractionSettings): Interaction }\n\nexport interface InteractionSettingsInput {\n  el: HTMLElement\n  useEventCenter?: boolean\n  isHitComboAllowed?: (hit0: Hit, hit1: Hit) => boolean\n}\n\nexport interface InteractionSettings {\n  component: DateComponent<any>\n  el: HTMLElement\n  useEventCenter: boolean\n  isHitComboAllowed: ((hit0: Hit, hit1: Hit) => boolean) | null\n}\n\nexport type InteractionSettingsStore = { [componenUid: string]: InteractionSettings }\n\nexport function parseInteractionSettings(component: DateComponent<any>, input: InteractionSettingsInput): InteractionSettings {\n  return {\n    component,\n    el: input.el,\n    useEventCenter: input.useEventCenter != null ? input.useEventCenter : true,\n    isHitComboAllowed: input.isHitComboAllowed || null,\n  }\n}\n\nexport function interactionSettingsToStore(settings: InteractionSettings) {\n  return {\n    [settings.component.uid]: settings,\n  }\n}\n\n// global state\nexport const interactionSettingsStore: InteractionSettingsStore = {}\n","import { Emitter } from '../common/Emitter'\n\n/*\nAn abstraction for a dragging interaction originating on an event.\nDoes higher-level things than PointerDragger, such as possibly:\n- a \"mirror\" that moves with the pointer\n- a minimum number of pixels or other criteria for a true drag to begin\n\nsubclasses must emit:\n- pointerdown\n- dragstart\n- dragmove\n- pointerup\n- dragend\n*/\nexport abstract class ElementDragging { // TODO: rename to *Interface?\n  emitter: Emitter<any>\n\n  constructor(el: HTMLElement, selector?: string) {\n    this.emitter = new Emitter()\n  }\n\n  destroy() {\n  }\n\n  // if given true, should prevent dragstart+dragmove+dragend from firing\n  abstract setIgnoreMove(bool: boolean): void\n\n  setMirrorIsVisible(bool: boolean) {\n    // optional if subclass doesn't want to support a mirror\n  }\n\n  setMirrorNeedsRevert(bool: boolean) {\n    // optional if subclass doesn't want to support a mirror\n  }\n\n  setAutoScrollEnabled(bool: boolean) {\n    // optional\n  }\n}\n\nexport type ElementDraggingClass = { new(el: HTMLElement, selector?: string): ElementDragging }\n","// TODO: get rid of this in favor of options system,\n// tho it's really easy to access this globally rather than pass thru options.\nexport const config = {} as any\n","import { createDuration, Duration } from '../datelib/duration'\nimport { refineProps, RawOptionsFromRefiners, Dictionary } from '../options'\n\n/*\nInformation about what will happen when an external element is dragged-and-dropped\nonto a calendar. Contains information for creating an event.\n*/\n\nconst DRAG_META_REFINERS = {\n  startTime: createDuration,\n  duration: createDuration,\n  create: Boolean,\n  sourceId: String,\n}\n\nexport type DragMetaInput =\n  RawOptionsFromRefiners<typeof DRAG_META_REFINERS> &\n  { [otherProp: string]: any } // for leftoverProps\n\nexport interface DragMeta {\n  startTime: Duration | null\n  duration: Duration | null\n  create: boolean // create an event when dropped?\n  sourceId: string // similar to addEvent's parameter\n  leftoverProps: Dictionary\n}\n\nexport function parseDragMeta(raw: DragMetaInput): DragMeta {\n  let { refined, extra } = refineProps(raw, DRAG_META_REFINERS)\n\n  return {\n    startTime: refined.startTime || null,\n    duration: refined.duration || null,\n    create: refined.create != null ? refined.create : true,\n    sourceId: refined.sourceId,\n    leftoverProps: extra,\n  }\n}\n","import { createElement, VNode } from './vdom'\nimport { BaseComponent } from './vdom-util'\nimport { ToolbarWidget } from './toolbar-struct'\n\nexport interface ToolbarContent {\n  title: string\n  titleId: string\n  navUnit: string\n  activeButton: string\n  isTodayEnabled: boolean\n  isPrevEnabled: boolean\n  isNextEnabled: boolean\n}\n\nexport interface ToolbarSectionProps extends ToolbarContent {\n  widgetGroups: ToolbarWidget[][]\n}\n\nexport class ToolbarSection extends BaseComponent<ToolbarSectionProps> {\n  render() {\n    let children = this.props.widgetGroups.map((widgetGroup) => this.renderWidgetGroup(widgetGroup))\n\n    return createElement('div', { className: 'fc-toolbar-chunk' }, ...children)\n  }\n\n  renderWidgetGroup(widgetGroup: ToolbarWidget[]) {\n    let { props } = this\n    let { theme } = this.context\n    let children: VNode[] = []\n    let isOnlyButtons = true\n\n    for (let widget of widgetGroup) {\n      let { buttonName, buttonClick, buttonText, buttonIcon, buttonHint } = widget\n\n      if (buttonName === 'title') {\n        isOnlyButtons = false\n        children.push(\n          <h2 className=\"fc-toolbar-title\" id={props.titleId}>{props.title}</h2>,\n        )\n      } else {\n        let isPressed = buttonName === props.activeButton\n        let isDisabled =\n          (!props.isTodayEnabled && buttonName === 'today') ||\n          (!props.isPrevEnabled && buttonName === 'prev') ||\n          (!props.isNextEnabled && buttonName === 'next')\n\n        let buttonClasses = [`fc-${buttonName}-button`, theme.getClass('button')]\n        if (isPressed) {\n          buttonClasses.push(theme.getClass('buttonActive'))\n        }\n\n        children.push(\n          <button\n            type=\"button\"\n            title={typeof buttonHint === 'function' ? buttonHint(props.navUnit) : buttonHint}\n            disabled={isDisabled}\n            aria-pressed={isPressed}\n            className={buttonClasses.join(' ')}\n            onClick={buttonClick}\n          >\n            {buttonText || (buttonIcon ? <span className={buttonIcon} /> : '')}\n          </button>,\n        )\n      }\n    }\n\n    if (children.length > 1) {\n      let groupClassName = (isOnlyButtons && theme.getClass('buttonGroup')) || ''\n\n      return createElement('div', { className: groupClassName }, ...children)\n    }\n    return children[0]\n  }\n}\n","import { createElement } from './vdom'\nimport { BaseComponent } from './vdom-util'\nimport { ToolbarModel, ToolbarWidget } from './toolbar-struct'\nimport { ToolbarSection, ToolbarContent } from './ToolbarSection'\n\nexport interface ToolbarProps extends ToolbarContent {\n  extraClassName: string // wish this could be array, but easier for pureness\n  model: ToolbarModel\n  titleId: string\n}\n\nexport class Toolbar extends BaseComponent<ToolbarProps> {\n  render() {\n    let { model, extraClassName } = this.props\n    let forceLtr = false\n    let startContent\n    let endContent\n    let sectionWidgets = model.sectionWidgets\n    let centerContent = sectionWidgets.center\n\n    if (sectionWidgets.left) {\n      forceLtr = true\n      startContent = sectionWidgets.left\n    } else {\n      startContent = sectionWidgets.start\n    }\n\n    if (sectionWidgets.right) {\n      forceLtr = true\n      endContent = sectionWidgets.right\n    } else {\n      endContent = sectionWidgets.end\n    }\n\n    let classNames = [\n      extraClassName || '',\n      'fc-toolbar',\n      forceLtr ? 'fc-toolbar-ltr' : '',\n    ]\n\n    return (\n      <div className={classNames.join(' ')}>\n        {this.renderSection('start', startContent || [])}\n        {this.renderSection('center', centerContent || [])}\n        {this.renderSection('end', endContent || [])}\n      </div>\n    )\n  }\n\n  renderSection(key: string, widgetGroups: ToolbarWidget[][]) {\n    let { props } = this\n\n    return (\n      <ToolbarSection\n        key={key}\n        widgetGroups={widgetGroups}\n        title={props.title}\n        navUnit={props.navUnit}\n        activeButton={props.activeButton}\n        isTodayEnabled={props.isTodayEnabled}\n        isPrevEnabled={props.isPrevEnabled}\n        isNextEnabled={props.isNextEnabled}\n        titleId={props.titleId}\n      />\n    )\n  }\n}\n","import { BaseComponent, setRef } from './vdom-util'\nimport { ComponentChildren, Ref, createElement } from './vdom'\nimport { CssDimValue } from './scrollgrid/util'\n\nexport interface ViewContainerProps {\n  labeledById: string\n  liquid?: boolean\n  height?: CssDimValue\n  aspectRatio?: number\n  elRef?: Ref<HTMLDivElement>\n  children?: ComponentChildren\n}\n\ninterface ViewContainerState {\n  availableWidth: number | null\n}\n\n// TODO: do function component?\nexport class ViewContainer extends BaseComponent<ViewContainerProps, ViewContainerState> {\n  el: HTMLElement\n\n  state: ViewContainerState = {\n    availableWidth: null,\n  }\n\n  render() {\n    let { props, state } = this\n    let { aspectRatio } = props\n\n    let classNames = [\n      'fc-view-harness',\n      (aspectRatio || props.liquid || props.height)\n        ? 'fc-view-harness-active' // harness controls the height\n        : 'fc-view-harness-passive', // let the view do the height\n    ]\n    let height: CssDimValue = ''\n    let paddingBottom: CssDimValue = ''\n\n    if (aspectRatio) {\n      if (state.availableWidth !== null) {\n        height = state.availableWidth / aspectRatio\n      } else {\n        // while waiting to know availableWidth, we can't set height to *zero*\n        // because will cause lots of unnecessary scrollbars within scrollgrid.\n        // BETTER: don't start rendering ANYTHING yet until we know container width\n        // NOTE: why not always use paddingBottom? Causes height oscillation (issue 5606)\n        paddingBottom = `${(1 / aspectRatio) * 100}%`\n      }\n    } else {\n      height = props.height || ''\n    }\n\n    return (\n      <div\n        aria-labelledby={props.labeledById}\n        ref={this.handleEl}\n        className={classNames.join(' ')}\n        style={{ height, paddingBottom }}\n      >\n        {props.children}\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    this.context.addResizeHandler(this.handleResize)\n  }\n\n  componentWillUnmount() {\n    this.context.removeResizeHandler(this.handleResize)\n  }\n\n  handleEl = (el: HTMLElement | null) => {\n    this.el = el\n    setRef(this.props.elRef, el)\n    this.updateAvailableWidth()\n  }\n\n  handleResize = () => {\n    this.updateAvailableWidth()\n  }\n\n  updateAvailableWidth() {\n    if (\n      this.el && // needed. but why?\n      this.props.aspectRatio // aspectRatio is the only height setting that needs availableWidth\n    ) {\n      this.setState({ availableWidth: this.el.offsetWidth })\n    }\n  }\n}\n","import { listenBySelector } from '../util/dom-event'\nimport { EventApi } from '../api/EventApi'\nimport { elementClosest } from '../util/dom-manip'\nimport { getElSeg } from '../component/event-rendering'\nimport { Interaction, InteractionSettings } from './interaction'\nimport { ViewApi } from '../ViewApi'\n\nexport interface EventClickArg {\n  el: HTMLElement\n  event: EventApi\n  jsEvent: MouseEvent\n  view: ViewApi\n}\n\n/*\nDetects when the user clicks on an event within a DateComponent\n*/\nexport class EventClicking extends Interaction {\n  constructor(settings: InteractionSettings) {\n    super(settings)\n\n    this.destroy = listenBySelector(\n      settings.el,\n      'click',\n      '.fc-event', // on both fg and bg events\n      this.handleSegClick,\n    )\n  }\n\n  handleSegClick = (ev: Event, segEl: HTMLElement) => {\n    let { component } = this\n    let { context } = component\n    let seg = getElSeg(segEl)\n\n    if (\n      seg && // might be the <div> surrounding the more link\n      component.isValidSegDownEl(ev.target as HTMLElement)\n    ) {\n      // our way to simulate a link click for elements that can't be <a> tags\n      // grab before trigger fired in case trigger trashes DOM thru rerendering\n      let hasUrlContainer = elementClosest(ev.target as HTMLElement, '.fc-event-forced-url')\n      let url = hasUrlContainer ? (hasUrlContainer.querySelector('a[href]') as any).href : ''\n\n      context.emitter.trigger('eventClick', {\n        el: segEl,\n        event: new EventApi(\n          component.context,\n          seg.eventRange.def,\n          seg.eventRange.instance,\n        ),\n        jsEvent: ev as MouseEvent, // Is this always a mouse event? See #4655\n        view: context.viewApi,\n      } as EventClickArg)\n\n      if (url && !ev.defaultPrevented) {\n        window.location.href = url\n      }\n    }\n  }\n}\n","import { listenToHoverBySelector } from '../util/dom-event'\nimport { EventApi } from '../api/EventApi'\nimport { getElSeg } from '../component/event-rendering'\nimport { Interaction, InteractionSettings } from './interaction'\nimport { ViewApi } from '../ViewApi'\n\nexport interface EventHoveringArg {\n  el: HTMLElement\n  event: EventApi\n  jsEvent: MouseEvent\n  view: ViewApi\n}\n\n/*\nTriggers events and adds/removes core classNames when the user's pointer\nenters/leaves event-elements of a component.\n*/\nexport class EventHovering extends Interaction {\n  removeHoverListeners: () => void\n\n  currentSegEl: HTMLElement\n\n  constructor(settings: InteractionSettings) {\n    super(settings)\n\n    this.removeHoverListeners = listenToHoverBySelector(\n      settings.el,\n      '.fc-event', // on both fg and bg events\n      this.handleSegEnter,\n      this.handleSegLeave,\n    )\n  }\n\n  destroy() {\n    this.removeHoverListeners()\n  }\n\n  // for simulating an eventMouseLeave when the event el is destroyed while mouse is over it\n  handleEventElRemove = (el: HTMLElement) => {\n    if (el === this.currentSegEl) {\n      this.handleSegLeave(null, this.currentSegEl)\n    }\n  }\n\n  handleSegEnter = (ev: Event, segEl: HTMLElement) => {\n    if (getElSeg(segEl)) { // TODO: better way to make sure not hovering over more+ link or its wrapper\n      this.currentSegEl = segEl\n      this.triggerEvent('eventMouseEnter', ev, segEl)\n    }\n  }\n\n  handleSegLeave = (ev: Event | null, segEl: HTMLElement) => {\n    if (this.currentSegEl) {\n      this.currentSegEl = null\n      this.triggerEvent('eventMouseLeave', ev, segEl)\n    }\n  }\n\n  triggerEvent(publicEvName: 'eventMouseEnter' | 'eventMouseLeave', ev: Event | null, segEl: HTMLElement) {\n    let { component } = this\n    let { context } = component\n    let seg = getElSeg(segEl)!\n\n    if (!ev || component.isValidSegDownEl(ev.target as HTMLElement)) {\n      context.emitter.trigger(publicEvName, {\n        el: segEl,\n        event: new EventApi(\n          context,\n          seg.eventRange.def,\n          seg.eventRange.instance,\n        ),\n        jsEvent: ev as MouseEvent, // Is this always a mouse event? See #4655\n        view: context.viewApi,\n      } as EventHoveringArg)\n    }\n  }\n}\n","import { __assign } from 'tslib'\nimport { ViewContextType, buildViewContext } from './ViewContext'\nimport { ViewSpec } from './structs/view-spec'\nimport { ViewProps } from './View'\nimport { Toolbar } from './Toolbar'\nimport { DateProfileGenerator, DateProfile } from './DateProfileGenerator'\nimport { rangeContainsMarker } from './datelib/date-range'\nimport { memoize } from './util/memoize'\nimport { DateMarker } from './datelib/marker'\nimport { CalendarData } from './reducers/data-types'\nimport { ViewPropsTransformerClass } from './plugin-system-struct'\nimport { createElement, createRef, Fragment, VNode } from './vdom'\nimport { ViewContainer } from './ViewContainer'\nimport {\n  Interaction,\n  InteractionSettingsInput,\n  InteractionClass,\n  parseInteractionSettings,\n  interactionSettingsStore,\n} from './interactions/interaction'\nimport { DateComponent } from './component/DateComponent'\nimport { EventClicking } from './interactions/EventClicking'\nimport { EventHovering } from './interactions/EventHovering'\nimport { getNow } from './reducers/current-date'\nimport { CalendarInteraction } from './calendar-utils'\nimport { DelayedRunner } from './util/DelayedRunner'\nimport { PureComponent } from './vdom-util'\nimport { getUniqueDomId } from './util/dom-manip'\n\nexport interface CalendarContentProps extends CalendarData {\n  forPrint: boolean\n  isHeightAuto: boolean\n}\n\nexport class CalendarContent extends PureComponent<CalendarContentProps> {\n  private buildViewContext = memoize(buildViewContext)\n  private buildViewPropTransformers = memoize(buildViewPropTransformers)\n  private buildToolbarProps = memoize(buildToolbarProps)\n  private headerRef = createRef<Toolbar>()\n  private footerRef = createRef<Toolbar>()\n  private interactionsStore: { [componentUid: string]: Interaction[] } = {}\n  private calendarInteractions: CalendarInteraction[]\n\n  // eslint-disable-next-line\n  state = {\n    viewLabelId: getUniqueDomId(),\n  }\n\n  /*\n  renders INSIDE of an outer div\n  */\n  render() {\n    let { props } = this\n    let { toolbarConfig, options } = props\n\n    let toolbarProps = this.buildToolbarProps(\n      props.viewSpec,\n      props.dateProfile,\n      props.dateProfileGenerator,\n      props.currentDate,\n      getNow(props.options.now, props.dateEnv), // TODO: use NowTimer????\n      props.viewTitle,\n    )\n\n    let viewVGrow = false\n    let viewHeight: string | number = ''\n    let viewAspectRatio: number | undefined\n\n    if (props.isHeightAuto || props.forPrint) {\n      viewHeight = ''\n    } else if (options.height != null) {\n      viewVGrow = true\n    } else if (options.contentHeight != null) {\n      viewHeight = options.contentHeight\n    } else {\n      viewAspectRatio = Math.max(options.aspectRatio, 0.5) // prevent from getting too tall\n    }\n\n    let viewContext = this.buildViewContext(\n      props.viewSpec,\n      props.viewApi,\n      props.options,\n      props.dateProfileGenerator,\n      props.dateEnv,\n      props.theme,\n      props.pluginHooks,\n      props.dispatch,\n      props.getCurrentData,\n      props.emitter,\n      props.calendarApi,\n      this.registerInteractiveComponent,\n      this.unregisterInteractiveComponent,\n    )\n\n    let viewLabelId = (toolbarConfig.header && toolbarConfig.header.hasTitle)\n      ? this.state.viewLabelId\n      : ''\n\n    return (\n      <ViewContextType.Provider value={viewContext}>\n        {toolbarConfig.header && (\n          <Toolbar\n            ref={this.headerRef}\n            extraClassName=\"fc-header-toolbar\"\n            model={toolbarConfig.header}\n            titleId={viewLabelId}\n            {...toolbarProps}\n          />\n        )}\n        <ViewContainer\n          liquid={viewVGrow}\n          height={viewHeight}\n          aspectRatio={viewAspectRatio}\n          labeledById={viewLabelId}\n        >\n          {this.renderView(props)}\n          {this.buildAppendContent()}\n        </ViewContainer>\n        {toolbarConfig.footer && (\n          <Toolbar\n            ref={this.footerRef}\n            extraClassName=\"fc-footer-toolbar\"\n            model={toolbarConfig.footer}\n            titleId=\"\"\n            {...toolbarProps}\n          />\n        )}\n      </ViewContextType.Provider>\n    )\n  }\n\n  componentDidMount() {\n    let { props } = this\n\n    this.calendarInteractions = props.pluginHooks.calendarInteractions\n      .map((CalendarInteractionClass) => new CalendarInteractionClass(props))\n\n    window.addEventListener('resize', this.handleWindowResize)\n\n    let { propSetHandlers } = props.pluginHooks\n    for (let propName in propSetHandlers) {\n      propSetHandlers[propName](props[propName], props)\n    }\n  }\n\n  componentDidUpdate(prevProps: CalendarContentProps) {\n    let { props } = this\n\n    let { propSetHandlers } = props.pluginHooks\n    for (let propName in propSetHandlers) {\n      if (props[propName] !== prevProps[propName]) {\n        propSetHandlers[propName](props[propName], props)\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowResize)\n    this.resizeRunner.clear()\n\n    for (let interaction of this.calendarInteractions) {\n      interaction.destroy()\n    }\n\n    this.props.emitter.trigger('_unmount')\n  }\n\n  buildAppendContent(): VNode {\n    let { props } = this\n\n    let children = props.pluginHooks.viewContainerAppends.map(\n      (buildAppendContent) => buildAppendContent(props),\n    )\n\n    return createElement(Fragment, {}, ...children)\n  }\n\n  renderView(props: CalendarContentProps) {\n    let { pluginHooks } = props\n    let { viewSpec } = props\n\n    let viewProps: ViewProps = {\n      dateProfile: props.dateProfile,\n      businessHours: props.businessHours,\n      eventStore: props.renderableEventStore, // !\n      eventUiBases: props.eventUiBases,\n      dateSelection: props.dateSelection,\n      eventSelection: props.eventSelection,\n      eventDrag: props.eventDrag,\n      eventResize: props.eventResize,\n      isHeightAuto: props.isHeightAuto,\n      forPrint: props.forPrint,\n    }\n\n    let transformers = this.buildViewPropTransformers(pluginHooks.viewPropsTransformers)\n\n    for (let transformer of transformers) {\n      __assign(\n        viewProps,\n        transformer.transform(viewProps, props),\n      )\n    }\n\n    let ViewComponent = viewSpec.component\n\n    return (\n      <ViewComponent {...viewProps} />\n    )\n  }\n\n  // Component Registration\n  // -----------------------------------------------------------------------------------------------------------------\n\n  registerInteractiveComponent = (component: DateComponent<any>, settingsInput: InteractionSettingsInput) => {\n    let settings = parseInteractionSettings(component, settingsInput)\n    let DEFAULT_INTERACTIONS: InteractionClass[] = [\n      EventClicking,\n      EventHovering,\n    ]\n    let interactionClasses: InteractionClass[] = DEFAULT_INTERACTIONS.concat(\n      this.props.pluginHooks.componentInteractions,\n    )\n    let interactions = interactionClasses.map((TheInteractionClass) => new TheInteractionClass(settings))\n\n    this.interactionsStore[component.uid] = interactions\n    interactionSettingsStore[component.uid] = settings\n  }\n\n  unregisterInteractiveComponent = (component: DateComponent<any>) => {\n    for (let listener of this.interactionsStore[component.uid]) {\n      listener.destroy()\n    }\n\n    delete this.interactionsStore[component.uid]\n    delete interactionSettingsStore[component.uid]\n  }\n\n  // Resizing\n  // -----------------------------------------------------------------------------------------------------------------\n\n  resizeRunner = new DelayedRunner(() => {\n    this.props.emitter.trigger('_resize', true) // should window resizes be considered \"forced\" ?\n    this.props.emitter.trigger('windowResize', { view: this.props.viewApi })\n  })\n\n  handleWindowResize = (ev: UIEvent) => {\n    let { options } = this.props\n\n    if (\n      options.handleWindowResize &&\n      ev.target === window // avoid jqui events\n    ) {\n      this.resizeRunner.request(options.windowResizeDelay)\n    }\n  }\n}\n\nfunction buildToolbarProps(\n  viewSpec: ViewSpec,\n  dateProfile: DateProfile,\n  dateProfileGenerator: DateProfileGenerator,\n  currentDate: DateMarker,\n  now: DateMarker,\n  title: string,\n) {\n  // don't force any date-profiles to valid date profiles (the `false`) so that we can tell if it's invalid\n  let todayInfo = dateProfileGenerator.build(now, undefined, false) // TODO: need `undefined` or else INFINITE LOOP for some reason\n  let prevInfo = dateProfileGenerator.buildPrev(dateProfile, currentDate, false)\n  let nextInfo = dateProfileGenerator.buildNext(dateProfile, currentDate, false)\n\n  return {\n    title,\n    activeButton: viewSpec.type,\n    navUnit: viewSpec.singleUnit,\n    isTodayEnabled: todayInfo.isValid && !rangeContainsMarker(dateProfile.currentRange, now),\n    isPrevEnabled: prevInfo.isValid,\n    isNextEnabled: nextInfo.isValid,\n  }\n}\n\n// Plugin\n// -----------------------------------------------------------------------------------------------------------------\n\nfunction buildViewPropTransformers(theClasses: ViewPropsTransformerClass[]) {\n  return theClasses.map((TheClass) => new TheClass())\n}\n","import { ComponentChildren } from './vdom'\nimport { BaseComponent } from './vdom-util'\nimport { CssDimValue } from './scrollgrid/util'\nimport { CalendarOptions, CalendarListeners } from './options'\nimport { Theme } from './theme/Theme'\nimport { getCanVGrowWithinCell } from './util/table-styling'\nimport { Emitter } from './common/Emitter'\n\nexport interface CalendarRootProps {\n  options: CalendarOptions\n  theme: Theme\n  emitter: Emitter<CalendarListeners>\n  children: (classNames: string[], height: CssDimValue, isHeightAuto: boolean, forPrint: boolean) => ComponentChildren\n}\n\ninterface CalendarRootState {\n  forPrint: boolean\n}\n\nexport class CalendarRoot extends BaseComponent<CalendarRootProps, CalendarRootState> {\n  state = {\n    forPrint: false,\n  }\n\n  render() {\n    let { props } = this\n    let { options } = props\n    let { forPrint } = this.state\n\n    let isHeightAuto = forPrint || options.height === 'auto' || options.contentHeight === 'auto'\n    let height = (!isHeightAuto && options.height != null) ? options.height : ''\n\n    let classNames: string[] = [\n      'fc',\n      forPrint ? 'fc-media-print' : 'fc-media-screen',\n      `fc-direction-${options.direction}`,\n      props.theme.getClass('root'),\n    ]\n\n    if (!getCanVGrowWithinCell()) {\n      classNames.push('fc-liquid-hack')\n    }\n\n    return props.children(classNames, height, isHeightAuto, forPrint)\n  }\n\n  componentDidMount() {\n    let { emitter } = this.props\n    emitter.on('_beforeprint', this.handleBeforePrint)\n    emitter.on('_afterprint', this.handleAfterPrint)\n  }\n\n  componentWillUnmount() {\n    let { emitter } = this.props\n    emitter.off('_beforeprint', this.handleBeforePrint)\n    emitter.off('_afterprint', this.handleAfterPrint)\n  }\n\n  handleBeforePrint = () => {\n    this.setState({ forPrint: true })\n  }\n\n  handleAfterPrint = () => {\n    this.setState({ forPrint: false })\n  }\n}\n","import { DayHeaderContentArg } from '../render-hook-misc'\n\nexport const CLASS_NAME = 'fc-col-header-cell' // do the cushion too? no\n\nexport function renderInner(hookProps: DayHeaderContentArg) {\n  return hookProps.text\n}\n","import { DateRange } from '../datelib/date-range'\nimport { getDayClassNames, getDateMeta } from '../component/date-rendering'\nimport { DateMarker } from '../datelib/marker'\nimport { createElement } from '../vdom'\nimport { DateFormatter } from '../datelib/DateFormatter'\nimport { formatDayString } from '../datelib/formatting-utils'\nimport { BaseComponent } from '../vdom-util'\nimport { RenderHook } from './render-hook'\nimport { buildNavLinkAttrs } from './nav-link'\nimport { DateProfile } from '../DateProfileGenerator'\nimport { DayHeaderContentArg } from '../render-hook-misc'\nimport { Dictionary } from '../options'\nimport { CLASS_NAME, renderInner } from './table-cell-util'\n\nexport interface TableDateCellProps {\n  date: DateMarker\n  dateProfile: DateProfile\n  todayRange: DateRange\n  colCnt: number\n  dayHeaderFormat: DateFormatter\n  colSpan?: number\n  isSticky?: boolean // TODO: get this outta here somehow\n  extraDataAttrs?: Dictionary\n  extraHookProps?: Dictionary\n}\n\nexport class TableDateCell extends BaseComponent<TableDateCellProps> { // BAD name for this class now. used in the Header\n  render() {\n    let { dateEnv, options, theme, viewApi } = this.context\n    let { props } = this\n    let { date, dateProfile } = props\n    let dayMeta = getDateMeta(date, props.todayRange, null, dateProfile)\n\n    let classNames = [CLASS_NAME].concat(\n      getDayClassNames(dayMeta, theme),\n    )\n    let text = dateEnv.format(date, props.dayHeaderFormat)\n\n    // if colCnt is 1, we are already in a day-view and don't need a navlink\n    let navLinkAttrs = (!dayMeta.isDisabled && props.colCnt > 1)\n      ? buildNavLinkAttrs(this.context, date)\n      : {}\n\n    let hookProps: DayHeaderContentArg = {\n      date: dateEnv.toDate(date),\n      view: viewApi,\n      ...props.extraHookProps,\n      text,\n      ...dayMeta,\n    }\n\n    return (\n      <RenderHook\n        hookProps={hookProps}\n        classNames={options.dayHeaderClassNames}\n        content={options.dayHeaderContent}\n        defaultContent={renderInner}\n        didMount={options.dayHeaderDidMount}\n        willUnmount={options.dayHeaderWillUnmount}\n      >\n        {(rootElRef, customClassNames, innerElRef, innerContent) => (\n          <th\n            ref={rootElRef}\n            role=\"columnheader\"\n            className={classNames.concat(customClassNames).join(' ')}\n            data-date={!dayMeta.isDisabled ? formatDayString(date) : undefined}\n            colSpan={props.colSpan}\n            {...props.extraDataAttrs}\n          >\n            <div className=\"fc-scrollgrid-sync-inner\">\n              {!dayMeta.isDisabled && (\n                <a\n                  ref={innerElRef}\n                  className={[\n                    'fc-col-header-cell-cushion',\n                    props.isSticky ? 'fc-sticky' : '',\n                  ].join(' ')}\n                  {...navLinkAttrs}\n                >\n                  {innerContent}\n                </a>\n              )}\n            </div>\n          </th>\n        )}\n      </RenderHook>\n    )\n  }\n}\n","import { getDayClassNames, DateMeta } from '../component/date-rendering'\nimport { addDays } from '../datelib/marker'\nimport { createElement } from '../vdom'\nimport { DateFormatter } from '../datelib/DateFormatter'\nimport { BaseComponent } from '../vdom-util'\nimport { RenderHook } from './render-hook'\nimport { Dictionary } from '../options'\nimport { CLASS_NAME, renderInner } from './table-cell-util'\nimport { DayHeaderContentArg } from '../render-hook-misc'\nimport { createFormatter } from '../datelib/formatting'\n\nexport interface TableDowCellProps {\n  dow: number\n  dayHeaderFormat: DateFormatter\n  colSpan?: number\n  isSticky?: boolean // TODO: get this outta here somehow\n  extraHookProps?: Dictionary\n  extraDataAttrs?: Dictionary\n  extraClassNames?: string[]\n}\n\nconst WEEKDAY_FORMAT = createFormatter({ weekday: 'long' })\n\nexport class TableDowCell extends BaseComponent<TableDowCellProps> {\n  render() {\n    let { props } = this\n    let { dateEnv, theme, viewApi, options } = this.context\n    let date = addDays(new Date(259200000), props.dow) // start with Sun, 04 Jan 1970 00:00:00 GMT\n    let dateMeta: DateMeta = {\n      dow: props.dow,\n      isDisabled: false,\n      isFuture: false,\n      isPast: false,\n      isToday: false,\n      isOther: false,\n    }\n    let classNames = [CLASS_NAME].concat(\n      getDayClassNames(dateMeta, theme),\n      props.extraClassNames || [],\n    )\n    let text = dateEnv.format(date, props.dayHeaderFormat)\n    let hookProps: DayHeaderContentArg = { // TODO: make this public?\n      date,\n      ...dateMeta,\n      view: viewApi,\n      ...props.extraHookProps,\n      text,\n    }\n\n    return (\n      <RenderHook\n        hookProps={hookProps}\n        classNames={options.dayHeaderClassNames}\n        content={options.dayHeaderContent}\n        defaultContent={renderInner}\n        didMount={options.dayHeaderDidMount}\n        willUnmount={options.dayHeaderWillUnmount}\n      >\n        {(rootElRef, customClassNames, innerElRef, innerContent) => (\n          <th\n            ref={rootElRef}\n            role=\"columnheader\"\n            className={classNames.concat(customClassNames).join(' ')}\n            colSpan={props.colSpan}\n            {...props.extraDataAttrs}\n          >\n            <div className=\"fc-scrollgrid-sync-inner\">\n              <a\n                aria-label={dateEnv.format(date, WEEKDAY_FORMAT)}\n                className={[\n                  'fc-col-header-cell-cushion',\n                  props.isSticky ? 'fc-sticky' : '',\n                ].join(' ')}\n                ref={innerElRef}\n              >\n                {innerContent}\n              </a>\n            </div>\n          </th>\n        )}\n      </RenderHook>\n    )\n  }\n}\n","import { DateMarker, addMs, startOfDay, addDays } from './datelib/marker'\nimport { createDuration } from './datelib/duration'\nimport { ViewContext, ViewContextType } from './ViewContext'\nimport { ComponentChildren, Component } from './vdom'\nimport { DateRange } from './datelib/date-range'\nimport { getNow } from './reducers/current-date'\n\nexport interface NowTimerProps {\n  unit: string // TODO: add type of unit\n  children: (now: DateMarker, todayRange: DateRange) => ComponentChildren\n}\n\ninterface NowTimerState {\n  nowDate: DateMarker\n  todayRange: DateRange\n}\n\nexport class NowTimer extends Component<NowTimerProps, NowTimerState> {\n  static contextType: any = ViewContextType\n  context: ViewContext // do this for all components that use the context!!!\n  initialNowDate: DateMarker\n  initialNowQueriedMs: number\n  timeoutId: any\n\n  constructor(props: NowTimerProps, context: ViewContext) {\n    super(props, context)\n\n    this.initialNowDate = getNow(context.options.now, context.dateEnv)\n    this.initialNowQueriedMs = new Date().valueOf()\n\n    this.state = this.computeTiming().currentState\n  }\n\n  render() {\n    let { props, state } = this\n    return props.children(state.nowDate, state.todayRange)\n  }\n\n  componentDidMount() {\n    this.setTimeout()\n  }\n\n  componentDidUpdate(prevProps: NowTimerProps) {\n    if (prevProps.unit !== this.props.unit) {\n      this.clearTimeout()\n      this.setTimeout()\n    }\n  }\n\n  componentWillUnmount() {\n    this.clearTimeout()\n  }\n\n  private computeTiming() {\n    let { props, context } = this\n    let unroundedNow = addMs(this.initialNowDate, new Date().valueOf() - this.initialNowQueriedMs)\n    let currentUnitStart = context.dateEnv.startOf(unroundedNow, props.unit)\n    let nextUnitStart = context.dateEnv.add(currentUnitStart, createDuration(1, props.unit))\n    let waitMs = nextUnitStart.valueOf() - unroundedNow.valueOf()\n\n    // there is a max setTimeout ms value (https://stackoverflow.com/a/3468650/96342)\n    // ensure no longer than a day\n    waitMs = Math.min(1000 * 60 * 60 * 24, waitMs)\n\n    return {\n      currentState: { nowDate: currentUnitStart, todayRange: buildDayRange(currentUnitStart) } as NowTimerState,\n      nextState: { nowDate: nextUnitStart, todayRange: buildDayRange(nextUnitStart) } as NowTimerState,\n      waitMs,\n    }\n  }\n\n  private setTimeout() {\n    let { nextState, waitMs } = this.computeTiming()\n\n    this.timeoutId = setTimeout(() => {\n      this.setState(nextState, () => {\n        this.setTimeout()\n      })\n    }, waitMs)\n  }\n\n  private clearTimeout() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId)\n    }\n  }\n}\n\nfunction buildDayRange(date: DateMarker): DateRange { // TODO: make this a general util\n  let start = startOfDay(date)\n  let end = addDays(start, 1)\n\n  return { start, end }\n}\n","import { BaseComponent } from '../vdom-util'\nimport { DateMarker } from '../datelib/marker'\nimport { computeFallbackHeaderFormat } from './table-utils'\nimport { VNode, createElement } from '../vdom'\nimport { TableDateCell } from './TableDateCell'\nimport { TableDowCell } from './TableDowCell'\nimport { NowTimer } from '../NowTimer'\nimport { DateRange } from '../datelib/date-range'\nimport { memoize } from '../util/memoize'\nimport { DateProfile } from '../DateProfileGenerator'\nimport { DateFormatter } from '../datelib/DateFormatter'\n\nexport interface DayHeaderProps {\n  dateProfile: DateProfile\n  dates: DateMarker[]\n  datesRepDistinctDays: boolean\n  renderIntro?: (rowKey: string) => VNode\n}\n\nexport class DayHeader extends BaseComponent<DayHeaderProps> { // TODO: rename to DayHeaderTr?\n  createDayHeaderFormatter = memoize(createDayHeaderFormatter)\n\n  render() {\n    let { context } = this\n    let { dates, dateProfile, datesRepDistinctDays, renderIntro } = this.props\n\n    let dayHeaderFormat = this.createDayHeaderFormatter(\n      context.options.dayHeaderFormat,\n      datesRepDistinctDays,\n      dates.length,\n    )\n\n    return (\n      <NowTimer unit=\"day\">\n        {(nowDate: DateMarker, todayRange: DateRange) => (\n          <tr role=\"row\">\n            {renderIntro && renderIntro('day')}\n            {dates.map((date) => (\n              datesRepDistinctDays ? (\n                <TableDateCell\n                  key={date.toISOString()}\n                  date={date}\n                  dateProfile={dateProfile}\n                  todayRange={todayRange}\n                  colCnt={dates.length}\n                  dayHeaderFormat={dayHeaderFormat}\n                />\n              ) : (\n                <TableDowCell\n                  key={date.getUTCDay()}\n                  dow={date.getUTCDay()}\n                  dayHeaderFormat={dayHeaderFormat}\n                />\n              )\n            ))}\n          </tr>\n        )}\n      </NowTimer>\n    )\n  }\n}\n\nfunction createDayHeaderFormatter(explicitFormat: DateFormatter, datesRepDistinctDays, dateCnt) {\n  return explicitFormat || computeFallbackHeaderFormat(datesRepDistinctDays, dateCnt)\n}\n","import { createFormatter } from '../datelib/formatting'\n\n// Computes a default column header formatting string if `colFormat` is not explicitly defined\nexport function computeFallbackHeaderFormat(datesRepDistinctDays: boolean, dayCnt: number) {\n  // if more than one week row, or if there are a lot of columns with not much space,\n  // put just the day numbers will be in each cell\n  if (!datesRepDistinctDays || dayCnt > 10) {\n    return createFormatter({ weekday: 'short' }) // \"Sat\"\n  }\n\n  if (dayCnt > 1) {\n    return createFormatter({ weekday: 'short', month: 'numeric', day: 'numeric', omitCommas: true }) // \"Sat 11/12\"\n  }\n\n  return createFormatter({ weekday: 'long' }) // \"Saturday\"\n}\n","import { DateProfileGenerator } from '../DateProfileGenerator'\nimport { DateMarker, addDays, diffDays } from '../datelib/marker'\nimport { DateRange } from '../datelib/date-range'\n\nexport interface DaySeriesSeg {\n  firstIndex: number\n  lastIndex: number\n  isStart: boolean\n  isEnd: boolean\n}\n\nexport class DaySeriesModel {\n  cnt: number\n  dates: DateMarker[] // whole-day dates for each column. left to right\n  indices: number[] // for each day from start, the offset\n\n  constructor(range: DateRange, dateProfileGenerator: DateProfileGenerator) {\n    let date: DateMarker = range.start\n    let { end } = range\n    let indices: number[] = []\n    let dates: DateMarker[] = []\n    let dayIndex = -1\n\n    while (date < end) { // loop each day from start to end\n      if (dateProfileGenerator.isHiddenDay(date)) {\n        indices.push(dayIndex + 0.5) // mark that it's between indices\n      } else {\n        dayIndex += 1\n        indices.push(dayIndex)\n        dates.push(date)\n      }\n      date = addDays(date, 1)\n    }\n\n    this.dates = dates\n    this.indices = indices\n    this.cnt = dates.length\n  }\n\n  sliceRange(range: DateRange): DaySeriesSeg | null {\n    let firstIndex = this.getDateDayIndex(range.start) // inclusive first index\n    let lastIndex = this.getDateDayIndex(addDays(range.end, -1)) // inclusive last index\n\n    let clippedFirstIndex = Math.max(0, firstIndex)\n    let clippedLastIndex = Math.min(this.cnt - 1, lastIndex)\n\n    // deal with in-between indices\n    clippedFirstIndex = Math.ceil(clippedFirstIndex) // in-between starts round to next cell\n    clippedLastIndex = Math.floor(clippedLastIndex) // in-between ends round to prev cell\n\n    if (clippedFirstIndex <= clippedLastIndex) {\n      return {\n        firstIndex: clippedFirstIndex,\n        lastIndex: clippedLastIndex,\n        isStart: firstIndex === clippedFirstIndex,\n        isEnd: lastIndex === clippedLastIndex,\n      }\n    }\n    return null\n  }\n\n  // Given a date, returns its chronolocial cell-index from the first cell of the grid.\n  // If the date lies between cells (because of hiddenDays), returns a floating-point value between offsets.\n  // If before the first offset, returns a negative number.\n  // If after the last offset, returns an offset past the last cell offset.\n  // Only works for *start* dates of cells. Will not work for exclusive end dates for cells.\n  private getDateDayIndex(date: DateMarker) {\n    let { indices } = this\n    let dayOffset = Math.floor(diffDays(this.dates[0], date))\n\n    if (dayOffset < 0) {\n      return indices[0] - 1\n    }\n\n    if (dayOffset >= indices.length) {\n      return indices[indices.length - 1] + 1\n    }\n\n    return indices[dayOffset]\n  }\n}\n","import { DaySeriesModel } from './DaySeriesModel'\nimport { DateRange } from '../datelib/date-range'\nimport { DateMarker } from '../datelib/marker'\nimport { Seg } from '../component/DateComponent'\nimport { Dictionary } from '../options'\n\nexport interface DayTableSeg extends Seg {\n  row: number\n  firstCol: number\n  lastCol: number\n}\n\nexport interface DayTableCell {\n  key: string // probably just the serialized date, but could be other metadata if this col is specific to another entity\n  date: DateMarker\n  extraHookProps?: Dictionary\n  extraDataAttrs?: Dictionary\n  extraClassNames?: string[]\n  extraDateSpan?: Dictionary\n}\n\nexport class DayTableModel {\n  rowCnt: number\n  colCnt: number\n  cells: DayTableCell[][]\n  headerDates: DateMarker[]\n\n  private daySeries: DaySeriesModel\n\n  constructor(daySeries: DaySeriesModel, breakOnWeeks: boolean) {\n    let { dates } = daySeries\n    let daysPerRow\n    let firstDay\n    let rowCnt\n\n    if (breakOnWeeks) {\n      // count columns until the day-of-week repeats\n      firstDay = dates[0].getUTCDay()\n      for (daysPerRow = 1; daysPerRow < dates.length; daysPerRow += 1) {\n        if (dates[daysPerRow].getUTCDay() === firstDay) {\n          break\n        }\n      }\n      rowCnt = Math.ceil(dates.length / daysPerRow)\n    } else {\n      rowCnt = 1\n      daysPerRow = dates.length\n    }\n\n    this.rowCnt = rowCnt\n    this.colCnt = daysPerRow\n    this.daySeries = daySeries\n    this.cells = this.buildCells()\n    this.headerDates = this.buildHeaderDates()\n  }\n\n  private buildCells() {\n    let rows = []\n\n    for (let row = 0; row < this.rowCnt; row += 1) {\n      let cells = []\n\n      for (let col = 0; col < this.colCnt; col += 1) {\n        cells.push(\n          this.buildCell(row, col),\n        )\n      }\n\n      rows.push(cells)\n    }\n\n    return rows\n  }\n\n  private buildCell(row, col): DayTableCell {\n    let date = this.daySeries.dates[row * this.colCnt + col]\n    return {\n      key: date.toISOString(),\n      date,\n    }\n  }\n\n  private buildHeaderDates() {\n    let dates = []\n\n    for (let col = 0; col < this.colCnt; col += 1) {\n      dates.push(this.cells[0][col].date)\n    }\n\n    return dates\n  }\n\n  sliceRange(range: DateRange): DayTableSeg[] {\n    let { colCnt } = this\n    let seriesSeg = this.daySeries.sliceRange(range)\n    let segs: DayTableSeg[] = []\n\n    if (seriesSeg) {\n      let { firstIndex, lastIndex } = seriesSeg\n      let index = firstIndex\n\n      while (index <= lastIndex) {\n        let row = Math.floor(index / colCnt)\n        let nextIndex = Math.min((row + 1) * colCnt, lastIndex + 1)\n\n        segs.push({\n          row,\n          firstCol: index % colCnt,\n          lastCol: (nextIndex - 1) % colCnt,\n          isStart: seriesSeg.isStart && index === firstIndex,\n          isEnd: seriesSeg.isEnd && (nextIndex - 1) === lastIndex,\n        })\n\n        index = nextIndex\n      }\n    }\n\n    return segs\n  }\n}\n","import { DateRange } from '../datelib/date-range'\nimport { EventStore } from '../structs/event-store'\nimport { EventUiHash } from '../component/event-ui'\nimport { sliceEventStore, EventRenderRange } from '../component/event-rendering'\nimport { DateProfile } from '../DateProfileGenerator'\nimport { Seg, EventSegUiInteractionState } from '../component/DateComponent' // TODO: rename EventSegUiInteractionState, move here\nimport { DateSpan, fabricateEventRange } from '../structs/date-span'\nimport { EventInteractionState } from '../interactions/event-interaction-state'\nimport { Duration } from '../datelib/duration'\nimport { memoize } from '../util/memoize'\nimport { DateMarker, addMs, addDays } from '../datelib/marker'\nimport { CalendarContext } from '../CalendarContext'\nimport { expandRecurring } from '../structs/recurring-event'\n\nexport interface SliceableProps {\n  dateSelection: DateSpan\n  businessHours: EventStore\n  eventStore: EventStore\n  eventDrag: EventInteractionState | null\n  eventResize: EventInteractionState | null\n  eventSelection: string\n  eventUiBases: EventUiHash\n}\n\nexport interface SlicedProps<SegType extends Seg> {\n  dateSelectionSegs: SegType[]\n  businessHourSegs: SegType[]\n  fgEventSegs: SegType[]\n  bgEventSegs: SegType[]\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n  eventSelection: string\n}\n\nexport abstract class Slicer<SegType extends Seg, ExtraArgs extends any[] = []> {\n  private sliceBusinessHours = memoize(this._sliceBusinessHours)\n  private sliceDateSelection = memoize(this._sliceDateSpan)\n  private sliceEventStore = memoize(this._sliceEventStore)\n  private sliceEventDrag = memoize(this._sliceInteraction)\n  private sliceEventResize = memoize(this._sliceInteraction)\n\n  abstract sliceRange(dateRange: DateRange, ...extraArgs: ExtraArgs): SegType[]\n  protected forceDayIfListItem = false // hack\n\n  sliceProps(\n    props: SliceableProps,\n    dateProfile: DateProfile,\n    nextDayThreshold: Duration | null,\n    context: CalendarContext,\n    ...extraArgs: ExtraArgs\n  ): SlicedProps<SegType> {\n    let { eventUiBases } = props\n    let eventSegs = this.sliceEventStore(props.eventStore, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs)\n\n    return {\n      dateSelectionSegs: this.sliceDateSelection(props.dateSelection, eventUiBases, context, ...extraArgs),\n      businessHourSegs: this.sliceBusinessHours(props.businessHours, dateProfile, nextDayThreshold, context, ...extraArgs),\n      fgEventSegs: eventSegs.fg,\n      bgEventSegs: eventSegs.bg,\n      eventDrag: this.sliceEventDrag(props.eventDrag, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs),\n      eventResize: this.sliceEventResize(props.eventResize, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs),\n      eventSelection: props.eventSelection,\n    } // TODO: give interactionSegs?\n  }\n\n  sliceNowDate( // does not memoize\n    date: DateMarker,\n    context: CalendarContext,\n    ...extraArgs: ExtraArgs\n  ): SegType[] {\n    return this._sliceDateSpan(\n      { range: { start: date, end: addMs(date, 1) }, allDay: false }, // add 1 ms, protect against null range\n      {},\n      context,\n      ...extraArgs,\n    )\n  }\n\n  private _sliceBusinessHours(\n    businessHours: EventStore,\n    dateProfile: DateProfile,\n    nextDayThreshold: Duration | null,\n    context: CalendarContext,\n    ...extraArgs: ExtraArgs\n  ): SegType[] {\n    if (!businessHours) {\n      return []\n    }\n\n    return this._sliceEventStore(\n      expandRecurring(\n        businessHours,\n        computeActiveRange(dateProfile, Boolean(nextDayThreshold)),\n        context,\n      ),\n      {},\n      dateProfile,\n      nextDayThreshold,\n      ...extraArgs,\n    ).bg\n  }\n\n  private _sliceEventStore(\n    eventStore: EventStore,\n    eventUiBases: EventUiHash,\n    dateProfile: DateProfile,\n    nextDayThreshold: Duration | null,\n    ...extraArgs: ExtraArgs\n  ): { bg: SegType[], fg: SegType[] } {\n    if (eventStore) {\n      let rangeRes = sliceEventStore(\n        eventStore,\n        eventUiBases,\n        computeActiveRange(dateProfile, Boolean(nextDayThreshold)),\n        nextDayThreshold,\n      )\n\n      return {\n        bg: this.sliceEventRanges(rangeRes.bg, extraArgs),\n        fg: this.sliceEventRanges(rangeRes.fg, extraArgs),\n      }\n    }\n    return { bg: [], fg: [] }\n  }\n\n  private _sliceInteraction(\n    interaction: EventInteractionState,\n    eventUiBases: EventUiHash,\n    dateProfile: DateProfile,\n    nextDayThreshold: Duration | null,\n    ...extraArgs: ExtraArgs\n  ): EventSegUiInteractionState {\n    if (!interaction) {\n      return null\n    }\n\n    let rangeRes = sliceEventStore(\n      interaction.mutatedEvents,\n      eventUiBases,\n      computeActiveRange(dateProfile, Boolean(nextDayThreshold)),\n      nextDayThreshold,\n    )\n\n    return {\n      segs: this.sliceEventRanges(rangeRes.fg, extraArgs),\n      affectedInstances: interaction.affectedEvents.instances,\n      isEvent: interaction.isEvent,\n    }\n  }\n\n  private _sliceDateSpan(\n    dateSpan: DateSpan,\n    eventUiBases: EventUiHash,\n    context: CalendarContext,\n    ...extraArgs: ExtraArgs\n  ): SegType[] {\n    if (!dateSpan) {\n      return []\n    }\n\n    let eventRange = fabricateEventRange(dateSpan, eventUiBases, context)\n    let segs = this.sliceRange(dateSpan.range, ...extraArgs)\n\n    for (let seg of segs) {\n      seg.eventRange = eventRange\n    }\n\n    return segs\n  }\n\n  /*\n  \"complete\" seg means it has component and eventRange\n  */\n  private sliceEventRanges(\n    eventRanges: EventRenderRange[],\n    extraArgs: ExtraArgs,\n  ): SegType[] {\n    let segs: SegType[] = []\n\n    for (let eventRange of eventRanges) {\n      segs.push(...this.sliceEventRange(eventRange, extraArgs))\n    }\n\n    return segs\n  }\n\n  /*\n  \"complete\" seg means it has component and eventRange\n  */\n  private sliceEventRange(\n    eventRange: EventRenderRange,\n    extraArgs: ExtraArgs,\n  ): SegType[] {\n    let dateRange = eventRange.range\n\n    // hack to make multi-day events that are being force-displayed as list-items to take up only one day\n    if (this.forceDayIfListItem && eventRange.ui.display === 'list-item') {\n      dateRange = {\n        start: dateRange.start,\n        end: addDays(dateRange.start, 1),\n      }\n    }\n\n    let segs = this.sliceRange(dateRange, ...extraArgs)\n\n    for (let seg of segs) {\n      seg.eventRange = eventRange\n      seg.isStart = eventRange.isStart && seg.isStart\n      seg.isEnd = eventRange.isEnd && seg.isEnd\n    }\n\n    return segs\n  }\n}\n\n/*\nfor incorporating slotMinTime/slotMaxTime if appropriate\nTODO: should be part of DateProfile!\nTimelineDateProfile already does this btw\n*/\nfunction computeActiveRange(dateProfile: DateProfile, isComponentAllDay: boolean): DateRange {\n  let range = dateProfile.activeRange\n\n  if (isComponentAllDay) {\n    return range\n  }\n\n  return {\n    start: addMs(range.start, dateProfile.slotMinTime.milliseconds),\n    end: addMs(range.end, dateProfile.slotMaxTime.milliseconds - 864e5), // 864e5 = ms in a day\n  }\n}\n","import { EventStore, filterEventStoreDefs } from './structs/event-store'\nimport { DateSpan } from './structs/date-span'\nimport { rangeContainsRange, rangesIntersect, DateRange, OpenDateRange } from './datelib/date-range'\nimport { EventApi } from './api/EventApi'\nimport { compileEventUis } from './component/event-rendering'\nimport { excludeInstances } from './reducers/eventStore'\nimport { EventInteractionState } from './interactions/event-interaction-state'\nimport { SplittableProps } from './component/event-splitting'\nimport { mapHash } from './util/object'\nimport { CalendarContext } from './CalendarContext'\nimport { buildDateSpanApiWithContext } from './calendar-utils'\nimport { Constraint } from './structs/constraint'\nimport { expandRecurring } from './structs/recurring-event'\nimport { DateProfile } from './DateProfileGenerator'\n\n// high-level segmenting-aware tester functions\n// ------------------------------------------------------------------------------------------------------------------------\n\nexport function isInteractionValid(\n  interaction: EventInteractionState,\n  dateProfile: DateProfile,\n  context: CalendarContext,\n) {\n  let { instances } = interaction.mutatedEvents\n  for (let instanceId in instances) {\n    if (!rangeContainsRange(dateProfile.validRange, instances[instanceId].range)) {\n      return false\n    }\n  }\n  return isNewPropsValid({ eventDrag: interaction }, context) // HACK: the eventDrag props is used for ALL interactions\n}\n\nexport function isDateSelectionValid(\n  dateSelection: DateSpan,\n  dateProfile: DateProfile,\n  context: CalendarContext,\n) {\n  if (!rangeContainsRange(dateProfile.validRange, dateSelection.range)) {\n    return false\n  }\n  return isNewPropsValid({ dateSelection }, context)\n}\n\nfunction isNewPropsValid(newProps, context: CalendarContext) {\n  let calendarState = context.getCurrentData()\n\n  let props = {\n    businessHours: calendarState.businessHours,\n    dateSelection: '',\n    eventStore: calendarState.eventStore,\n    eventUiBases: calendarState.eventUiBases,\n    eventSelection: '',\n    eventDrag: null,\n    eventResize: null,\n    ...newProps,\n  }\n\n  return (context.pluginHooks.isPropsValid || isPropsValid)(props, context)\n}\n\nexport function isPropsValid(state: SplittableProps, context: CalendarContext, dateSpanMeta = {}, filterConfig?): boolean {\n  if (state.eventDrag && !isInteractionPropsValid(state, context, dateSpanMeta, filterConfig)) {\n    return false\n  }\n\n  if (state.dateSelection && !isDateSelectionPropsValid(state, context, dateSpanMeta, filterConfig)) {\n    return false\n  }\n\n  return true\n}\n\n// Moving Event Validation\n// ------------------------------------------------------------------------------------------------------------------------\n\nfunction isInteractionPropsValid(state: SplittableProps, context: CalendarContext, dateSpanMeta: any, filterConfig): boolean {\n  let currentState = context.getCurrentData()\n  let interaction = state.eventDrag // HACK: the eventDrag props is used for ALL interactions\n\n  let subjectEventStore = interaction.mutatedEvents\n  let subjectDefs = subjectEventStore.defs\n  let subjectInstances = subjectEventStore.instances\n  let subjectConfigs = compileEventUis(\n    subjectDefs,\n    interaction.isEvent ?\n      state.eventUiBases :\n      { '': currentState.selectionConfig }, // if not a real event, validate as a selection\n  )\n\n  if (filterConfig) {\n    subjectConfigs = mapHash(subjectConfigs, filterConfig)\n  }\n\n  // exclude the subject events. TODO: exclude defs too?\n  let otherEventStore = excludeInstances(state.eventStore, interaction.affectedEvents.instances)\n\n  let otherDefs = otherEventStore.defs\n  let otherInstances = otherEventStore.instances\n  let otherConfigs = compileEventUis(otherDefs, state.eventUiBases)\n\n  for (let subjectInstanceId in subjectInstances) {\n    let subjectInstance = subjectInstances[subjectInstanceId]\n    let subjectRange = subjectInstance.range\n    let subjectConfig = subjectConfigs[subjectInstance.defId]\n    let subjectDef = subjectDefs[subjectInstance.defId]\n\n    // constraint\n    if (!allConstraintsPass(subjectConfig.constraints, subjectRange, otherEventStore, state.businessHours, context)) {\n      return false\n    }\n\n    // overlap\n\n    let { eventOverlap } = context.options\n    let eventOverlapFunc = typeof eventOverlap === 'function' ? eventOverlap : null\n\n    for (let otherInstanceId in otherInstances) {\n      let otherInstance = otherInstances[otherInstanceId]\n\n      // intersect! evaluate\n      if (rangesIntersect(subjectRange, otherInstance.range)) {\n        let otherOverlap = otherConfigs[otherInstance.defId].overlap\n\n        // consider the other event's overlap. only do this if the subject event is a \"real\" event\n        if (otherOverlap === false && interaction.isEvent) {\n          return false\n        }\n\n        if (subjectConfig.overlap === false) {\n          return false\n        }\n\n        if (eventOverlapFunc && !eventOverlapFunc(\n          new EventApi(context, otherDefs[otherInstance.defId], otherInstance), // still event\n          new EventApi(context, subjectDef, subjectInstance), // moving event\n        )) {\n          return false\n        }\n      }\n    }\n\n    // allow (a function)\n\n    let calendarEventStore = currentState.eventStore // need global-to-calendar, not local to component (splittable)state\n\n    for (let subjectAllow of subjectConfig.allows) {\n      let subjectDateSpan: DateSpan = {\n        ...dateSpanMeta,\n        range: subjectInstance.range,\n        allDay: subjectDef.allDay,\n      }\n\n      let origDef = calendarEventStore.defs[subjectDef.defId]\n      let origInstance = calendarEventStore.instances[subjectInstanceId]\n      let eventApi\n\n      if (origDef) { // was previously in the calendar\n        eventApi = new EventApi(context, origDef, origInstance)\n      } else { // was an external event\n        eventApi = new EventApi(context, subjectDef) // no instance, because had no dates\n      }\n\n      if (!subjectAllow(\n        buildDateSpanApiWithContext(subjectDateSpan, context),\n        eventApi,\n      )) {\n        return false\n      }\n    }\n  }\n\n  return true\n}\n\n// Date Selection Validation\n// ------------------------------------------------------------------------------------------------------------------------\n\nfunction isDateSelectionPropsValid(state: SplittableProps, context: CalendarContext, dateSpanMeta: any, filterConfig): boolean {\n  let relevantEventStore = state.eventStore\n  let relevantDefs = relevantEventStore.defs\n  let relevantInstances = relevantEventStore.instances\n\n  let selection = state.dateSelection\n  let selectionRange = selection.range\n  let { selectionConfig } = context.getCurrentData()\n\n  if (filterConfig) {\n    selectionConfig = filterConfig(selectionConfig)\n  }\n\n  // constraint\n  if (!allConstraintsPass(selectionConfig.constraints, selectionRange, relevantEventStore, state.businessHours, context)) {\n    return false\n  }\n\n  // overlap\n\n  let { selectOverlap } = context.options\n  let selectOverlapFunc = typeof selectOverlap === 'function' ? selectOverlap : null\n\n  for (let relevantInstanceId in relevantInstances) {\n    let relevantInstance = relevantInstances[relevantInstanceId]\n\n    // intersect! evaluate\n    if (rangesIntersect(selectionRange, relevantInstance.range)) {\n      if (selectionConfig.overlap === false) {\n        return false\n      }\n\n      if (selectOverlapFunc && !selectOverlapFunc(\n        new EventApi(context, relevantDefs[relevantInstance.defId], relevantInstance),\n        null,\n      )) {\n        return false\n      }\n    }\n  }\n\n  // allow (a function)\n  for (let selectionAllow of selectionConfig.allows) {\n    let fullDateSpan = { ...dateSpanMeta, ...selection }\n\n    if (!selectionAllow(\n      buildDateSpanApiWithContext(fullDateSpan, context),\n      null,\n    )) {\n      return false\n    }\n  }\n\n  return true\n}\n\n// Constraint Utils\n// ------------------------------------------------------------------------------------------------------------------------\n\nfunction allConstraintsPass(\n  constraints: Constraint[],\n  subjectRange: DateRange,\n  otherEventStore: EventStore,\n  businessHoursUnexpanded: EventStore,\n  context: CalendarContext,\n): boolean {\n  for (let constraint of constraints) {\n    if (!anyRangesContainRange(\n      constraintToRanges(constraint, subjectRange, otherEventStore, businessHoursUnexpanded, context),\n      subjectRange,\n    )) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfunction constraintToRanges(\n  constraint: Constraint,\n  subjectRange: DateRange, // for expanding a recurring constraint, or expanding business hours\n  otherEventStore: EventStore, // for if constraint is an even group ID\n  businessHoursUnexpanded: EventStore, // for if constraint is 'businessHours'\n  context: CalendarContext, // for expanding businesshours\n): OpenDateRange[] {\n  if (constraint === 'businessHours') {\n    return eventStoreToRanges(\n      expandRecurring(businessHoursUnexpanded, subjectRange, context),\n    )\n  }\n\n  if (typeof constraint === 'string') { // an group ID\n    return eventStoreToRanges(\n      filterEventStoreDefs(otherEventStore, (eventDef) => eventDef.groupId === constraint),\n    )\n  }\n\n  if (typeof constraint === 'object' && constraint) { // non-null object\n    return eventStoreToRanges(\n      expandRecurring(constraint, subjectRange, context),\n    )\n  }\n\n  return [] // if it's false\n}\n\n// TODO: move to event-store file?\nfunction eventStoreToRanges(eventStore: EventStore): DateRange[] {\n  let { instances } = eventStore\n  let ranges: DateRange[] = []\n\n  for (let instanceId in instances) {\n    ranges.push(instances[instanceId].range)\n  }\n\n  return ranges\n}\n\n// TODO: move to geom file?\nfunction anyRangesContainRange(outerRanges: DateRange[], innerRange: DateRange): boolean {\n  for (let outerRange of outerRanges) {\n    if (rangeContainsRange(outerRange, innerRange)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { createElement, ComponentChildren, Ref } from '../vdom'\nimport { BaseComponent, setRef } from '../vdom-util'\nimport { CssDimValue, ScrollerLike } from './util'\n\nexport type OverflowValue = 'auto' | 'hidden' | 'scroll' | 'visible'\n\nexport interface ScrollerProps {\n  overflowX: OverflowValue\n  overflowY: OverflowValue\n  overcomeLeft?: number\n  overcomeRight?: number\n  overcomeBottom?: number\n  maxHeight?: CssDimValue\n  liquid?: boolean\n  liquidIsAbsolute?: boolean\n  children?: ComponentChildren\n  elRef?: Ref<HTMLElement>\n}\n\nconst VISIBLE_HIDDEN_RE = /^(visible|hidden)$/\n\nexport class Scroller extends BaseComponent<ScrollerProps> implements ScrollerLike {\n  private el: HTMLElement // TODO: just use this.base?\n\n  render() {\n    let { props } = this\n    let { liquid, liquidIsAbsolute } = props\n    let isAbsolute = liquid && liquidIsAbsolute\n    let className = ['fc-scroller']\n\n    if (liquid) {\n      if (liquidIsAbsolute) {\n        className.push('fc-scroller-liquid-absolute')\n      } else {\n        className.push('fc-scroller-liquid')\n      }\n    }\n\n    return (\n      <div\n        ref={this.handleEl}\n        className={className.join(' ')}\n        style={{\n          overflowX: props.overflowX,\n          overflowY: props.overflowY,\n          left: (isAbsolute && -(props.overcomeLeft || 0)) || '',\n          right: (isAbsolute && -(props.overcomeRight || 0)) || '',\n          bottom: (isAbsolute && -(props.overcomeBottom || 0)) || '',\n          marginLeft: (!isAbsolute && -(props.overcomeLeft || 0)) || '',\n          marginRight: (!isAbsolute && -(props.overcomeRight || 0)) || '',\n          marginBottom: (!isAbsolute && -(props.overcomeBottom || 0)) || '',\n          maxHeight: props.maxHeight || '',\n        }}\n      >\n        {props.children}\n      </div>\n    )\n  }\n\n  handleEl = (el: HTMLElement) => {\n    this.el = el\n    setRef(this.props.elRef, el)\n  }\n\n  needsXScrolling() {\n    if (VISIBLE_HIDDEN_RE.test(this.props.overflowX)) {\n      return false\n    }\n\n    // testing scrollWidth>clientWidth is unreliable cross-browser when pixel heights aren't integers.\n    // much more reliable to see if children are taller than the scroller, even tho doesn't account for\n    // inner-child margins and absolute positioning\n\n    let { el } = this\n    let realClientWidth = this.el.getBoundingClientRect().width - this.getYScrollbarWidth()\n    let { children } = el\n\n    for (let i = 0; i < children.length; i += 1) {\n      let childEl = children[i]\n\n      if (childEl.getBoundingClientRect().width > realClientWidth) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  needsYScrolling() {\n    if (VISIBLE_HIDDEN_RE.test(this.props.overflowY)) {\n      return false\n    }\n\n    // testing scrollHeight>clientHeight is unreliable cross-browser when pixel heights aren't integers.\n    // much more reliable to see if children are taller than the scroller, even tho doesn't account for\n    // inner-child margins and absolute positioning\n\n    let { el } = this\n    let realClientHeight = this.el.getBoundingClientRect().height - this.getXScrollbarWidth()\n    let { children } = el\n\n    for (let i = 0; i < children.length; i += 1) {\n      let childEl = children[i]\n\n      if (childEl.getBoundingClientRect().height > realClientHeight) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  getXScrollbarWidth() {\n    if (VISIBLE_HIDDEN_RE.test(this.props.overflowX)) {\n      return 0\n    }\n    return this.el.offsetHeight - this.el.clientHeight // only works because we guarantee no borders. TODO: add to CSS with important?\n  }\n\n  getYScrollbarWidth() {\n    if (VISIBLE_HIDDEN_RE.test(this.props.overflowY)) {\n      return 0\n    }\n    return this.el.offsetWidth - this.el.clientWidth // only works because we guarantee no borders. TODO: add to CSS with important?\n  }\n}\n","import { hashValuesToArray, collectFromHash } from './object'\n\n/*\nTODO: somehow infer OtherArgs from masterCallback?\nTODO: infer RefType from masterCallback if provided\n*/\nexport class RefMap<RefType> {\n  public currentMap: { [key: string]: RefType } = {}\n  private depths: { [key: string]: number } = {}\n  private callbackMap: { [key: string]: (val: RefType | null) => void } = {}\n\n  constructor(public masterCallback?: (val: RefType | null, key: string) => void) {\n  }\n\n  createRef(key: string | number) {\n    let refCallback = this.callbackMap[key]\n\n    if (!refCallback) {\n      refCallback = this.callbackMap[key] = (val: RefType | null) => {\n        this.handleValue(val, String(key))\n      }\n    }\n\n    return refCallback\n  }\n\n  handleValue = (val: RefType | null, key: string) => { // bind in case users want to pass it around\n    let { depths, currentMap } = this\n    let removed = false\n    let added = false\n\n    if (val !== null) {\n      // for bug... ACTUALLY: can probably do away with this now that callers don't share numeric indices anymore\n      removed = (key in currentMap)\n\n      currentMap[key] = val\n      depths[key] = (depths[key] || 0) + 1\n      added = true\n    } else {\n      depths[key] -= 1\n\n      if (!depths[key]) {\n        delete currentMap[key]\n        delete this.callbackMap[key]\n        removed = true\n      }\n    }\n\n    if (this.masterCallback) {\n      if (removed) {\n        this.masterCallback(null, String(key))\n      }\n      if (added) {\n        this.masterCallback(val, String(key))\n      }\n    }\n  }\n\n  // TODO: check callers that don't care about order. should use getAll instead\n  // NOTE: this method has become less valuable now that we are encouraged to map order by some other index\n  // TODO: provide ONE array-export function, buildArray, which fails on non-numeric indexes. caller can manipulate and \"collect\"\n  collect(\n    startIndex?: number,\n    endIndex?: number,\n    step?: number,\n  ) {\n    return collectFromHash(this.currentMap, startIndex, endIndex, step)\n  }\n\n  getAll(): RefType[] { // returns in no partical order!\n    return hashValuesToArray(this.currentMap)\n  }\n}\n","import { VNode, createElement, Ref } from '../vdom'\nimport { findElements } from '../util/dom-manip'\nimport { ViewContext } from '../ViewContext'\nimport { computeSmallestCellWidth } from '../util/misc'\nimport { isPropsEqual } from '../util/object'\nimport { isArraysEqual } from '../util/array'\nimport { BaseOptionsRefined } from '../options'\n\nexport type CssDimValue = string | number // TODO: move to more general file\n\nexport interface ColProps {\n  width?: CssDimValue\n  minWidth?: CssDimValue\n  span?: number\n}\n\nexport interface SectionConfig {\n  outerContent?: VNode\n  type: 'body' | 'header' | 'footer'\n  className?: string\n  maxHeight?: number\n  liquid?: boolean\n  expandRows?: boolean // TODO: how to get a bottom rule?\n  syncRowHeights?: boolean // yuck\n  isSticky?: boolean\n}\n\nexport type ChunkConfigContent = (contentProps: ChunkContentCallbackArgs) => VNode\nexport type ChunkConfigRowContent = VNode | ChunkConfigContent\n\nexport interface ChunkConfig {\n  outerContent?: VNode\n  content?: ChunkConfigContent\n  rowContent?: ChunkConfigRowContent\n  scrollerElRef?: Ref<HTMLDivElement>\n  elRef?: Ref<HTMLTableCellElement>\n  tableClassName?: string\n}\n\nexport interface ChunkContentCallbackArgs { // TODO: util for wrapping tables!?\n  tableColGroupNode: VNode\n  tableMinWidth: CssDimValue\n  clientWidth: number | null // important to know whether 0 or not-yet-determined. for headless testing\n  clientHeight: number | null //\n  expandRows: boolean\n  syncRowHeights: boolean\n  rowSyncHeights: number[]\n  reportRowHeightChange: (rowEl: HTMLElement, isStable: boolean) => void\n}\n\nexport function computeShrinkWidth(chunkEls: HTMLElement[]) { // all in same COL!\n  let shrinkCells = findElements(chunkEls, '.fc-scrollgrid-shrink')\n  let largestWidth = 0\n\n  for (let shrinkCell of shrinkCells) {\n    largestWidth = Math.max(\n      largestWidth,\n      computeSmallestCellWidth(shrinkCell),\n    )\n  }\n\n  return Math.ceil(largestWidth) // <table> elements work best with integers. round up to ensure contents fits\n}\n\nexport interface ScrollerLike { // have scrollers implement?\n  needsYScrolling(): boolean\n  needsXScrolling(): boolean\n}\n\nexport function getSectionHasLiquidHeight(props: { liquid: boolean }, sectionConfig: SectionConfig) {\n  return props.liquid && sectionConfig.liquid // does the section do liquid-height? (need to have whole scrollgrid liquid-height as well)\n}\n\nexport function getAllowYScrolling(props: { liquid: boolean }, sectionConfig: SectionConfig) {\n  return sectionConfig.maxHeight != null || // if its possible for the height to max out, we might need scrollbars\n    getSectionHasLiquidHeight(props, sectionConfig) // if the section is liquid height, it might condense enough to require scrollbars\n}\n\n// TODO: ONLY use `arg`. force out internal function to use same API\nexport function renderChunkContent(\n  sectionConfig: SectionConfig,\n  chunkConfig: ChunkConfig,\n  arg: ChunkContentCallbackArgs,\n  isHeader: boolean,\n) {\n  let { expandRows } = arg\n\n  let content: VNode = typeof chunkConfig.content === 'function' ?\n    chunkConfig.content(arg) :\n    createElement(\n      'table',\n      {\n        role: 'presentation',\n        className: [\n          chunkConfig.tableClassName,\n          sectionConfig.syncRowHeights ? 'fc-scrollgrid-sync-table' : '',\n        ].join(' '),\n        style: {\n          minWidth: arg.tableMinWidth, // because colMinWidths arent enough\n          width: arg.clientWidth,\n          height: expandRows ? arg.clientHeight : '', // css `height` on a <table> serves as a min-height\n        },\n      },\n      arg.tableColGroupNode,\n      createElement(\n        isHeader ? 'thead' : 'tbody',\n        {\n          role: 'presentation',\n        },\n        typeof chunkConfig.rowContent === 'function'\n          ? chunkConfig.rowContent(arg)\n          : chunkConfig.rowContent,\n      ),\n    )\n\n  return content\n}\n\nexport function isColPropsEqual(cols0: ColProps[], cols1: ColProps[]) {\n  return isArraysEqual(cols0, cols1, isPropsEqual)\n}\n\nexport function renderMicroColGroup(cols: ColProps[], shrinkWidth?: number): VNode {\n  let colNodes: VNode[] = []\n\n  /*\n  for ColProps with spans, it would have been great to make a single <col span=\"\">\n  HOWEVER, Chrome was getting messing up distributing the width to <td>/<th> elements with colspans.\n  SOLUTION: making individual <col> elements makes Chrome behave.\n  */\n  for (let colProps of cols) {\n    let span = colProps.span || 1\n\n    for (let i = 0; i < span; i += 1) {\n      colNodes.push(\n        <col\n          style={{\n            width: colProps.width === 'shrink' ? sanitizeShrinkWidth(shrinkWidth) : (colProps.width || ''),\n            minWidth: colProps.minWidth || '',\n          }}\n        />,\n      )\n    }\n  }\n\n  return createElement('colgroup', {}, ...colNodes)\n}\n\nexport function sanitizeShrinkWidth(shrinkWidth?: number) {\n  /* why 4? if we do 0, it will kill any border, which are needed for computeSmallestCellWidth\n  4 accounts for 2 2-pixel borders. TODO: better solution? */\n  return shrinkWidth == null ? 4 : shrinkWidth\n}\n\nexport function hasShrinkWidth(cols: ColProps[]) {\n  for (let col of cols) {\n    if (col.width === 'shrink') {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport function getScrollGridClassNames(liquid: boolean, context: ViewContext) {\n  let classNames = [\n    'fc-scrollgrid',\n    context.theme.getClass('table'),\n  ]\n\n  if (liquid) {\n    classNames.push('fc-scrollgrid-liquid')\n  }\n\n  return classNames\n}\n\nexport function getSectionClassNames(sectionConfig: SectionConfig, wholeTableVGrow: boolean) {\n  let classNames = [\n    'fc-scrollgrid-section',\n    `fc-scrollgrid-section-${sectionConfig.type}`,\n    sectionConfig.className, // used?\n  ]\n\n  if (wholeTableVGrow && sectionConfig.liquid && sectionConfig.maxHeight == null) {\n    classNames.push('fc-scrollgrid-section-liquid')\n  }\n\n  if (sectionConfig.isSticky) {\n    classNames.push('fc-scrollgrid-section-sticky')\n  }\n\n  return classNames\n}\n\nexport function renderScrollShim(arg: ChunkContentCallbackArgs) {\n  return (\n    <div\n      className=\"fc-scrollgrid-sticky-shim\"\n      style={{\n        width: arg.clientWidth,\n        minWidth: arg.tableMinWidth,\n      }}\n    />\n  )\n}\n\nexport function getStickyHeaderDates(options: BaseOptionsRefined) {\n  let { stickyHeaderDates } = options\n\n  if (stickyHeaderDates == null || stickyHeaderDates === 'auto') {\n    stickyHeaderDates = options.height === 'auto' || options.viewHeight === 'auto'\n  }\n\n  return stickyHeaderDates\n}\n\nexport function getStickyFooterScrollbar(options: BaseOptionsRefined) {\n  let { stickyFooterScrollbar } = options\n\n  if (stickyFooterScrollbar == null || stickyFooterScrollbar === 'auto') {\n    stickyFooterScrollbar = options.height === 'auto' || options.viewHeight === 'auto'\n  }\n\n  return stickyFooterScrollbar\n}\n","import { VNode, createElement, Fragment } from '../vdom'\nimport { BaseComponent, setRef } from '../vdom-util'\nimport { Scroller, OverflowValue } from './Scroller'\nimport { RefMap } from '../util/RefMap'\nimport {\n  ColProps, SectionConfig, renderMicroColGroup, computeShrinkWidth, getScrollGridClassNames, getSectionClassNames, getAllowYScrolling,\n  renderChunkContent, getSectionHasLiquidHeight, ChunkConfig, hasShrinkWidth, CssDimValue,\n  isColPropsEqual,\n} from './util'\nimport { getCanVGrowWithinCell } from '../util/table-styling'\nimport { memoize } from '../util/memoize'\nimport { isPropsEqual } from '../util/object'\nimport { getScrollbarWidths } from '../util/scrollbar-width'\n\nexport interface SimpleScrollGridProps {\n  cols: ColProps[]\n  sections: SimpleScrollGridSection[]\n  liquid: boolean // liquid *height*\n  collapsibleWidth: boolean // can ALL sections be fully collapsed in width?\n  height?: CssDimValue // TODO: give to real ScrollGrid\n}\n\nexport interface SimpleScrollGridSection extends SectionConfig {\n  key: string\n  chunk?: ChunkConfig\n}\n\ninterface SimpleScrollGridState {\n  shrinkWidth: number | null\n  forceYScrollbars: boolean\n  scrollerClientWidths: { [key: string]: number }\n  scrollerClientHeights: { [key: string]: number }\n}\n\nexport class SimpleScrollGrid extends BaseComponent<SimpleScrollGridProps, SimpleScrollGridState> {\n  processCols = memoize((a) => a, isColPropsEqual) // so we get same `cols` props every time\n\n  // yucky to memoize VNodes, but much more efficient for consumers\n  renderMicroColGroup: typeof renderMicroColGroup = memoize(renderMicroColGroup)\n\n  scrollerRefs = new RefMap<Scroller>()\n  scrollerElRefs = new RefMap<HTMLElement>(this._handleScrollerEl.bind(this))\n\n  state: SimpleScrollGridState = {\n    shrinkWidth: null,\n    forceYScrollbars: false,\n    scrollerClientWidths: {},\n    scrollerClientHeights: {},\n  }\n\n  render(): VNode {\n    let { props, state, context } = this\n    let sectionConfigs = props.sections || []\n    let cols = this.processCols(props.cols)\n\n    let microColGroupNode = this.renderMicroColGroup(cols, state.shrinkWidth)\n    let classNames = getScrollGridClassNames(props.liquid, context)\n\n    if (props.collapsibleWidth) {\n      classNames.push('fc-scrollgrid-collapsible')\n    }\n\n    // TODO: make DRY\n    let configCnt = sectionConfigs.length\n    let configI = 0\n    let currentConfig: SimpleScrollGridSection\n    let headSectionNodes: VNode[] = []\n    let bodySectionNodes: VNode[] = []\n    let footSectionNodes: VNode[] = []\n\n    while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'header') {\n      headSectionNodes.push(this.renderSection(currentConfig, microColGroupNode, true))\n      configI += 1\n    }\n\n    while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'body') {\n      bodySectionNodes.push(this.renderSection(currentConfig, microColGroupNode, false))\n      configI += 1\n    }\n\n    while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'footer') {\n      footSectionNodes.push(this.renderSection(currentConfig, microColGroupNode, true))\n      configI += 1\n    }\n\n    // firefox bug: when setting height on table and there is a thead or tfoot,\n    // the necessary height:100% on the liquid-height body section forces the *whole* table to be taller. (bug #5524)\n    // use getCanVGrowWithinCell as a way to detect table-stupid firefox.\n    // if so, use a simpler dom structure, jam everything into a lone tbody.\n    let isBuggy = !getCanVGrowWithinCell()\n\n    const roleAttrs = { role: 'rowgroup' }\n\n    return createElement(\n      'table',\n      {\n        role: 'grid',\n        className: classNames.join(' '),\n        style: { height: props.height },\n      },\n      Boolean(!isBuggy && headSectionNodes.length) && createElement('thead', roleAttrs, ...headSectionNodes),\n      Boolean(!isBuggy && bodySectionNodes.length) && createElement('tbody', roleAttrs, ...bodySectionNodes),\n      Boolean(!isBuggy && footSectionNodes.length) && createElement('tfoot', roleAttrs, ...footSectionNodes),\n      isBuggy && createElement('tbody', roleAttrs, ...headSectionNodes, ...bodySectionNodes, ...footSectionNodes),\n    )\n  }\n\n  renderSection(sectionConfig: SimpleScrollGridSection, microColGroupNode: VNode, isHeader: boolean) {\n    if ('outerContent' in sectionConfig) {\n      return (\n        <Fragment key={sectionConfig.key}>\n          {sectionConfig.outerContent}\n        </Fragment>\n      )\n    }\n\n    return (\n      <tr\n        key={sectionConfig.key}\n        role=\"presentation\"\n        className={getSectionClassNames(sectionConfig, this.props.liquid).join(' ')}\n      >\n        {this.renderChunkTd(sectionConfig, microColGroupNode, sectionConfig.chunk, isHeader)}\n      </tr>\n    )\n  }\n\n  renderChunkTd(\n    sectionConfig: SimpleScrollGridSection,\n    microColGroupNode: VNode,\n    chunkConfig: ChunkConfig,\n    isHeader: boolean,\n  ): createElement.JSX.Element {\n    if ('outerContent' in chunkConfig) {\n      return chunkConfig.outerContent\n    }\n\n    let { props } = this\n    let { forceYScrollbars, scrollerClientWidths, scrollerClientHeights } = this.state\n\n    let needsYScrolling = getAllowYScrolling(props, sectionConfig) // TODO: do lazily. do in section config?\n    let isLiquid = getSectionHasLiquidHeight(props, sectionConfig)\n\n    // for `!props.liquid` - is WHOLE scrollgrid natural height?\n    // TODO: do same thing in advanced scrollgrid? prolly not b/c always has horizontal scrollbars\n    let overflowY: OverflowValue =\n      !props.liquid ? 'visible' :\n        forceYScrollbars ? 'scroll' :\n          !needsYScrolling ? 'hidden' :\n            'auto'\n\n    let sectionKey = sectionConfig.key\n    let content = renderChunkContent(sectionConfig, chunkConfig, {\n      tableColGroupNode: microColGroupNode,\n      tableMinWidth: '',\n      clientWidth: (!props.collapsibleWidth && scrollerClientWidths[sectionKey] !== undefined) ? scrollerClientWidths[sectionKey] : null,\n      clientHeight: scrollerClientHeights[sectionKey] !== undefined ? scrollerClientHeights[sectionKey] : null,\n      expandRows: sectionConfig.expandRows,\n      syncRowHeights: false,\n      rowSyncHeights: [],\n      reportRowHeightChange: () => {},\n    }, isHeader)\n\n    return createElement(\n      isHeader ? 'th' : 'td',\n      {\n        ref: chunkConfig.elRef as any,\n        role: 'presentation',\n      },\n      <div className={`fc-scroller-harness${isLiquid ? ' fc-scroller-harness-liquid' : ''}`}>\n        <Scroller\n          ref={this.scrollerRefs.createRef(sectionKey)}\n          elRef={this.scrollerElRefs.createRef(sectionKey)}\n          overflowY={overflowY}\n          overflowX={!props.liquid ? 'visible' : 'hidden' /* natural height? */}\n          maxHeight={sectionConfig.maxHeight}\n          liquid={isLiquid}\n          liquidIsAbsolute // because its within a harness\n        >\n          {content}\n        </Scroller>\n      </div>,\n    )\n  }\n\n  _handleScrollerEl(scrollerEl: HTMLElement | null, key: string) {\n    let section = getSectionByKey(this.props.sections, key)\n\n    if (section) {\n      setRef(section.chunk.scrollerElRef, scrollerEl)\n    }\n  }\n\n  // TODO: can do a really simple print-view. dont need to join rows\n  handleSizing = () => {\n    this.setState({\n      shrinkWidth: this.computeShrinkWidth(), // will create each chunk's <colgroup>. TODO: precompute hasShrinkWidth\n      ...this.computeScrollerDims(),\n    })\n  }\n\n  componentDidMount() {\n    this.handleSizing()\n    this.context.addResizeHandler(this.handleSizing)\n  }\n\n  componentDidUpdate() {\n    // TODO: need better solution when state contains non-sizing things\n    this.handleSizing()\n  }\n\n  componentWillUnmount() {\n    this.context.removeResizeHandler(this.handleSizing)\n  }\n\n  computeShrinkWidth() {\n    return hasShrinkWidth(this.props.cols)\n      ? computeShrinkWidth(this.scrollerElRefs.getAll())\n      : 0\n  }\n\n  computeScrollerDims() {\n    let scrollbarWidth = getScrollbarWidths()\n    let { scrollerRefs, scrollerElRefs } = this\n\n    let forceYScrollbars = false\n    let scrollerClientWidths: { [index: string]: number } = {}\n    let scrollerClientHeights: { [index: string]: number } = {}\n\n    for (let sectionKey in scrollerRefs.currentMap) {\n      let scroller = scrollerRefs.currentMap[sectionKey]\n\n      if (scroller && scroller.needsYScrolling()) {\n        forceYScrollbars = true\n        break\n      }\n    }\n\n    for (let section of this.props.sections) {\n      let sectionKey = section.key\n      let scrollerEl = scrollerElRefs.currentMap[sectionKey]\n\n      if (scrollerEl) {\n        let harnessEl = scrollerEl.parentNode as HTMLElement // TODO: weird way to get this. need harness b/c doesn't include table borders\n\n        scrollerClientWidths[sectionKey] = Math.floor(\n          harnessEl.getBoundingClientRect().width - (\n            forceYScrollbars\n              ? scrollbarWidth.y // use global because scroller might not have scrollbars yet but will need them in future\n              : 0\n          ),\n        )\n\n        scrollerClientHeights[sectionKey] = Math.floor(\n          harnessEl.getBoundingClientRect().height, // never has horizontal scrollbars\n        )\n      }\n    }\n\n    return { forceYScrollbars, scrollerClientWidths, scrollerClientHeights }\n  }\n}\n\nSimpleScrollGrid.addStateEquality({\n  scrollerClientWidths: isPropsEqual,\n  scrollerClientHeights: isPropsEqual,\n})\n\nfunction getSectionByKey(sections: SimpleScrollGridSection[], key: string): SimpleScrollGridSection | null {\n  for (let section of sections) {\n    if (section.key === key) {\n      return section\n    }\n  }\n\n  return null\n}\n","import { Seg } from '../component/DateComponent'\nimport { ComponentChildren, createElement, Ref, createRef, RefObject } from '../vdom'\nimport { EventApi } from '../api/EventApi'\nimport {\n  computeSegDraggable,\n  computeSegStartResizable,\n  computeSegEndResizable,\n  setElSeg,\n  EventContentArg,\n  getEventClassNames,\n} from '../component/event-rendering'\nimport { RenderHook } from './render-hook'\nimport { BaseComponent } from '../vdom-util'\n\nexport interface MinimalEventProps {\n  seg: Seg\n  isDragging: boolean // rename to isMirrorDragging? make optional?\n  isResizing: boolean // rename to isMirrorResizing? make optional?\n  isDateSelecting: boolean // rename to isMirrorDateSelecting? make optional?\n  isSelected: boolean\n  isPast: boolean\n  isFuture: boolean\n  isToday: boolean\n}\n\nexport interface EventRootProps extends MinimalEventProps {\n  timeText: string\n  disableDragging?: boolean\n  disableResizing?: boolean\n  defaultContent: (hookProps: EventContentArg) => ComponentChildren\n  children: (\n    rootElRef: Ref<any>,\n    classNames: string[],\n    innerElRef: Ref<any>,\n    innerContent: ComponentChildren,\n    hookProps: EventContentArg\n  ) => ComponentChildren\n}\n\nexport class EventRoot extends BaseComponent<EventRootProps> {\n  elRef: RefObject<HTMLElement> = createRef<HTMLElement>()\n\n  render() {\n    let { props, context } = this\n    let { options } = context\n    let { seg } = props\n    let { eventRange } = seg\n    let { ui } = eventRange\n\n    let hookProps: EventContentArg = {\n      event: new EventApi(context, eventRange.def, eventRange.instance),\n      view: context.viewApi,\n      timeText: props.timeText,\n      textColor: ui.textColor,\n      backgroundColor: ui.backgroundColor,\n      borderColor: ui.borderColor,\n      isDraggable: !props.disableDragging && computeSegDraggable(seg, context),\n      isStartResizable: !props.disableResizing && computeSegStartResizable(seg, context),\n      isEndResizable: !props.disableResizing && computeSegEndResizable(seg, context),\n      isMirror: Boolean(props.isDragging || props.isResizing || props.isDateSelecting),\n      isStart: Boolean(seg.isStart),\n      isEnd: Boolean(seg.isEnd),\n      isPast: Boolean(props.isPast), // TODO: don't cast. getDateMeta does it\n      isFuture: Boolean(props.isFuture), // TODO: don't cast. getDateMeta does it\n      isToday: Boolean(props.isToday), // TODO: don't cast. getDateMeta does it\n      isSelected: Boolean(props.isSelected),\n      isDragging: Boolean(props.isDragging),\n      isResizing: Boolean(props.isResizing),\n    }\n\n    let standardClassNames = getEventClassNames(hookProps).concat(ui.classNames)\n\n    return (\n      <RenderHook\n        hookProps={hookProps}\n        classNames={options.eventClassNames}\n        content={options.eventContent}\n        defaultContent={props.defaultContent}\n        didMount={options.eventDidMount}\n        willUnmount={options.eventWillUnmount}\n        elRef={this.elRef}\n      >\n        {(rootElRef, customClassNames, innerElRef, innerContent) => props.children(\n          rootElRef, standardClassNames.concat(customClassNames), innerElRef, innerContent, hookProps,\n        )}\n      </RenderHook>\n    )\n  }\n\n  componentDidMount() {\n    setElSeg(this.elRef.current, this.props.seg)\n  }\n\n  /*\n  need to re-assign seg to the element if seg changes, even if the element is the same\n  */\n  componentDidUpdate(prevProps: EventRootProps) {\n    let { seg } = this.props\n\n    if (seg !== prevProps.seg) {\n      setElSeg(this.elRef.current, seg)\n    }\n  }\n}\n","import { ComponentChildren, createElement, Fragment } from '../vdom'\nimport { BaseComponent } from '../vdom-util'\nimport { buildSegTimeText, EventContentArg, getSegAnchorAttrs } from '../component/event-rendering'\nimport { EventRoot, MinimalEventProps } from './EventRoot'\nimport { DateFormatter } from '../datelib/DateFormatter'\n\nexport interface StandardEventProps extends MinimalEventProps {\n  extraClassNames: string[]\n  defaultTimeFormat: DateFormatter\n  defaultDisplayEventTime?: boolean // default true\n  defaultDisplayEventEnd?: boolean // default true\n  disableDragging?: boolean // default false\n  disableResizing?: boolean // default false\n  defaultContent?: (hookProps: EventContentArg) => ComponentChildren // not used by anyone yet\n}\n\n// should not be a purecomponent\nexport class StandardEvent extends BaseComponent<StandardEventProps> {\n  render() {\n    let { props, context } = this\n    let { seg } = props\n    let timeFormat = context.options.eventTimeFormat || props.defaultTimeFormat\n    let timeText = buildSegTimeText(\n      seg,\n      timeFormat,\n      context,\n      props.defaultDisplayEventTime,\n      props.defaultDisplayEventEnd,\n    )\n\n    return (\n      <EventRoot\n        seg={seg}\n        timeText={timeText}\n        disableDragging={props.disableDragging}\n        disableResizing={props.disableResizing}\n        defaultContent={props.defaultContent || renderInnerContent}\n        isDragging={props.isDragging}\n        isResizing={props.isResizing}\n        isDateSelecting={props.isDateSelecting}\n        isSelected={props.isSelected}\n        isPast={props.isPast}\n        isFuture={props.isFuture}\n        isToday={props.isToday}\n      >\n        {(rootElRef, classNames, innerElRef, innerContent, hookProps) => (\n          <a\n            className={props.extraClassNames.concat(classNames).join(' ')}\n            style={{\n              borderColor: hookProps.borderColor,\n              backgroundColor: hookProps.backgroundColor,\n            }}\n            ref={rootElRef}\n            {...getSegAnchorAttrs(seg, context)}\n          >\n            <div className=\"fc-event-main\" ref={innerElRef} style={{ color: hookProps.textColor }}>\n              {innerContent}\n            </div>\n            {hookProps.isStartResizable &&\n              <div className=\"fc-event-resizer fc-event-resizer-start\" />}\n            {hookProps.isEndResizable &&\n              <div className=\"fc-event-resizer fc-event-resizer-end\" />}\n          </a>\n        )}\n      </EventRoot>\n    )\n  }\n}\n\nfunction renderInnerContent(innerProps: EventContentArg) {\n  return (\n    <div className=\"fc-event-main-frame\">\n      {innerProps.timeText && (\n        <div className=\"fc-event-time\">{innerProps.timeText}</div>\n      )}\n      <div className=\"fc-event-title-container\">\n        <div className=\"fc-event-title fc-sticky\">\n          {innerProps.event.title || <Fragment>&nbsp;</Fragment>}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { RenderHook, RenderHookPropsChildren, MountArg } from './render-hook'\nimport { DateMarker } from '../datelib/marker'\nimport { ViewContext, ViewContextType } from '../ViewContext'\nimport { createElement } from '../vdom'\nimport { ViewApi } from '../ViewApi'\n\nexport interface NowIndicatorRootProps {\n  isAxis: boolean\n  date: DateMarker\n  children: RenderHookPropsChildren\n}\n\nexport interface NowIndicatorContentArg {\n  isAxis: boolean\n  date: Date\n  view: ViewApi\n}\n\nexport type NowIndicatorMountArg = MountArg<NowIndicatorContentArg>\n\nexport const NowIndicatorRoot = (props: NowIndicatorRootProps) => (\n  <ViewContextType.Consumer>\n    {(context: ViewContext) => {\n      let { options } = context\n      let hookProps: NowIndicatorContentArg = {\n        isAxis: props.isAxis,\n        date: context.dateEnv.toDate(props.date),\n        view: context.viewApi,\n      }\n\n      return (\n        <RenderHook\n          hookProps={hookProps}\n          classNames={options.nowIndicatorClassNames}\n          content={options.nowIndicatorContent}\n          didMount={options.nowIndicatorDidMount}\n          willUnmount={options.nowIndicatorWillUnmount}\n        >\n          {props.children}\n        </RenderHook>\n      )\n    }}\n  </ViewContextType.Consumer>\n)\n","import { Ref, ComponentChildren, createElement } from '../vdom'\nimport { DateMarker } from '../datelib/marker'\nimport { DateRange } from '../datelib/date-range'\nimport { getDateMeta, DateMeta } from '../component/date-rendering'\nimport { createFormatter } from '../datelib/formatting'\nimport { ContentHook } from './render-hook'\nimport { ViewApi } from '../ViewApi'\nimport { BaseComponent } from '../vdom-util'\nimport { DateProfile } from '../DateProfileGenerator'\nimport { Dictionary } from '../options'\nimport { DateEnv } from '../datelib/env'\n\nconst DAY_NUM_FORMAT = createFormatter({ day: 'numeric' })\n\nexport interface DayCellContentProps {\n  date: DateMarker\n  dateProfile: DateProfile\n  todayRange: DateRange\n  showDayNumber?: boolean // defaults to false\n  extraHookProps?: Dictionary\n  defaultContent?: (hookProps: DayCellContentArg) => ComponentChildren\n  children: (\n    innerElRef: Ref<any>,\n    innerContent: ComponentChildren\n  ) => ComponentChildren\n}\n\nexport interface DayCellContentArg extends DateMeta {\n  date: DateMarker // localized\n  view: ViewApi\n  dayNumberText: string\n  [extraProp: string]: any // so can include a resource\n}\n\nexport interface DayCellHookPropsInput {\n  date: DateMarker // generic\n  dateProfile: DateProfile\n  todayRange: DateRange\n  dateEnv: DateEnv\n  viewApi: ViewApi\n  showDayNumber?: boolean // defaults to false\n  extraProps?: Dictionary // so can include a resource\n}\n\nexport class DayCellContent extends BaseComponent<DayCellContentProps> {\n  render() {\n    let { props, context } = this\n    let { options } = context\n    let hookProps = refineDayCellHookProps({\n      date: props.date,\n      dateProfile: props.dateProfile,\n      todayRange: props.todayRange,\n      showDayNumber: props.showDayNumber,\n      extraProps: props.extraHookProps,\n      viewApi: context.viewApi,\n      dateEnv: context.dateEnv,\n    })\n\n    return (\n      <ContentHook\n        hookProps={hookProps}\n        content={options.dayCellContent}\n        defaultContent={props.defaultContent}\n      >\n        {props.children}\n      </ContentHook>\n    )\n  }\n}\n\nexport function refineDayCellHookProps(raw: DayCellHookPropsInput): DayCellContentArg {\n  let { date, dateEnv } = raw\n  let dayMeta = getDateMeta(date, raw.todayRange, null, raw.dateProfile)\n\n  return {\n    date: dateEnv.toDate(date),\n    view: raw.viewApi,\n    ...dayMeta,\n    dayNumberText: raw.showDayNumber ? dateEnv.format(date, DAY_NUM_FORMAT) : '',\n    ...raw.extraProps,\n  }\n}\n","import { Ref, ComponentChildren, createElement } from '../vdom'\nimport { DateMarker } from '../datelib/marker'\nimport { DateRange } from '../datelib/date-range'\nimport { getDayClassNames, DateMeta } from '../component/date-rendering'\nimport { formatDayString } from '../datelib/formatting-utils'\nimport { buildClassNameNormalizer, MountHook, MountArg } from './render-hook'\nimport { ViewApi } from '../ViewApi'\nimport { BaseComponent } from '../vdom-util'\nimport { DateProfile } from '../DateProfileGenerator'\nimport { memoizeObjArg } from '../util/memoize'\nimport { Dictionary } from '../options'\nimport { refineDayCellHookProps } from './DayCellContent'\n\nexport interface DayCellContentArg extends DateMeta {\n  date: DateMarker // localized\n  view: ViewApi\n  dayNumberText: string\n  [extraProp: string]: any // so can include a resource\n}\nexport type DayCellMountArg = MountArg<DayCellContentArg>\n\nexport interface DayCellRootProps {\n  elRef?: Ref<any>\n  date: DateMarker\n  dateProfile: DateProfile\n  todayRange: DateRange\n  showDayNumber?: boolean // defaults to false\n  extraHookProps?: Dictionary\n  children: (\n    rootElRef: Ref<any>,\n    classNames: string[],\n    rootDataAttrs,\n    isDisabled: boolean\n  ) => ComponentChildren\n}\n\nexport class DayCellRoot extends BaseComponent<DayCellRootProps> {\n  refineHookProps = memoizeObjArg(refineDayCellHookProps)\n  normalizeClassNames = buildClassNameNormalizer<DayCellContentArg>()\n\n  render() {\n    let { props, context } = this\n    let { options } = context\n    let hookProps = this.refineHookProps({\n      date: props.date,\n      dateProfile: props.dateProfile,\n      todayRange: props.todayRange,\n      showDayNumber: props.showDayNumber,\n      extraProps: props.extraHookProps,\n      viewApi: context.viewApi,\n      dateEnv: context.dateEnv,\n    })\n\n    let classNames = getDayClassNames(hookProps, context.theme).concat(\n      hookProps.isDisabled\n        ? [] // don't use custom classNames if disabled\n        : this.normalizeClassNames(options.dayCellClassNames, hookProps),\n    )\n\n    let dataAttrs = hookProps.isDisabled ? {} : {\n      'data-date': formatDayString(props.date),\n    }\n\n    return (\n      <MountHook\n        hookProps={hookProps}\n        didMount={options.dayCellDidMount}\n        willUnmount={options.dayCellWillUnmount}\n        elRef={props.elRef}\n      >\n        {(rootElRef) => props.children(rootElRef, classNames, dataAttrs, hookProps.isDisabled)}\n      </MountHook>\n    )\n  }\n}\n","import { createElement } from '../vdom'\nimport { EventRoot } from './EventRoot'\nimport { Seg } from '../component/DateComponent'\nimport { EventContentArg } from '../component/event-rendering'\n\nexport function renderFill(fillType: string) {\n  return (\n    <div className={`fc-${fillType}`} />\n  )\n}\n\nexport interface BgEventProps {\n  seg: Seg\n  isPast: boolean\n  isFuture: boolean\n  isToday: boolean\n}\n\nexport const BgEvent = (props: BgEventProps) => (\n  <EventRoot\n    defaultContent={renderInnerContent}\n    seg={props.seg /* uselesss i think */}\n    timeText=\"\"\n    disableDragging\n    disableResizing\n    isDragging={false}\n    isResizing={false}\n    isDateSelecting={false}\n    isSelected={false}\n    isPast={props.isPast}\n    isFuture={props.isFuture}\n    isToday={props.isToday}\n  >\n    {(rootElRef, classNames, innerElRef, innerContent, hookProps) => (\n      <div\n        ref={rootElRef}\n        className={['fc-bg-event'].concat(classNames).join(' ')}\n        style={{\n          backgroundColor: hookProps.backgroundColor,\n        }}\n      >\n        {innerContent}\n      </div>\n    )}\n  </EventRoot>\n)\n\nfunction renderInnerContent(props: EventContentArg) {\n  let { title } = props.event\n\n  return title && (\n    <div className=\"fc-event-title\">{props.event.title}</div>\n  )\n}\n","import { ViewContext, ViewContextType } from '../ViewContext'\nimport { DateMarker } from '../datelib/marker'\nimport { RenderHook, RenderHookPropsChildren, MountArg } from './render-hook'\nimport { createElement } from '../vdom'\nimport { DateFormatter } from '../datelib/DateFormatter'\n\nexport interface WeekNumberRootProps {\n  date: DateMarker\n  defaultFormat: DateFormatter\n  children: RenderHookPropsChildren\n}\n\nexport interface WeekNumberContentArg {\n  num: number\n  text: string\n  date: Date\n}\nexport type WeekNumberMountArg = MountArg<WeekNumberContentArg>\n\nexport const WeekNumberRoot = (props: WeekNumberRootProps) => (\n  <ViewContextType.Consumer>\n    {(context: ViewContext) => {\n      let { dateEnv, options } = context\n      let { date } = props\n      let format = options.weekNumberFormat || props.defaultFormat\n      let num = dateEnv.computeWeekNumber(date) // TODO: somehow use for formatting as well?\n      let text = dateEnv.format(date, format)\n      let hookProps: WeekNumberContentArg = { num, text, date }\n\n      return (\n        <RenderHook<WeekNumberContentArg> // why isn't WeekNumberContentArg being auto-detected?\n          hookProps={hookProps}\n          classNames={options.weekNumberClassNames}\n          content={options.weekNumberContent}\n          defaultContent={renderInner}\n          didMount={options.weekNumberDidMount}\n          willUnmount={options.weekNumberWillUnmount}\n        >\n          {props.children}\n        </RenderHook>\n      )\n    }}\n  </ViewContextType.Consumer>\n)\n\nfunction renderInner(innerProps) {\n  return innerProps.text\n}\n","import { Dictionary } from '../options'\nimport { computeClippedClientRect } from '../util/dom-geom'\nimport { applyStyle, elementClosest, getEventTargetViaRoot, getUniqueDomId } from '../util/dom-manip'\nimport { createElement, ComponentChildren, Ref, createPortal } from '../vdom'\nimport { BaseComponent, setRef } from '../vdom-util'\n\nexport interface PopoverProps {\n  elRef?: Ref<HTMLElement>\n  id: string\n  title: string\n  extraClassNames?: string[]\n  extraAttrs?: Dictionary\n  parentEl: HTMLElement\n  alignmentEl: HTMLElement\n  alignGridTop?: boolean\n  children?: ComponentChildren\n  onClose?: () => void\n}\n\nconst PADDING_FROM_VIEWPORT = 10\n\nexport class Popover extends BaseComponent<PopoverProps> {\n  private rootEl: HTMLElement\n  state = {\n    titleId: getUniqueDomId(),\n  }\n\n  render() {\n    let { theme, options } = this.context\n    let { props, state } = this\n    let classNames = [\n      'fc-popover',\n      theme.getClass('popover'),\n    ].concat(\n      props.extraClassNames || [],\n    )\n\n    return createPortal(\n      <div\n        id={props.id}\n        className={classNames.join(' ')}\n        aria-labelledby={state.titleId}\n        {...props.extraAttrs}\n        ref={this.handleRootEl}\n      >\n        <div className={'fc-popover-header ' + theme.getClass('popoverHeader')}>\n          <span className=\"fc-popover-title\" id={state.titleId}>\n            {props.title}\n          </span>\n          <span\n            className={'fc-popover-close ' + theme.getIconClass('close')}\n            title={options.closeHint}\n            onClick={this.handleCloseClick}\n          />\n        </div>\n        <div className={'fc-popover-body ' + theme.getClass('popoverContent')}>\n          {props.children}\n        </div>\n      </div>,\n      props.parentEl,\n    )\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleDocumentMouseDown)\n    document.addEventListener('keydown', this.handleDocumentKeyDown)\n    this.updateSize()\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleDocumentMouseDown)\n    document.removeEventListener('keydown', this.handleDocumentKeyDown)\n  }\n\n  handleRootEl = (el: HTMLElement | null) => {\n    this.rootEl = el\n\n    if (this.props.elRef) {\n      setRef(this.props.elRef, el)\n    }\n  }\n\n  // Triggered when the user clicks *anywhere* in the document, for the autoHide feature\n  handleDocumentMouseDown = (ev) => {\n    // only hide the popover if the click happened outside the popover\n    const target = getEventTargetViaRoot(ev) as HTMLElement\n    if (!this.rootEl.contains(target)) {\n      this.handleCloseClick()\n    }\n  }\n\n  handleDocumentKeyDown = (ev) => {\n    if (ev.key === 'Escape') {\n      this.handleCloseClick()\n    }\n  }\n\n  handleCloseClick = () => {\n    let { onClose } = this.props\n    if (onClose) {\n      onClose()\n    }\n  }\n\n  private updateSize() {\n    let { isRtl } = this.context\n    let { alignmentEl, alignGridTop } = this.props\n    let { rootEl } = this\n\n    let alignmentRect = computeClippedClientRect(alignmentEl)\n    if (alignmentRect) {\n      let popoverDims = rootEl.getBoundingClientRect()\n\n      // position relative to viewport\n      let popoverTop = alignGridTop\n        ? elementClosest(alignmentEl, '.fc-scrollgrid').getBoundingClientRect().top\n        : alignmentRect.top\n      let popoverLeft = isRtl ? alignmentRect.right - popoverDims.width : alignmentRect.left\n\n      // constrain\n      popoverTop = Math.max(popoverTop, PADDING_FROM_VIEWPORT)\n      popoverLeft = Math.min(popoverLeft, document.documentElement.clientWidth - PADDING_FROM_VIEWPORT - popoverDims.width)\n      popoverLeft = Math.max(popoverLeft, PADDING_FROM_VIEWPORT)\n\n      let origin = rootEl.offsetParent.getBoundingClientRect()\n      applyStyle(rootEl, {\n        top: popoverTop - origin.top,\n        left: popoverLeft - origin.left,\n      })\n    }\n  }\n}\n","import { DateComponent } from '../component/DateComponent'\nimport { DateRange } from '../datelib/date-range'\nimport { DateMarker } from '../datelib/marker'\nimport { DateProfile } from '../DateProfileGenerator'\nimport { Hit } from '../interactions/hit'\nimport { Dictionary } from '../options'\nimport { createElement, ComponentChildren } from '../vdom'\nimport { DayCellContent } from './DayCellContent'\nimport { DayCellRoot } from './DayCellRoot'\nimport { Popover } from './Popover'\n\nexport interface MorePopoverProps {\n  id: string\n  startDate: DateMarker\n  endDate: DateMarker\n  dateProfile: DateProfile\n  parentEl: HTMLElement\n  alignmentEl: HTMLElement\n  alignGridTop?: boolean\n  todayRange: DateRange\n  extraDateSpan: Dictionary\n  children: ComponentChildren\n  onClose?: () => void\n}\n\nexport class MorePopover extends DateComponent<MorePopoverProps> {\n  rootEl: HTMLElement\n\n  render() {\n    let { options, dateEnv } = this.context\n    let { props } = this\n    let { startDate, todayRange, dateProfile } = props\n    let title = dateEnv.format(startDate, options.dayPopoverFormat)\n    return (\n      <DayCellRoot date={startDate} dateProfile={dateProfile} todayRange={todayRange} elRef={this.handleRootEl}>\n        {(rootElRef, dayClassNames, dataAttrs) => (\n          <Popover\n            elRef={rootElRef}\n            id={props.id}\n            title={title}\n            extraClassNames={['fc-more-popover'].concat(dayClassNames)}\n            extraAttrs={dataAttrs /* TODO: make these time-based when not whole-day? */}\n            parentEl={props.parentEl}\n            alignmentEl={props.alignmentEl}\n            alignGridTop={props.alignGridTop}\n            onClose={props.onClose}\n          >\n            <DayCellContent date={startDate} dateProfile={dateProfile} todayRange={todayRange}>\n              {(innerElRef, innerContent) => (\n                innerContent &&\n                  <div className=\"fc-more-popover-misc\" ref={innerElRef}>{innerContent}</div>\n              )}\n            </DayCellContent>\n            {props.children}\n          </Popover>\n        )}\n      </DayCellRoot>\n    )\n  }\n\n  handleRootEl = (rootEl: HTMLDivElement | null) => {\n    this.rootEl = rootEl\n    if (rootEl) {\n      this.context.registerInteractiveComponent(this, {\n        el: rootEl,\n        useEventCenter: false,\n      })\n    } else {\n      this.context.unregisterInteractiveComponent(this)\n    }\n  }\n\n  queryHit(positionLeft: number, positionTop: number, elWidth: number, elHeight: number): Hit {\n    let { rootEl, props } = this\n\n    if (\n      positionLeft >= 0 && positionLeft < elWidth &&\n      positionTop >= 0 && positionTop < elHeight\n    ) {\n      return {\n        dateProfile: props.dateProfile,\n        dateSpan: {\n          allDay: true,\n          range: {\n            start: props.startDate,\n            end: props.endDate,\n          },\n          ...props.extraDateSpan,\n        },\n        dayEl: rootEl,\n        rect: {\n          left: 0,\n          top: 0,\n          right: elWidth,\n          bottom: elHeight,\n        },\n        layer: 1, // important when comparing with hits from other components\n      }\n    }\n\n    return null\n  }\n}\n","import { EventApi } from '../api/EventApi'\nimport { Seg } from '../component/DateComponent'\nimport { DateRange } from '../datelib/date-range'\nimport { addDays, DateMarker } from '../datelib/marker'\nimport { DateProfile } from '../DateProfileGenerator'\nimport { Dictionary } from '../options'\nimport { elementClosest, getUniqueDomId } from '../util/dom-manip'\nimport { formatWithOrdinals } from '../util/misc'\nimport { ComponentChildren, createElement, createRef, Fragment, Ref, RefObject, VNode } from '../vdom'\nimport { BaseComponent } from '../vdom-util'\nimport { ViewApi } from '../ViewApi'\nimport { ViewContext, ViewContextType } from '../ViewContext'\nimport { MorePopover } from './MorePopover'\nimport { MountArg, RenderHook } from './render-hook'\n\nexport type MoreLinkChildren = (\n  rootElRef: Ref<any>,\n  classNames: string[],\n  innerElRef: Ref<any>,\n  innerContent: ComponentChildren,\n  handleClick: (ev: MouseEvent) => void,\n  title: string, // for a11y\n  isExpanded: boolean,\n  popoverId: string,\n) => ComponentChildren\n\nexport interface MoreLinkRootProps { // what the MoreLinkRoot component receives\n  dateProfile: DateProfile\n  todayRange: DateRange\n  allDayDate: DateMarker | null\n  moreCnt: number // can't always derive from hiddenSegs. some hiddenSegs might be due to lack of dimensions\n  allSegs: Seg[]\n  hiddenSegs: Seg[]\n  extraDateSpan?: Dictionary\n  alignmentElRef: RefObject<HTMLElement> // for popover\n  alignGridTop?: boolean // for popover\n  topAlignmentElRef?: RefObject<HTMLElement>\n  defaultContent?: (hookProps: MoreLinkContentArg) => ComponentChildren\n  popoverContent: () => VNode\n  children: MoreLinkChildren\n}\n\nexport interface MoreLinkContentArg { // what the render-hooks receive\n  num: number\n  text: string\n  shortText: string\n  view: ViewApi\n}\n\nexport type MoreLinkMountArg = MountArg<MoreLinkContentArg>\n\ninterface MoreLinkRootState {\n  isPopoverOpen: boolean\n  popoverId: string\n}\n\nexport class MoreLinkRoot extends BaseComponent<MoreLinkRootProps, MoreLinkRootState> {\n  private linkElRef = createRef<HTMLElement>()\n  private parentEl: HTMLElement\n\n  state = {\n    isPopoverOpen: false,\n    popoverId: getUniqueDomId(),\n  }\n\n  render() {\n    let { props, state } = this\n    return (\n      <ViewContextType.Consumer>\n        {(context: ViewContext) => {\n          let { viewApi, options, calendarApi } = context\n          let { moreLinkText } = options\n          let { moreCnt } = props\n          let range = computeRange(props)\n\n          let text = typeof moreLinkText === 'function' // TODO: eventually use formatWithOrdinals\n            ? moreLinkText.call(calendarApi, moreCnt)\n            : `+${moreCnt} ${moreLinkText}`\n          let title = formatWithOrdinals(options.moreLinkHint, [moreCnt], text)\n          let hookProps: MoreLinkContentArg = {\n            num: moreCnt,\n            shortText: `+${moreCnt}`, // TODO: offer hook or i18n?\n            text,\n            view: viewApi,\n          }\n\n          return (\n            <Fragment>\n              {Boolean(props.moreCnt) && (\n                <RenderHook<MoreLinkContentArg>\n                  elRef={this.linkElRef}\n                  hookProps={hookProps}\n                  classNames={options.moreLinkClassNames}\n                  content={options.moreLinkContent}\n                  defaultContent={props.defaultContent || renderMoreLinkInner}\n                  didMount={options.moreLinkDidMount}\n                  willUnmount={options.moreLinkWillUnmount}\n                >\n                  {(rootElRef, customClassNames, innerElRef, innerContent) => props.children(\n                    rootElRef,\n                    ['fc-more-link'].concat(customClassNames),\n                    innerElRef,\n                    innerContent,\n                    this.handleClick,\n                    title,\n                    state.isPopoverOpen,\n                    state.isPopoverOpen ? state.popoverId : '',\n                  )}\n                </RenderHook>\n              )}\n              {state.isPopoverOpen && (\n                <MorePopover\n                  id={state.popoverId}\n                  startDate={range.start}\n                  endDate={range.end}\n                  dateProfile={props.dateProfile}\n                  todayRange={props.todayRange}\n                  extraDateSpan={props.extraDateSpan}\n                  parentEl={this.parentEl}\n                  alignmentEl={props.alignmentElRef.current}\n                  alignGridTop={props.alignGridTop}\n                  onClose={this.handlePopoverClose}\n                >\n                  {props.popoverContent()}\n                </MorePopover>\n              )}\n            </Fragment>\n          )\n        }}\n      </ViewContextType.Consumer>\n    )\n  }\n\n  componentDidMount() {\n    this.updateParentEl()\n  }\n\n  componentDidUpdate() {\n    this.updateParentEl()\n  }\n\n  updateParentEl() {\n    if (this.linkElRef.current) {\n      this.parentEl = elementClosest(this.linkElRef.current, '.fc-view-harness')\n    }\n  }\n\n  handleClick = (ev: MouseEvent) => {\n    let { props, context } = this\n    let { moreLinkClick } = context.options\n    let date = computeRange(props).start\n\n    function buildPublicSeg(seg: Seg) {\n      let { def, instance, range } = seg.eventRange\n      return {\n        event: new EventApi(context, def, instance),\n        start: context.dateEnv.toDate(range.start),\n        end: context.dateEnv.toDate(range.end),\n        isStart: seg.isStart,\n        isEnd: seg.isEnd,\n      }\n    }\n\n    if (typeof moreLinkClick === 'function') {\n      moreLinkClick = moreLinkClick({\n        date,\n        allDay: Boolean(props.allDayDate),\n        allSegs: props.allSegs.map(buildPublicSeg),\n        hiddenSegs: props.hiddenSegs.map(buildPublicSeg),\n        jsEvent: ev,\n        view: context.viewApi,\n      }) as string | undefined\n    }\n\n    if (!moreLinkClick || moreLinkClick === 'popover') {\n      this.setState({ isPopoverOpen: true })\n    } else if (typeof moreLinkClick === 'string') { // a view name\n      context.calendarApi.zoomTo(date, moreLinkClick)\n    }\n  }\n\n  handlePopoverClose = () => {\n    this.setState({ isPopoverOpen: false })\n  }\n}\n\nfunction renderMoreLinkInner(props: MoreLinkContentArg) {\n  return props.text\n}\n\nfunction computeRange(props: MoreLinkRootProps): DateRange {\n  if (props.allDayDate) {\n    return {\n      start: props.allDayDate,\n      end: addDays(props.allDayDate, 1),\n    }\n  }\n\n  let { hiddenSegs } = props\n  return {\n    start: computeEarliestSegStart(hiddenSegs),\n    end: computeLatestSegEnd(hiddenSegs),\n  }\n}\n\nexport function computeEarliestSegStart(segs: Seg[]): DateMarker {\n  return segs.reduce(pickEarliestStart).eventRange.range.start\n}\n\nfunction pickEarliestStart(seg0: Seg, seg1: Seg): Seg {\n  return seg0.eventRange.range.start < seg1.eventRange.range.start ? seg0 : seg1\n}\n\nfunction computeLatestSegEnd(segs: Seg[]): DateMarker {\n  return segs.reduce(pickLatestEnd).eventRange.range.end\n}\n\nfunction pickLatestEnd(seg0: Seg, seg1: Seg): Seg {\n  return seg0.eventRange.range.end > seg1.eventRange.range.end ? seg0 : seg1\n}\n","var data = {\n\t\"body\": \"<path fill=\\\"currentColor\\\" d=\\\"M13.83 19a1 1 0 0 1-.78-.37l-4.83-6a1 1 0 0 1 0-1.27l5-6a1 1 0 0 1 1.54 1.28L10.29 12l4.32 5.36a1 1 0 0 1-.78 1.64z\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import {\n  VNode, createElement,\n  SimpleScrollGrid,\n  SimpleScrollGridSection,\n  ChunkContentCallbackArgs,\n  createRef,\n  ScrollGridSectionConfig,\n  ViewRoot,\n  DateComponent,\n  ViewProps,\n  RefObject,\n  renderScrollShim,\n  getStickyHeaderDates,\n  getStickyFooterScrollbar,\n  ChunkConfigRowContent,\n  Dictionary,\n} from '@fullcalendar/common'\n\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\n\nexport abstract class TableView<State=Dictionary> extends DateComponent<ViewProps, State> {\n  protected headerElRef: RefObject<HTMLTableCellElement> = createRef<HTMLTableCellElement>()\n\n  renderSimpleLayout(\n    headerRowContent: ChunkConfigRowContent,\n    bodyContent: (contentArg: ChunkContentCallbackArgs) => VNode,\n  ) {\n    let { props, context } = this\n    let sections: SimpleScrollGridSection[] = []\n    let stickyHeaderDates = getStickyHeaderDates(context.options)\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunk: {\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent,\n        },\n      })\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunk: { content: bodyContent },\n    })\n\n    return (\n      <ViewRoot viewSpec={context.viewSpec}>\n        {(rootElRef, classNames) => (\n          <div ref={rootElRef} className={['fc-daygrid'].concat(classNames).join(' ')}>\n            <SimpleScrollGrid\n              liquid={!props.isHeightAuto && !props.forPrint}\n              collapsibleWidth={props.forPrint}\n              cols={[] /* TODO: make optional? */}\n              sections={sections}\n            />\n          </div>\n        )}\n      </ViewRoot>\n    )\n  }\n\n  renderHScrollLayout(\n    headerRowContent: ChunkConfigRowContent,\n    bodyContent: (contentArg: ChunkContentCallbackArgs) => VNode,\n    colCnt: number,\n    dayMinWidth: number,\n  ) {\n    let ScrollGrid = this.context.pluginHooks.scrollGridImpl\n\n    if (!ScrollGrid) {\n      throw new Error('No ScrollGrid implementation')\n    }\n\n    let { props, context } = this\n    let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options)\n    let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options)\n    let sections: ScrollGridSectionConfig[] = []\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunks: [{\n          key: 'main',\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent,\n        }],\n      })\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunks: [{\n        key: 'main',\n        content: bodyContent,\n      }],\n    })\n\n    if (stickyFooterScrollbar) {\n      sections.push({\n        type: 'footer',\n        key: 'footer',\n        isSticky: true,\n        chunks: [{\n          key: 'main',\n          content: renderScrollShim,\n        }],\n      })\n    }\n\n    return (\n      <ViewRoot viewSpec={context.viewSpec}>\n        {(rootElRef, classNames) => (\n          <div ref={rootElRef} className={['fc-daygrid'].concat(classNames).join(' ')}>\n            <ScrollGrid\n              liquid={!props.isHeightAuto && !props.forPrint}\n              collapsibleWidth={props.forPrint}\n              colGroups={[{ cols: [{ span: colCnt, minWidth: dayMinWidth }] }]}\n              sections={sections}\n            />\n          </div>\n        )}\n      </ViewRoot>\n    )\n  }\n}\n","import { EventSegUiInteractionState, Seg } from '@fullcalendar/common'\n\n// this is a DATA STRUCTURE, not a component\n\nexport interface TableSeg extends Seg {\n  row: number\n  firstCol: number\n  lastCol: number\n}\n\nexport function splitSegsByRow(segs: TableSeg[], rowCnt: number) {\n  let byRow: TableSeg[][] = []\n\n  for (let i = 0; i < rowCnt; i += 1) {\n    byRow[i] = []\n  }\n\n  for (let seg of segs) {\n    byRow[seg.row].push(seg)\n  }\n\n  return byRow\n}\n\nexport function splitSegsByFirstCol(segs: TableSeg[], colCnt: number) {\n  let byCol: TableSeg[][] = []\n\n  for (let i = 0; i < colCnt; i += 1) {\n    byCol[i] = []\n  }\n\n  for (let seg of segs) {\n    byCol[seg.firstCol].push(seg)\n  }\n\n  return byCol\n}\n\nexport function splitInteractionByRow(ui: EventSegUiInteractionState | null, rowCnt: number) {\n  let byRow: EventSegUiInteractionState[] = []\n\n  if (!ui) {\n    for (let i = 0; i < rowCnt; i += 1) {\n      byRow[i] = null\n    }\n  } else {\n    for (let i = 0; i < rowCnt; i += 1) {\n      byRow[i] = {\n        affectedInstances: ui.affectedInstances,\n        isEvent: ui.isEvent,\n        segs: [],\n      }\n    }\n\n    for (let seg of ui.segs) {\n      byRow[seg.row].segs.push(seg)\n    }\n  }\n\n  return byRow\n}\n","import {\n  createElement,\n  DateMarker,\n  DateRange,\n  DayCellContentArg,\n  DayCellContent,\n  BaseComponent,\n  DateProfile,\n  Dictionary,\n  Fragment,\n  buildNavLinkAttrs,\n} from '@fullcalendar/common'\n\ninterface TableCellTopProps {\n  date: DateMarker\n  dateProfile: DateProfile\n  showDayNumber: boolean\n  dayNumberId: string\n  forceDayTop: boolean // hack to force-create an element with height (created by a nbsp)\n  todayRange: DateRange\n  extraHookProps?: Dictionary\n}\n\nexport class TableCellTop extends BaseComponent<TableCellTopProps> {\n  render() {\n    let { props } = this\n    let navLinkAttrs = buildNavLinkAttrs(this.context, props.date)\n\n    return (\n      <DayCellContent\n        date={props.date}\n        dateProfile={props.dateProfile}\n        todayRange={props.todayRange}\n        showDayNumber={props.showDayNumber}\n        extraHookProps={props.extraHookProps}\n        defaultContent={renderTopInner}\n      >\n        {(innerElRef, innerContent) => (\n          (innerContent || props.forceDayTop) && (\n            <div className=\"fc-daygrid-day-top\" ref={innerElRef}>\n              <a\n                id={props.dayNumberId}\n                className=\"fc-daygrid-day-number\"\n                {...navLinkAttrs}\n              >\n                {innerContent || <Fragment>&nbsp;</Fragment>}\n              </a>\n            </div>\n          )\n        )}\n      </DayCellContent>\n    )\n  }\n}\n\nfunction renderTopInner(props: DayCellContentArg) {\n  return props.dayNumberText\n}\n","import { createFormatter } from '@fullcalendar/common'\nimport { TableSeg } from './TableSeg'\n\nexport const DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  omitZeroMinute: true,\n  meridiem: 'narrow',\n})\n\nexport function hasListItemDisplay(seg: TableSeg) {\n  let { display } = seg.eventRange.ui\n\n  return display === 'list-item' || (\n    display === 'auto' &&\n    !seg.eventRange.def.allDay &&\n    seg.firstCol === seg.lastCol && // can't be multi-day\n    seg.isStart && // \"\n    seg.isEnd // \"\n  )\n}\n","import { createElement, StandardEvent, BaseComponent, MinimalEventProps } from '@fullcalendar/common'\nimport { DEFAULT_TABLE_EVENT_TIME_FORMAT } from './event-rendering'\n\nexport interface TableBlockEventProps extends MinimalEventProps {\n  defaultDisplayEventEnd: boolean\n}\n\nexport class TableBlockEvent extends BaseComponent<TableBlockEventProps> {\n  render() {\n    let { props } = this\n\n    return (\n      <StandardEvent\n        {...props}\n        extraClassNames={['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event']}\n        defaultTimeFormat={DEFAULT_TABLE_EVENT_TIME_FORMAT}\n        defaultDisplayEventEnd={props.defaultDisplayEventEnd}\n        disableResizing={!props.seg.eventRange.def.allDay}\n      />\n    )\n  }\n}\n","import {\n  createElement,\n  BaseComponent,\n  Seg,\n  EventRoot,\n  buildSegTimeText,\n  EventContentArg,\n  Fragment,\n  getSegAnchorAttrs,\n} from '@fullcalendar/common'\nimport { DEFAULT_TABLE_EVENT_TIME_FORMAT } from './event-rendering'\n\nexport interface DotTableEventProps {\n  seg: Seg\n  isDragging: boolean\n  isSelected: boolean\n  isPast: boolean\n  isFuture: boolean\n  isToday: boolean\n  defaultDisplayEventEnd: boolean\n}\n\nexport class TableListItemEvent extends BaseComponent<DotTableEventProps> {\n  render() {\n    let { props, context } = this\n    let timeFormat = context.options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT\n    let timeText = buildSegTimeText(\n      props.seg,\n      timeFormat,\n      context,\n      true,\n      props.defaultDisplayEventEnd,\n    )\n\n    return (\n      <EventRoot\n        seg={props.seg}\n        timeText={timeText}\n        defaultContent={renderInnerContent}\n        isDragging={props.isDragging}\n        isResizing={false}\n        isDateSelecting={false}\n        isSelected={props.isSelected}\n        isPast={props.isPast}\n        isFuture={props.isFuture}\n        isToday={props.isToday}\n      >\n        {(rootElRef, classNames, innerElRef, innerContent) => ( // we don't use styles!\n          <a\n            className={['fc-daygrid-event', 'fc-daygrid-dot-event'].concat(classNames).join(' ')}\n            ref={rootElRef}\n            {...getSegAnchorAttrs(props.seg, context)}\n          >\n            {innerContent}\n          </a>\n        )}\n      </EventRoot>\n    )\n  }\n}\n\nfunction renderInnerContent(innerProps: EventContentArg) {\n  return (\n    <Fragment>\n      <div\n        className=\"fc-daygrid-event-dot\"\n        style={{ borderColor: innerProps.borderColor || innerProps.backgroundColor }}\n      />\n      {innerProps.timeText && (\n        <div className=\"fc-event-time\">{innerProps.timeText}</div>\n      )}\n      <div className=\"fc-event-title\">\n        {innerProps.event.title || <Fragment>&nbsp;</Fragment>}\n      </div>\n    </Fragment>\n  )\n}\n","import {\n  createElement,\n  MoreLinkRoot,\n  RefObject,\n  BaseComponent,\n  memoize,\n  DateMarker,\n  Dictionary,\n  DateProfile,\n  DateRange,\n  EventSegUiInteractionState,\n  getSegMeta,\n  Fragment,\n  createAriaClickAttrs,\n} from '@fullcalendar/common'\nimport { TableSegPlacement } from './event-placement'\nimport { hasListItemDisplay } from './event-rendering'\nimport { TableBlockEvent } from './TableBlockEvent'\nimport { TableListItemEvent } from './TableListItemEvent'\nimport { TableSeg } from './TableSeg'\n\nexport interface TableCellMoreLinkProps {\n  allDayDate: DateMarker\n  singlePlacements: TableSegPlacement[]\n  moreCnt: number\n  alignmentElRef: RefObject<HTMLElement> // for popover\n  alignGridTop: boolean // for popover\n  extraDateSpan?: Dictionary\n  dateProfile: DateProfile\n  todayRange: DateRange\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n}\n\nexport class TableCellMoreLink extends BaseComponent<TableCellMoreLinkProps> {\n  compileSegs = memoize(compileSegs)\n\n  render() {\n    let { props } = this\n    let { allSegs, invisibleSegs } = this.compileSegs(props.singlePlacements)\n\n    return (\n      <MoreLinkRoot\n        dateProfile={props.dateProfile}\n        todayRange={props.todayRange}\n        allDayDate={props.allDayDate}\n        moreCnt={props.moreCnt}\n        allSegs={allSegs}\n        hiddenSegs={invisibleSegs}\n        alignmentElRef={props.alignmentElRef}\n        alignGridTop={props.alignGridTop}\n        extraDateSpan={props.extraDateSpan}\n        popoverContent={() => {\n          let isForcedInvisible =\n            (props.eventDrag ? props.eventDrag.affectedInstances : null) ||\n            (props.eventResize ? props.eventResize.affectedInstances : null) ||\n            {}\n          return (\n            <Fragment>\n              {allSegs.map((seg) => {\n                let instanceId = seg.eventRange.instance.instanceId\n                return (\n                  <div\n                    className=\"fc-daygrid-event-harness\"\n                    key={instanceId}\n                    style={{\n                      visibility: isForcedInvisible[instanceId] ? 'hidden' : ('' as any),\n                    }}\n                  >\n                    {hasListItemDisplay(seg) ? (\n                      <TableListItemEvent\n                        seg={seg}\n                        isDragging={false}\n                        isSelected={instanceId === props.eventSelection}\n                        defaultDisplayEventEnd={false}\n                        {...getSegMeta(seg, props.todayRange)}\n                      />\n                    ) : (\n                      <TableBlockEvent\n                        seg={seg}\n                        isDragging={false}\n                        isResizing={false}\n                        isDateSelecting={false}\n                        isSelected={instanceId === props.eventSelection}\n                        defaultDisplayEventEnd={false}\n                        {...getSegMeta(seg, props.todayRange)}\n                      />\n                    )}\n                  </div>\n                )\n              })}\n            </Fragment>\n          )\n        }}\n      >\n        {(rootElRef, classNames, innerElRef, innerContent, handleClick, title, isExpanded, popoverId) => (\n          <a\n            ref={rootElRef}\n            className={['fc-daygrid-more-link'].concat(classNames).join(' ')}\n            title={title}\n            aria-expanded={isExpanded}\n            aria-controls={popoverId}\n            {...createAriaClickAttrs(handleClick)}\n          >\n            {innerContent}\n          </a>\n        )}\n      </MoreLinkRoot>\n    )\n  }\n}\n\nfunction compileSegs(singlePlacements: TableSegPlacement[]): {\n  allSegs: TableSeg[]\n  invisibleSegs: TableSeg[]\n} {\n  let allSegs: TableSeg[] = []\n  let invisibleSegs: TableSeg[] = []\n\n  for (let placement of singlePlacements) {\n    allSegs.push(placement.seg)\n\n    if (!placement.isVisible) {\n      invisibleSegs.push(placement.seg)\n    }\n  }\n\n  return { allSegs, invisibleSegs }\n}\n","import {\n  Ref,\n  ComponentChildren,\n  createElement,\n  DateMarker,\n  DateComponent,\n  DateRange,\n  buildNavLinkAttrs,\n  WeekNumberRoot,\n  DayCellRoot,\n  DateProfile,\n  setRef,\n  createFormatter,\n  Dictionary,\n  createRef,\n  EventSegUiInteractionState,\n  getUniqueDomId,\n} from '@fullcalendar/common'\nimport { TableCellTop } from './TableCellTop'\nimport { TableCellMoreLink } from './TableCellMoreLink'\nimport { TableSegPlacement } from './event-placement'\n\nexport interface TableCellProps {\n  date: DateMarker\n  dateProfile: DateProfile\n  extraHookProps?: Dictionary\n  extraDataAttrs?: Dictionary\n  extraClassNames?: string[]\n  extraDateSpan?: Dictionary\n  elRef?: Ref<HTMLTableCellElement>\n  innerElRef?: Ref<HTMLDivElement>\n  bgContent: ComponentChildren\n  fgContentElRef?: Ref<HTMLDivElement> // TODO: rename!!! classname confusion. is the \"event\" div\n  fgContent: ComponentChildren\n  moreCnt: number\n  moreMarginTop: number\n  showDayNumber: boolean\n  showWeekNumber: boolean\n  forceDayTop: boolean\n  todayRange: DateRange\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n  singlePlacements: TableSegPlacement[]\n}\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'narrow' })\n\nexport class TableCell extends DateComponent<TableCellProps> {\n  private rootElRef = createRef<HTMLElement>()\n  state = {\n    dayNumberId: getUniqueDomId(),\n  }\n\n  render() {\n    let { context, props, state, rootElRef } = this\n    let { date, dateProfile } = props\n    let navLinkAttrs = buildNavLinkAttrs(context, date, 'week')\n\n    return (\n      <DayCellRoot\n        date={date}\n        dateProfile={dateProfile}\n        todayRange={props.todayRange}\n        showDayNumber={props.showDayNumber}\n        extraHookProps={props.extraHookProps}\n        elRef={this.handleRootEl}\n      >\n        {(dayElRef, dayClassNames, rootDataAttrs, isDisabled) => (\n          <td\n            ref={dayElRef}\n            role=\"gridcell\"\n            className={['fc-daygrid-day'].concat(dayClassNames, props.extraClassNames || []).join(' ')}\n            {...rootDataAttrs}\n            {...props.extraDataAttrs}\n            {...(props.showDayNumber ? { 'aria-labelledby': state.dayNumberId } : {})}\n          >\n            <div className=\"fc-daygrid-day-frame fc-scrollgrid-sync-inner\" ref={props.innerElRef /* different from hook system! RENAME */}>\n              {props.showWeekNumber && (\n                <WeekNumberRoot date={date} defaultFormat={DEFAULT_WEEK_NUM_FORMAT}>\n                  {(weekElRef, weekClassNames, innerElRef, innerContent) => (\n                    <a\n                      ref={weekElRef}\n                      className={['fc-daygrid-week-number'].concat(weekClassNames).join(' ')}\n                      {...navLinkAttrs}\n                    >\n                      {innerContent}\n                    </a>\n                  )}\n                </WeekNumberRoot>\n              )}\n              {!isDisabled && (\n                <TableCellTop\n                  date={date}\n                  dateProfile={dateProfile}\n                  showDayNumber={props.showDayNumber}\n                  dayNumberId={state.dayNumberId}\n                  forceDayTop={props.forceDayTop}\n                  todayRange={props.todayRange}\n                  extraHookProps={props.extraHookProps}\n                />\n              )}\n              <div\n                className=\"fc-daygrid-day-events\"\n                ref={props.fgContentElRef}\n              >\n                {props.fgContent}\n                <div className=\"fc-daygrid-day-bottom\" style={{ marginTop: props.moreMarginTop }}>\n                  <TableCellMoreLink\n                    allDayDate={date}\n                    singlePlacements={props.singlePlacements}\n                    moreCnt={props.moreCnt}\n                    alignmentElRef={rootElRef}\n                    alignGridTop={!props.showDayNumber}\n                    extraDateSpan={props.extraDateSpan}\n                    dateProfile={props.dateProfile}\n                    eventSelection={props.eventSelection}\n                    eventDrag={props.eventDrag}\n                    eventResize={props.eventResize}\n                    todayRange={props.todayRange}\n                  />\n                </div>\n              </div>\n              <div className=\"fc-daygrid-day-bg\">\n                {props.bgContent}\n              </div>\n            </div>\n          </td>\n        )}\n      </DayCellRoot>\n    )\n  }\n\n  handleRootEl = (el: HTMLElement) => {\n    setRef(this.rootElRef, el)\n    setRef(this.props.elRef, el)\n  }\n}\n","import {\n  EventSegUiInteractionState,\n  VNode,\n  DateComponent,\n  createElement,\n  PositionCache,\n  RefMap,\n  CssDimValue,\n  DateRange,\n  getSegMeta,\n  DateProfile,\n  Fragment,\n  BgEvent,\n  renderFill,\n  isPropsEqual,\n  createRef,\n  buildEventRangeKey,\n  sortEventSegs,\n  DayTableCell,\n} from '@fullcalendar/common'\nimport { TableSeg, splitSegsByFirstCol } from './TableSeg'\nimport { TableCell } from './TableCell'\nimport { TableListItemEvent } from './TableListItemEvent'\nimport { TableBlockEvent } from './TableBlockEvent'\nimport { computeFgSegPlacement, TableSegPlacement } from './event-placement'\nimport { hasListItemDisplay } from './event-rendering'\n\n// TODO: attach to window resize?\n\nexport interface TableRowProps {\n  cells: DayTableCell[]\n  renderIntro?: () => VNode\n  businessHourSegs: TableSeg[]\n  bgEventSegs: TableSeg[]\n  fgEventSegs: TableSeg[]\n  dateSelectionSegs: TableSeg[]\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n  dayMaxEvents: boolean | number\n  dayMaxEventRows: boolean | number\n  clientWidth: number | null\n  clientHeight: number | null // simply for causing an updateSize, for when liquid height\n  dateProfile: DateProfile\n  todayRange: DateRange\n  showDayNumbers: boolean\n  showWeekNumbers: boolean\n  forPrint: boolean\n}\n\ninterface TableRowState {\n  framePositions: PositionCache\n  maxContentHeight: number | null\n  eventInstanceHeights: { [instanceId: string]: number } // integers\n}\n\nexport class TableRow extends DateComponent<TableRowProps, TableRowState> {\n  private cellElRefs = new RefMap<HTMLTableCellElement>() // the <td>\n  private frameElRefs = new RefMap<HTMLElement>() // the fc-daygrid-day-frame\n  private fgElRefs = new RefMap<HTMLDivElement>() // the fc-daygrid-day-events\n  private segHarnessRefs = new RefMap<HTMLDivElement>() // indexed by \"instanceId:firstCol\"\n  private rootElRef = createRef<HTMLTableRowElement>()\n\n  state: TableRowState = {\n    framePositions: null,\n    maxContentHeight: null,\n    eventInstanceHeights: {},\n  }\n\n  render() {\n    let { props, state, context } = this\n    let { options } = context\n    let colCnt = props.cells.length\n\n    let businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt)\n    let bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt)\n    let highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt)\n    let mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt)\n\n    let { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops } = computeFgSegPlacement(\n      sortEventSegs(props.fgEventSegs, options.eventOrder) as TableSeg[],\n      props.dayMaxEvents,\n      props.dayMaxEventRows,\n      options.eventOrderStrict,\n      state.eventInstanceHeights,\n      state.maxContentHeight,\n      props.cells,\n    )\n\n    let isForcedInvisible = // TODO: messy way to compute this\n      (props.eventDrag && props.eventDrag.affectedInstances) ||\n      (props.eventResize && props.eventResize.affectedInstances) ||\n      {}\n\n    return (\n      <tr ref={this.rootElRef} role=\"row\">\n        {props.renderIntro && props.renderIntro()}\n        {props.cells.map((cell, col) => {\n          let normalFgNodes = this.renderFgSegs(\n            col,\n            props.forPrint ? singleColPlacements[col] : multiColPlacements[col],\n            props.todayRange,\n            isForcedInvisible,\n          )\n\n          let mirrorFgNodes = this.renderFgSegs(\n            col,\n            buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements),\n            props.todayRange,\n            {},\n            Boolean(props.eventDrag),\n            Boolean(props.eventResize),\n            false, // date-selecting (because mirror is never drawn for date selection)\n          )\n\n          return (\n            <TableCell\n              key={cell.key}\n              elRef={this.cellElRefs.createRef(cell.key)}\n              innerElRef={this.frameElRefs.createRef(cell.key) /* FF <td> problem, but okay to use for left/right. TODO: rename prop */}\n              dateProfile={props.dateProfile}\n              date={cell.date}\n              showDayNumber={props.showDayNumbers}\n              showWeekNumber={props.showWeekNumbers && col === 0}\n              forceDayTop={props.showWeekNumbers /* even displaying weeknum for row, not necessarily day */}\n              todayRange={props.todayRange}\n              eventSelection={props.eventSelection}\n              eventDrag={props.eventDrag}\n              eventResize={props.eventResize}\n              extraHookProps={cell.extraHookProps}\n              extraDataAttrs={cell.extraDataAttrs}\n              extraClassNames={cell.extraClassNames}\n              extraDateSpan={cell.extraDateSpan}\n              moreCnt={moreCnts[col]}\n              moreMarginTop={moreMarginTops[col]}\n              singlePlacements={singleColPlacements[col]}\n              fgContentElRef={this.fgElRefs.createRef(cell.key)}\n              fgContent={( // Fragment scopes the keys\n                <Fragment>\n                  <Fragment>{normalFgNodes}</Fragment>\n                  <Fragment>{mirrorFgNodes}</Fragment>\n                </Fragment>\n              )}\n              bgContent={( // Fragment scopes the keys\n                <Fragment>\n                  {this.renderFillSegs(highlightSegsByCol[col], 'highlight')}\n                  {this.renderFillSegs(businessHoursByCol[col], 'non-business')}\n                  {this.renderFillSegs(bgEventSegsByCol[col], 'bg-event')}\n                </Fragment>\n              )}\n            />\n          )\n        })}\n      </tr>\n    )\n  }\n\n  componentDidMount() {\n    this.updateSizing(true)\n  }\n\n  componentDidUpdate(prevProps: TableRowProps, prevState: TableRowState) {\n    let currentProps = this.props\n\n    this.updateSizing(\n      !isPropsEqual(prevProps, currentProps),\n    )\n  }\n\n  getHighlightSegs(): TableSeg[] {\n    let { props } = this\n\n    if (props.eventDrag && props.eventDrag.segs.length) { // messy check\n      return props.eventDrag.segs as TableSeg[]\n    }\n\n    if (props.eventResize && props.eventResize.segs.length) { // messy check\n      return props.eventResize.segs as TableSeg[]\n    }\n\n    return props.dateSelectionSegs\n  }\n\n  getMirrorSegs(): TableSeg[] {\n    let { props } = this\n\n    if (props.eventResize && props.eventResize.segs.length) { // messy check\n      return props.eventResize.segs as TableSeg[]\n    }\n\n    return []\n  }\n\n  renderFgSegs(\n    col: number,\n    segPlacements: TableSegPlacement[],\n    todayRange: DateRange,\n    isForcedInvisible: { [instanceId: string]: any },\n    isDragging?: boolean,\n    isResizing?: boolean,\n    isDateSelecting?: boolean,\n  ): VNode[] {\n    let { context } = this\n    let { eventSelection } = this.props\n    let { framePositions } = this.state\n    let defaultDisplayEventEnd = this.props.cells.length === 1 // colCnt === 1\n    let isMirror = isDragging || isResizing || isDateSelecting\n    let nodes: VNode[] = []\n\n    if (framePositions) {\n      for (let placement of segPlacements) {\n        let { seg } = placement\n        let { instanceId } = seg.eventRange.instance\n        let key = instanceId + ':' + col\n        let isVisible = placement.isVisible && !isForcedInvisible[instanceId]\n        let isAbsolute = placement.isAbsolute\n        let left: CssDimValue = ''\n        let right: CssDimValue = ''\n\n        if (isAbsolute) {\n          if (context.isRtl) {\n            right = 0\n            left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol]\n          } else {\n            left = 0\n            right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol]\n          }\n        }\n\n        /*\n        known bug: events that are force to be list-item but span multiple days still take up space in later columns\n        todo: in print view, for multi-day events, don't display title within non-start/end segs\n        */\n        nodes.push(\n          <div\n            className={'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : '')}\n            key={key}\n            ref={isMirror ? null : this.segHarnessRefs.createRef(key)}\n            style={{\n              visibility: isVisible ? ('' as any) : 'hidden',\n              marginTop: isAbsolute ? '' : placement.marginTop,\n              top: isAbsolute ? placement.absoluteTop : '',\n              left,\n              right,\n            }}\n          >\n            {hasListItemDisplay(seg) ? (\n              <TableListItemEvent\n                seg={seg}\n                isDragging={isDragging}\n                isSelected={instanceId === eventSelection}\n                defaultDisplayEventEnd={defaultDisplayEventEnd}\n                {...getSegMeta(seg, todayRange)}\n              />\n            ) : (\n              <TableBlockEvent\n                seg={seg}\n                isDragging={isDragging}\n                isResizing={isResizing}\n                isDateSelecting={isDateSelecting}\n                isSelected={instanceId === eventSelection}\n                defaultDisplayEventEnd={defaultDisplayEventEnd}\n                {...getSegMeta(seg, todayRange)}\n              />\n            )}\n          </div>,\n        )\n      }\n    }\n\n    return nodes\n  }\n\n  renderFillSegs(segs: TableSeg[], fillType: string): VNode {\n    let { isRtl } = this.context\n    let { todayRange } = this.props\n    let { framePositions } = this.state\n    let nodes: VNode[] = []\n\n    if (framePositions) {\n      for (let seg of segs) {\n        let leftRightCss = isRtl ? {\n          right: 0,\n          left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol],\n        } : {\n          left: 0,\n          right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol],\n        }\n\n        nodes.push(\n          <div\n            key={buildEventRangeKey(seg.eventRange)}\n            className=\"fc-daygrid-bg-harness\"\n            style={leftRightCss}\n          >\n            {fillType === 'bg-event' ?\n              <BgEvent seg={seg} {...getSegMeta(seg, todayRange)} /> :\n              renderFill(fillType)}\n          </div>,\n        )\n      }\n    }\n\n    return createElement(Fragment, {}, ...nodes)\n  }\n\n  updateSizing(isExternalSizingChange) {\n    let { props, frameElRefs } = this\n\n    if (\n      !props.forPrint &&\n      props.clientWidth !== null // positioning ready?\n    ) {\n      if (isExternalSizingChange) {\n        let frameEls = props.cells.map((cell) => frameElRefs.currentMap[cell.key])\n\n        if (frameEls.length) {\n          let originEl = this.rootElRef.current\n\n          this.setState({ // will trigger isCellPositionsChanged...\n            framePositions: new PositionCache(\n              originEl,\n              frameEls,\n              true, // isHorizontal\n              false,\n            ),\n          })\n        }\n      }\n\n      const oldInstanceHeights = this.state.eventInstanceHeights\n      const newInstanceHeights = this.queryEventInstanceHeights()\n      const limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true\n\n      this.setState({\n        // HACK to prevent oscillations of events being shown/hidden from max-event-rows\n        // Essentially, once you compute an element's height, never null-out.\n        // TODO: always display all events, as visibility:hidden?\n        eventInstanceHeights: { ...oldInstanceHeights, ...newInstanceHeights },\n\n        maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null,\n      })\n    }\n  }\n\n  queryEventInstanceHeights() {\n    let segElMap = this.segHarnessRefs.currentMap\n    let eventInstanceHeights: { [key: string]: number } = {}\n\n    // get the max height amongst instance segs\n    for (let key in segElMap) {\n      let height = Math.round(segElMap[key].getBoundingClientRect().height)\n      let instanceId = key.split(':')[0] // deconstruct how renderFgSegs makes the key\n      eventInstanceHeights[instanceId] = Math.max(eventInstanceHeights[instanceId] || 0, height)\n    }\n\n    return eventInstanceHeights\n  }\n\n  computeMaxContentHeight() {\n    let firstKey = this.props.cells[0].key\n    let cellEl = this.cellElRefs.currentMap[firstKey]\n    let fcContainerEl = this.fgElRefs.currentMap[firstKey]\n\n    return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top\n  }\n\n  public getCellEls() {\n    let elMap = this.cellElRefs.currentMap\n\n    return this.props.cells.map((cell) => elMap[cell.key])\n  }\n}\n\nTableRow.addStateEquality({\n  eventInstanceHeights: isPropsEqual,\n})\n\nfunction buildMirrorPlacements(mirrorSegs: TableSeg[], colPlacements: TableSegPlacement[][]): TableSegPlacement[] {\n  if (!mirrorSegs.length) {\n    return []\n  }\n  let topsByInstanceId = buildAbsoluteTopHash(colPlacements) // TODO: cache this at first render?\n  return mirrorSegs.map((seg: TableSeg) => ({\n    seg,\n    isVisible: true,\n    isAbsolute: true,\n    absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],\n    marginTop: 0,\n  }))\n}\n\nfunction buildAbsoluteTopHash(colPlacements: TableSegPlacement[][]): { [instanceId: string]: number } {\n  let topsByInstanceId: { [instanceId: string]: number } = {}\n\n  for (let placements of colPlacements) {\n    for (let placement of placements) {\n      topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop\n    }\n  }\n\n  return topsByInstanceId\n}\n","import {\n  EventSegUiInteractionState,\n  VNode,\n  DateComponent,\n  RefObject,\n  CssDimValue,\n  createElement,\n  PositionCache,\n  memoize,\n  addDays,\n  RefMap,\n  DateRange,\n  NowTimer,\n  DateMarker,\n  DateProfile,\n  Fragment,\n  Hit,\n  DayTableCell,\n} from '@fullcalendar/common'\nimport { TableSeg, splitSegsByRow, splitInteractionByRow } from './TableSeg'\nimport { TableRow } from './TableRow'\n\nexport interface TableProps {\n  dateProfile: DateProfile\n  cells: DayTableCell[][] // cells-BY-ROW\n  renderRowIntro?: () => VNode\n  colGroupNode: VNode\n  tableMinWidth: CssDimValue\n  expandRows: boolean\n  showWeekNumbers: boolean\n  clientWidth: number | null\n  clientHeight: number | null\n  businessHourSegs: TableSeg[]\n  bgEventSegs: TableSeg[]\n  fgEventSegs: TableSeg[]\n  dateSelectionSegs: TableSeg[]\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n  dayMaxEvents: boolean | number\n  dayMaxEventRows: boolean | number\n  headerAlignElRef?: RefObject<HTMLElement>\n  forPrint: boolean\n  isHitComboAllowed?: (hit0: Hit, hit1: Hit) => boolean\n}\n\nexport class Table extends DateComponent<TableProps> {\n  private splitBusinessHourSegs = memoize(splitSegsByRow)\n  private splitBgEventSegs = memoize(splitSegsByRow)\n  private splitFgEventSegs = memoize(splitSegsByRow)\n  private splitDateSelectionSegs = memoize(splitSegsByRow)\n  private splitEventDrag = memoize(splitInteractionByRow)\n  private splitEventResize = memoize(splitInteractionByRow)\n  private rootEl: HTMLElement\n  private rowRefs = new RefMap<TableRow>()\n  private rowPositions: PositionCache\n  private colPositions: PositionCache\n\n  render() {\n    let { props } = this\n    let { dateProfile, dayMaxEventRows, dayMaxEvents, expandRows } = props\n    let rowCnt = props.cells.length\n\n    let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt)\n    let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt)\n    let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt)\n    let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt)\n    let eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt)\n    let eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt)\n\n    let limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true\n\n    // if rows can't expand to fill fixed height, can't do balanced-height event limit\n    // TODO: best place to normalize these options?\n    if (limitViaBalanced && !expandRows) {\n      limitViaBalanced = false\n      dayMaxEventRows = null\n      dayMaxEvents = null\n    }\n\n    let classNames = [\n      'fc-daygrid-body',\n      limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced', // will all row heights be equal?\n      expandRows ? '' : 'fc-daygrid-body-natural', // will height of one row depend on the others?\n    ]\n\n    return (\n      <div\n        className={classNames.join(' ')}\n        ref={this.handleRootEl}\n        style={{\n          // these props are important to give this wrapper correct dimensions for interactions\n          // TODO: if we set it here, can we avoid giving to inner tables?\n          width: props.clientWidth,\n          minWidth: props.tableMinWidth,\n        }}\n      >\n        <NowTimer unit=\"day\">\n          {(nowDate: DateMarker, todayRange: DateRange) => (\n            <Fragment>\n              <table\n                role=\"presentation\"\n                className=\"fc-scrollgrid-sync-table\"\n                style={{\n                  width: props.clientWidth,\n                  minWidth: props.tableMinWidth,\n                  height: expandRows ? props.clientHeight : '',\n                }}\n              >\n                {props.colGroupNode}\n                <tbody role=\"presentation\">\n                  {props.cells.map((cells, row) => (\n                    <TableRow\n                      ref={this.rowRefs.createRef(row)}\n                      key={\n                        cells.length\n                          ? cells[0].date.toISOString() /* best? or put key on cell? or use diff formatter? */\n                          : row // in case there are no cells (like when resource view is loading)\n                      }\n                      showDayNumbers={rowCnt > 1}\n                      showWeekNumbers={props.showWeekNumbers}\n                      todayRange={todayRange}\n                      dateProfile={dateProfile}\n                      cells={cells}\n                      renderIntro={props.renderRowIntro}\n                      businessHourSegs={businessHourSegsByRow[row]}\n                      eventSelection={props.eventSelection}\n                      bgEventSegs={bgEventSegsByRow[row].filter(isSegAllDay) /* hack */}\n                      fgEventSegs={fgEventSegsByRow[row]}\n                      dateSelectionSegs={dateSelectionSegsByRow[row]}\n                      eventDrag={eventDragByRow[row]}\n                      eventResize={eventResizeByRow[row]}\n                      dayMaxEvents={dayMaxEvents}\n                      dayMaxEventRows={dayMaxEventRows}\n                      clientWidth={props.clientWidth}\n                      clientHeight={props.clientHeight}\n                      forPrint={props.forPrint}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            </Fragment>\n          )}\n        </NowTimer>\n      </div>\n    )\n  }\n\n  handleRootEl = (rootEl: HTMLElement | null) => {\n    this.rootEl = rootEl\n\n    if (rootEl) {\n      this.context.registerInteractiveComponent(this, {\n        el: rootEl,\n        isHitComboAllowed: this.props.isHitComboAllowed,\n      })\n    } else {\n      this.context.unregisterInteractiveComponent(this)\n    }\n  }\n\n  // Hit System\n  // ----------------------------------------------------------------------------------------------------\n\n  prepareHits() {\n    this.rowPositions = new PositionCache(\n      this.rootEl,\n      this.rowRefs.collect().map((rowObj) => rowObj.getCellEls()[0]), // first cell el in each row. TODO: not optimal\n      false,\n      true, // vertical\n    )\n\n    this.colPositions = new PositionCache(\n      this.rootEl,\n      this.rowRefs.currentMap[0].getCellEls(), // cell els in first row\n      true, // horizontal\n      false,\n    )\n  }\n\n  queryHit(positionLeft: number, positionTop: number): Hit {\n    let { colPositions, rowPositions } = this\n    let col = colPositions.leftToIndex(positionLeft)\n    let row = rowPositions.topToIndex(positionTop)\n\n    if (row != null && col != null) {\n      let cell = this.props.cells[row][col]\n\n      return {\n        dateProfile: this.props.dateProfile,\n        dateSpan: {\n          range: this.getCellRange(row, col),\n          allDay: true,\n          ...cell.extraDateSpan,\n        },\n        dayEl: this.getCellEl(row, col),\n        rect: {\n          left: colPositions.lefts[col],\n          right: colPositions.rights[col],\n          top: rowPositions.tops[row],\n          bottom: rowPositions.bottoms[row],\n        },\n        layer: 0,\n      }\n    }\n\n    return null\n  }\n\n  private getCellEl(row, col) {\n    return this.rowRefs.currentMap[row].getCellEls()[col] // TODO: not optimal\n  }\n\n  private getCellRange(row, col) {\n    let start = this.props.cells[row][col].date\n    let end = addDays(start, 1)\n    return { start, end }\n  }\n}\n\nfunction isSegAllDay(seg: TableSeg) {\n  return seg.eventRange.def.allDay\n}\n","import { DayTableModel, DateRange, Slicer } from '@fullcalendar/common'\nimport { TableSeg } from './TableSeg'\n\nexport class DayTableSlicer extends Slicer<TableSeg, [DayTableModel]> {\n  forceDayIfListItem = true\n\n  sliceRange(dateRange: DateRange, dayTableModel: DayTableModel): TableSeg[] {\n    return dayTableModel.sliceRange(dateRange)\n  }\n}\n","import {\n  createElement, createRef, VNode,\n  EventStore,\n  EventUiHash,\n  DateSpan,\n  EventInteractionState,\n  DayTableModel,\n  Duration,\n  DateComponent,\n  ViewContext,\n  RefObject,\n  CssDimValue,\n  DateProfile,\n} from '@fullcalendar/common'\nimport { Table } from './Table'\nimport { DayTableSlicer } from './DayTableSlicer'\n\nexport interface DayTableProps {\n  dateProfile: DateProfile,\n  dayTableModel: DayTableModel\n  nextDayThreshold: Duration\n  businessHours: EventStore\n  eventStore: EventStore\n  eventUiBases: EventUiHash\n  dateSelection: DateSpan | null\n  eventSelection: string\n  eventDrag: EventInteractionState | null\n  eventResize: EventInteractionState | null\n  colGroupNode: VNode\n  tableMinWidth: CssDimValue\n  renderRowIntro?: () => VNode\n  dayMaxEvents: boolean | number\n  dayMaxEventRows: boolean | number\n  expandRows: boolean\n  showWeekNumbers: boolean\n  headerAlignElRef?: RefObject<HTMLElement> // for more popover alignment\n  clientWidth: number | null\n  clientHeight: number | null\n  forPrint: boolean\n}\n\nexport class DayTable extends DateComponent<DayTableProps, ViewContext> {\n  private slicer = new DayTableSlicer()\n  private tableRef = createRef<Table>()\n\n  render() {\n    let { props, context } = this\n\n    return (\n      <Table\n        ref={this.tableRef}\n        {...this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel)}\n        dateProfile={props.dateProfile}\n        cells={props.dayTableModel.cells}\n        colGroupNode={props.colGroupNode}\n        tableMinWidth={props.tableMinWidth}\n        renderRowIntro={props.renderRowIntro}\n        dayMaxEvents={props.dayMaxEvents}\n        dayMaxEventRows={props.dayMaxEventRows}\n        showWeekNumbers={props.showWeekNumbers}\n        expandRows={props.expandRows}\n        headerAlignElRef={props.headerAlignElRef}\n        clientWidth={props.clientWidth}\n        clientHeight={props.clientHeight}\n        forPrint={props.forPrint}\n      />\n    )\n  }\n}\n","import {\n  createElement, createRef,\n  DayHeader,\n  DateProfileGenerator,\n  DateProfile,\n  memoize,\n  DaySeriesModel,\n  DayTableModel,\n  ChunkContentCallbackArgs,\n} from '@fullcalendar/common'\nimport { TableView } from './TableView'\nimport { DayTable } from './DayTable'\n\nexport class DayTableView extends TableView {\n  private buildDayTableModel = memoize(buildDayTableModel)\n  private headerRef = createRef<DayHeader>()\n  private tableRef = createRef<DayTable>()\n\n  render() {\n    let { options, dateProfileGenerator } = this.context\n    let { props } = this\n    let dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator)\n\n    let headerContent = options.dayHeaders && (\n      <DayHeader\n        ref={this.headerRef}\n        dateProfile={props.dateProfile}\n        dates={dayTableModel.headerDates}\n        datesRepDistinctDays={dayTableModel.rowCnt === 1}\n      />\n    )\n\n    let bodyContent = (contentArg: ChunkContentCallbackArgs) => (\n      <DayTable\n        ref={this.tableRef}\n        dateProfile={props.dateProfile}\n        dayTableModel={dayTableModel}\n        businessHours={props.businessHours}\n        dateSelection={props.dateSelection}\n        eventStore={props.eventStore}\n        eventUiBases={props.eventUiBases}\n        eventSelection={props.eventSelection}\n        eventDrag={props.eventDrag}\n        eventResize={props.eventResize}\n        nextDayThreshold={options.nextDayThreshold}\n        colGroupNode={contentArg.tableColGroupNode}\n        tableMinWidth={contentArg.tableMinWidth}\n        dayMaxEvents={options.dayMaxEvents}\n        dayMaxEventRows={options.dayMaxEventRows}\n        showWeekNumbers={options.weekNumbers}\n        expandRows={!props.isHeightAuto}\n        headerAlignElRef={this.headerElRef}\n        clientWidth={contentArg.clientWidth}\n        clientHeight={contentArg.clientHeight}\n        forPrint={props.forPrint}\n      />\n    )\n\n    return options.dayMinWidth\n      ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth)\n      : this.renderSimpleLayout(headerContent, bodyContent)\n  }\n}\n\nexport function buildDayTableModel(dateProfile: DateProfile, dateProfileGenerator: DateProfileGenerator) {\n  let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator)\n\n  return new DayTableModel(\n    daySeries,\n    /year|month|week/.test(dateProfile.currentRangeUnit),\n  )\n}\n","import {\n  DateProfileGenerator,\n  addWeeks, diffWeeks,\n  DateRange,\n} from '@fullcalendar/common'\n\nexport class TableDateProfileGenerator extends DateProfileGenerator {\n  // Computes the date range that will be rendered.\n  buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay): DateRange {\n    let { dateEnv } = this.props\n    let renderRange = super.buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay)\n    let start = renderRange.start\n    let end = renderRange.end\n    let endOfWeek\n\n    // year and month views should be aligned with weeks. this is already done for week\n    if (/^(year|month)$/.test(currentRangeUnit)) {\n      start = dateEnv.startOfWeek(start)\n\n      // make end-of-week if not already\n      endOfWeek = dateEnv.startOfWeek(end)\n      if (endOfWeek.valueOf() !== end.valueOf()) {\n        end = addWeeks(endOfWeek, 1)\n      }\n    }\n\n    // ensure 6 weeks\n    if (\n      this.props.monthMode &&\n      this.props.fixedWeekCount\n    ) {\n      let rowCnt = Math.ceil( // could be partial weeks due to hiddenDays\n        diffWeeks(start, end),\n      )\n      end = addWeeks(end, 6 - rowCnt)\n    }\n\n    return { start, end }\n  }\n}\n"],"sourceRoot":""}