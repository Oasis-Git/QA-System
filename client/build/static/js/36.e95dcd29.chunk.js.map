{"version":3,"sources":["hooks/user/useOrderList.ts","pages/user/OrderList.tsx","components/general/Page.tsx","components/general/HeaderBreadcrumbs.tsx","components/general/Label.tsx","types/QuestionStatus.ts","components/user/question-list/ProductListHead.tsx","components/user/question-list/ProductListToolbar.tsx","components/user/question-list/Countdown.tsx"],"names":["useOrderList","page","size","useState","questions","setQuestions","count","setCount","refreshQuestions","useCallback","axios","get","PATH_API_USER","orderList","params","perpage","then","response","content","data","map","q_","status","statusName","name","catch","exception","console","log","useEffect","TABLE_HEAD","id","label","alignRight","descendingComparator","a","b","orderBy","QuestionList","theme","useTheme","setPage","order","setOrder","filterName","setFilterName","rowsPerPage","setRowsPerPage","setOrderBy","navigate","useNavigate","products","filteredProducts","array","comparator","query","stabilizedThis","el","index","sort","filter","_product","title","toLowerCase","indexOf","applySortFilter","getComparator","Page","Container","maxWidth","HeaderBreadcrumbs","heading","links","Card","onFilterName","TableContainer","sx","minWidth","Table","headLabel","rowCount","length","onRequestSort","property","TableBody","row","questioner","respondent","timeout","TableRow","hover","tabIndex","role","selected","onClick","handleClick","TableCell","component","scope","padding","Box","py","display","alignItems","Typography","variant","noWrap","style","Label","palette","mode","color","duration","moment","TablePagination","rowsPerPageOptions","onPageChange","event","value","onRowsPerPageChange","parseInt","target","props","children","other","action","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","href","RootStyle","styled","ownerState","isLight","height","lineHeight","borderRadius","cursor","whiteSpace","justifyContent","spacing","grey","fontSize","typography","pxToRem","fontFamily","backgroundColor","fontWeight","fontWeightBold","contrastText","main","styleFilled","border","styleOutlined","alpha","styleGhost","text","primary","secondary","common","white","ProductListHead","TableHead","headCell","align","sortDirection","TableSortLabel","hideSortIcon","active","direction","visuallyHidden","Toolbar","SearchStyle","OutlinedInput","width","transition","transitions","create","easing","easeInOut","shorter","boxShadow","customShadows","z8","borderWidth","borderColor","ProductListToolbar","bgcolor","onChange","e","placeholder","startAdornment","InputAdornment","position","Icon","icon","searchFill","Tooltip","IconButton","roundRefreshList","Countdown","time","setTime","setTimeout","asSeconds","Math","floor","days","hours","minutes","seconds"],"mappings":"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","file":"static/js/36.e95dcd29.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { PATH_API_USER } from \"../../routes/paths\";\nimport { Question } from \"../../types/Question\";\nimport { QuestionStatus, statusName } from \"../../types/QuestionStatus\";\n\ntype Question_ = {\n  title: string;\n  questioner: string;\n  respondent: string;\n  timeout: string;\n  status: { name: QuestionStatus };\n  id: string;\n};\n\nconst useOrderList = (\n  page: number,\n  size: number\n): [[Question[], number], () => void] => {\n  const [questions, setQuestions] = useState<Question[]>([]);\n  const [count, setCount] = useState(0);\n  const refreshQuestions = useCallback(() => {\n    axios\n      .get(PATH_API_USER.orderList, { params: { page, perpage: size } })\n      .then(response => {\n        const content = response.data.data.questions as Question_[];\n        setQuestions(\n          content.map(q_ => {\n            const q: Question = {\n              ...q_,\n              status: statusName(q_.status.name),\n            };\n            return q;\n          })\n        );\n        setCount(response.data.data.count);\n      })\n      .catch(exception => {\n        console.log(exception);\n        throw exception;\n      });\n  }, [page, size]);\n  useEffect(refreshQuestions, [refreshQuestions]);\n  return [[questions, count], refreshQuestions];\n};\nexport default useOrderList;\n","import {\n  Box,\n  Card,\n  Container,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\n// material\nimport { useTheme } from \"@mui/material/styles\";\nimport { filter } from \"lodash\";\nimport { useState } from \"react\";\n// components\nimport Page from \"../../components/general/Page\";\nimport Label from \"../../components/general/Label\";\nimport HeaderBreadcrumbs from \"../../components/general/HeaderBreadcrumbs\";\nimport {\n  ProductListHead,\n  ProductListToolbar,\n  Countdown,\n} from \"../../components/user/question-list\";\nimport useOrderList from \"../../hooks/user/useOrderList\";\n// redux\n// @types\nimport { Question } from \"../../types/Question\";\nimport { useNavigate } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst TABLE_HEAD = [\n  { id: \"title\", label: \"题目\", alignRight: false },\n  { id: \"questioner\", label: \"提问者\", alignRight: false },\n  { id: \"respondent\", label: \"回答者\", alignRight: false },\n  { id: \"status\", label: \"问题状态\", alignRight: false },\n  { id: \"timeout\", label: \"剩余时间\", alignRight: false },\n];\n\nfunction descendingComparator(a: Anonymous, b: Anonymous, orderBy: string) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\ntype Anonymous = Record<string | number, string>;\n\nfunction getComparator(order: string, orderBy: string) {\n  return order === \"desc\"\n    ? (a: Anonymous, b: Anonymous) => descendingComparator(a, b, orderBy)\n    : (a: Anonymous, b: Anonymous) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(\n  array: Question[],\n  comparator: (a: Question, b: Question) => number,\n  query: string\n) {\n  const stabilizedThis = array.map((el, index) => [el, index] as const);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n\n  if (query) {\n    return filter(\n      array,\n      _product =>\n        _product.title.toLowerCase().indexOf(query.toLowerCase()) !== -1\n    );\n  }\n\n  return stabilizedThis.map(el => el[0]);\n}\n\n// ----------------------------------------------------------------------\n\nexport default function QuestionList(): JSX.Element {\n  const theme = useTheme();\n\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState<\"asc\" | \"desc\">(\"asc\");\n  const [filterName, setFilterName] = useState(\"\");\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [orderBy, setOrderBy] = useState(\"status\");\n  const navigate = useNavigate();\n\n  const [[products, count]] = useOrderList(page, rowsPerPage);\n\n  const handleRequestSort = (property: string) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleClick = (status: string, id: string) => {\n    if (status === \"聊天中\" || status === \"订单完成\") {\n      navigate(\"/user/dashboard/chat/\" + id);\n    } else if (status === \"已回答\") {\n      navigate(\"/user/dashboard/orders/\" + id + \"/detail\");\n    } else {\n      navigate(\"/user/dashboard/orders/\" + id + \"/info\");\n    }\n    //TODO: 编辑中怎么办？\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (filterName: string) => {\n    setFilterName(filterName);\n  };\n\n  const filteredProducts = applySortFilter(\n    products,\n    getComparator(order, orderBy),\n    filterName\n  );\n\n  return (\n    <Page title=\"Order List\">\n      <Container maxWidth={\"lg\"}>\n        <HeaderBreadcrumbs\n          heading=\"订单列表\"\n          links={[{ name: \"Order List\" }]}\n        />\n\n        <Card>\n          <ProductListToolbar\n            filterName={filterName}\n            onFilterName={handleFilterByName}\n          />\n\n          <TableContainer sx={{ minWidth: 800 }}>\n            <Table>\n              <ProductListHead\n                order={order}\n                orderBy={orderBy}\n                headLabel={TABLE_HEAD}\n                rowCount={products.length}\n                onRequestSort={handleRequestSort}\n              />\n              <TableBody>\n                {filteredProducts.map((row, index) => {\n                  const { title, questioner, respondent, status, timeout, id } =\n                    row;\n\n                  return (\n                    <TableRow\n                      hover\n                      key={index}\n                      tabIndex={-1}\n                      role=\"checkbox\"\n                      selected={false}\n                      aria-checked={false}\n                      onClick={() => handleClick(status, id)}\n                    >\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Box\n                          sx={{\n                            py: 2,\n                            display: \"flex\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {title}\n                          </Typography>\n                        </Box>\n                      </TableCell>\n                      <TableCell style={{ minWidth: 160 }}>\n                        {questioner}\n                      </TableCell>\n                      <TableCell style={{ minWidth: 160 }}>\n                        {respondent}\n                      </TableCell>\n                      <TableCell style={{ minWidth: 160 }}>\n                        <Label\n                          variant={\n                            theme.palette.mode === \"light\" ? \"ghost\" : \"filled\"\n                          }\n                          color={\n                            (status === \"订单失败\" && \"error\") ||\n                            (status === \"待审核\" && \"warning\") ||\n                            (status === \"待接单\" && \"warning\") ||\n                            (status === \"编辑中\" && \"warning\") ||\n                            (status === \"订单完成\" && \"success\") ||\n                            (status === \"回答中\" && \"success\") ||\n                            (status === \"聊天中\" && \"success\") ||\n                            \"success\"\n                          }\n                        >\n                          {status}\n                        </Label>\n                      </TableCell>\n                      <TableCell style={{ minWidth: 160 }}>\n                        <Countdown duration={moment.duration(timeout)} />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={count}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={(event, value) => setPage(value)}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n","import { Helmet } from \"react-helmet-async\";\nimport { ReactNode } from \"react\";\nimport { Box, BoxProps } from \"@mui/material\";\n\ninterface PageProps extends BoxProps {\n  title?: string;\n  children: ReactNode;\n}\n\nexport default function Page(props: PageProps): JSX.Element {\n  const { title, children, ...other } = props;\n  return (\n    <Box {...other}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </Box>\n  );\n}\n","import { ReactNode } from \"react\";\nimport { isString } from \"lodash\";\n// material\nimport { Box, Typography, Link } from \"@mui/material\";\n//\nimport MBreadcrumbs from \"../@material-extend/MBreadcrumbs\";\nimport { MBreadcrumbsProps } from \"../@material-extend/MBreadcrumbs\";\n\ninterface HeaderBreadcrumbsProps extends MBreadcrumbsProps {\n  action?: ReactNode;\n  heading: string;\n  moreLink?: string | string[];\n}\n\nexport default function HeaderBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink = \"\" || [],\n  sx,\n  ...other\n}: HeaderBreadcrumbsProps): JSX.Element {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map(href => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              sx={{ display: \"table\" }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","// material\nimport { alpha, Theme, useTheme, styled } from \"@mui/material/styles\";\nimport { BoxProps } from \"@mui/material\";\n// @types\nimport { ColorSchema } from \"../../types/palette\";\n\ntype LabelColor =\n  | \"default\"\n  | \"primary\"\n  | \"secondary\"\n  | \"info\"\n  | \"success\"\n  | \"warning\"\n  | \"error\";\n\ntype LabelVariant = \"filled\" | \"outlined\" | \"ghost\";\n\nconst RootStyle = styled(\"span\")(\n  ({\n    theme,\n    ownerState,\n  }: {\n    theme: Theme;\n    ownerState: {\n      color: LabelColor;\n      variant: LabelVariant;\n    };\n  }) => {\n    const isLight = theme.palette.mode === \"light\";\n    const { color, variant } = ownerState;\n\n    const styleFilled = (color: ColorSchema) => ({\n      color: theme.palette[color].contrastText,\n      backgroundColor: theme.palette[color].main,\n    });\n\n    const styleOutlined = (color: ColorSchema) => ({\n      color: theme.palette[color].main,\n      backgroundColor: \"transparent\",\n      border: `1px solid ${theme.palette[color].main}`,\n    });\n\n    const styleGhost = (color: ColorSchema) => ({\n      color: theme.palette[color][isLight ? \"dark\" : \"light\"],\n      backgroundColor: alpha(theme.palette[color].main, 0.16),\n    });\n\n    return {\n      height: 22,\n      minWidth: 22,\n      lineHeight: 0,\n      borderRadius: 8,\n      cursor: \"default\",\n      alignItems: \"center\",\n      whiteSpace: \"nowrap\",\n      display: \"inline-flex\",\n      justifyContent: \"center\",\n      padding: theme.spacing(0, 1),\n      color: theme.palette.grey[800],\n      fontSize: theme.typography.pxToRem(12),\n      fontFamily: theme.typography.fontFamily,\n      backgroundColor: theme.palette.grey[300],\n      fontWeight: theme.typography.fontWeightBold,\n\n      ...(color !== \"default\"\n        ? {\n            ...(variant === \"filled\" && { ...styleFilled(color) }),\n            ...(variant === \"outlined\" && { ...styleOutlined(color) }),\n            ...(variant === \"ghost\" && { ...styleGhost(color) }),\n          }\n        : {\n            ...(variant === \"outlined\" && {\n              backgroundColor: \"transparent\",\n              color: theme.palette.text.primary,\n              border: `1px solid ${theme.palette.grey[500_32]}`,\n            }),\n            ...(variant === \"ghost\" && {\n              color: isLight\n                ? theme.palette.text.secondary\n                : theme.palette.common.white,\n              backgroundColor: theme.palette.grey[500_16],\n            }),\n          }),\n    };\n  }\n);\n\ninterface LabelProps extends BoxProps {\n  color?: LabelColor;\n  variant?: LabelVariant;\n}\n\nexport default function Label({\n  color = \"default\",\n  variant = \"ghost\",\n  children,\n  sx,\n}: LabelProps): JSX.Element {\n  const theme = useTheme();\n\n  return (\n    <RootStyle ownerState={{ color, variant }} sx={sx} theme={theme}>\n      {children}\n    </RootStyle>\n  );\n}\n","import { QuestionStatus as QuestionsStatus_ } from \"./Question\";\n\nexport type QuestionStatus =\n  | \"CENSORING\"\n  | \"EDITING\"\n  | \"ACCEPTING\"\n  | \"ANSWERING\"\n  | \"ANSWERED\"\n  | \"CHATTING\"\n  | \"FAILED\"\n  | \"FINISHED\";\n\nexport const statusName = (status: QuestionStatus): QuestionsStatus_ => {\n  switch (status) {\n    case \"CENSORING\":\n      return \"待审核\";\n    case \"EDITING\":\n      return \"编辑中\";\n    case \"ACCEPTING\":\n      return \"待接单\";\n    case \"ANSWERING\":\n      return \"回答中\";\n    case \"ANSWERED\":\n      return \"已回答\";\n    case \"CHATTING\":\n      return \"聊天中\";\n    case \"FAILED\":\n      return \"订单失败\";\n    case \"FINISHED\":\n      return \"订单完成\";\n  }\n};\n","// material\nimport { visuallyHidden } from \"@mui/utils\";\nimport {\n  Box,\n  TableRow,\n  TableCell,\n  TableHead,\n  TableSortLabel,\n} from \"@mui/material\";\n\n// ----------------------------------------------------------------------\n\ntype ProductListHeadProps = {\n  order: \"asc\" | \"desc\";\n  orderBy: string;\n  rowCount: number;\n  headLabel: { id: string; label: string; alignRight: boolean }[];\n  onRequestSort: (property: string) => void;\n};\n\nexport default function ProductListHead({\n  order,\n  orderBy,\n  headLabel,\n  onRequestSort,\n}: ProductListHeadProps): JSX.Element {\n  return (\n    <TableHead>\n      <TableRow>\n        {headLabel.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.alignRight ? \"right\" : \"left\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              hideSortIcon\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={() => onRequestSort(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box sx={{ ...visuallyHidden }}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import { Icon } from \"@iconify/react\";\nimport searchFill from \"@iconify/icons-eva/search-fill\";\nimport roundRefreshList from \"@iconify/icons-ic/round-refresh\";\n// material\nimport { useTheme, styled } from \"@mui/material/styles\";\nimport {\n  Box,\n  Toolbar,\n  Tooltip,\n  IconButton,\n  InputAdornment,\n  OutlinedInput,\n} from \"@mui/material\";\n\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  padding: theme.spacing(0, 1, 0, 3),\n}));\n\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\n  width: 240,\n  transition: theme.transitions.create([\"box-shadow\", \"width\"], {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n  \"&.Mui-focused\": { width: 320, boxShadow: theme.customShadows.z8 },\n  \"& fieldset\": {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`,\n  },\n}));\n\ntype ProductListToolbarProps = {\n  filterName: string;\n  onFilterName: (value: string) => void;\n};\n\nexport default function ProductListToolbar({\n  filterName,\n  onFilterName,\n}: ProductListToolbarProps): JSX.Element {\n  const theme = useTheme();\n  const isLight = theme.palette.mode === \"light\";\n\n  return (\n    <RootStyle\n      sx={{\n        ...{\n          color: isLight ? \"primary.main\" : \"text.primary\",\n          bgcolor: isLight ? \"primary.lighter\" : \"primary.dark\",\n        },\n      }}\n    >\n      <SearchStyle\n        value={filterName}\n        onChange={e => onFilterName(e.target.value)}\n        placeholder=\"Search question...\"\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <Box\n              component={Icon}\n              icon={searchFill}\n              sx={{ color: \"text.enabled\" }}\n            />\n          </InputAdornment>\n        }\n      />\n\n      <Tooltip title=\"刷新\">\n        <IconButton>\n          <Icon icon={roundRefreshList} />\n        </IconButton>\n      </Tooltip>\n    </RootStyle>\n  );\n}\n","import moment, { Duration } from \"moment\";\nimport React, { useState, useEffect } from \"react\";\n\nexport default function Countdown(props: { duration: Duration }): JSX.Element {\n  const [time, setTime] = useState(props.duration);\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (time.asSeconds() > 0) {\n        setTime(time => moment.duration(time.asSeconds() - 1, \"seconds\"));\n      }\n    }, 1000);\n  }, [time]);\n\n  return time.asSeconds() > 0 ? (\n    <div>\n      {Math.floor(time.days()) +\n        \"天\" +\n        Math.floor(time.hours()) +\n        \"小时\" +\n        Math.floor(time.minutes()) +\n        \"分\" +\n        Math.floor(time.seconds()) +\n        \"秒\"}\n    </div>\n  ) : (\n    <div>{\"已过期\"}</div>\n  );\n}\n"],"sourceRoot":""}